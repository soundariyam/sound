<?php if (!defined('BASEPATH')) { exit('No direct script access allowed'); }
	class Production extends DOT_Controller
	{
		public function __construct(){
			parent::__construct();
			//$this->load->library('phpqrcode/qrlib');
			require_once APPPATH.'third_party/phpqrcode/qrlib.php';
		}
		public function schedule($id=''){

			if ($this->input->is_ajax_request()) {
				$this->load->model('Production_schedule');
				$list = $this->Production_schedule->get_datatables();
				$data = array();
				$no = $_POST['start'];
				foreach ($list as $pr) {
					$totqty1 = $this->Basic_model->get_data('production_data',array('workorder_no'=>$pr->production_order),NULL,NULL,'SUM(qty) AS value_sum')[0]->value_sum; 
					$style = '';
					
					if($totqty1 == '' || $totqty1 == NULL)
					{
						$totqty2 = $this->Basic_model->get_data('sfg_data',array('workorder_no'=>$pr->production_order),NULL,NULL,'SUM(qty) AS value_sum')[0]->value_sum; 
						
						$totqty = $totqty2;
					} else {
						$totqty = $totqty1;
					}
					
					if($totqty >= $pr->quantity){
                        $style = 'td_clr';
                    }
					
					if($totqty == ''){
						$totqty = '0.000';
					}
					$no++;
					$row = array();
					$row[] = $no;
					$row[] = $pr->work_center;
					$row[] = $pr->production_order;
					$row[] = $pr->material;
					$row[] = $pr->component;
					$row[] = $pr->component_description;
					$row[] = $pr->quantity; 
					$row[] = $pr->norminal_value; 
					$row[] = '<span class="'.$style.'">'.$totqty.'</span>'; 
					$row[] = date('d-m-Y',strtotime($pr->start_date)); 
					$row[] = date('d-m-Y',strtotime($pr->end_date)); 
					$row[] = $pr->shift; 
					$row[] = $pr->toloc; 
					$row[] = $pr->toloc2; 
					$row[] = $pr->location; 
					$data[] = $row;
				}
 
				$output = array(
                        "draw" => $_POST['draw'],
                        "recordsTotal" => $this->Production_schedule->count_all(),
                        "recordsFiltered" => $this->Production_schedule->count_filtered(),
                        "data" => $data,
                );
				//output to json format
				echo json_encode($output); exit;
			}
			
			$data = array();
			$data['content'] 	= $this->load->view('production/schedule', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		public function issue_barcode($id=''){

			/* if ($this->input->is_ajax_request()) {
				$this->load->model('Issue_barcode');
				$list = $this->Issue_barcode->get_datatables();
				$data = array();
				$no = $_POST['start']; 
				//print_r($this->db->last_query()); die();
				foreach ($list as $pr) {
					
					//if($pr->313_date == ''){
					//	$dte = '';
					//} else{
					//	//$dte = $pr->313_date;
					//}
					
					$no++;
					$row = array();
					$row[] = $no;
					$row[] = '<a class="btn btn-primary arrivalsub btn-sm" onClick="print_preview('.$pr->id.');">Preview</a>';
					$row[] = $pr->workorder_no;
					$row[] = $pr->component;
					$row[] = $pr->heatno;
					$row[] = $pr->insp_lot_no; 
					$row[] = $pr->batch; 
					$row[] = $pr->scheduleunique; 
					$row[] = $pr->material; 
					$row[] = $pr->transfer_qty; 
					$row[] = $pr->{'313_date'}; 
					$row[] = $pr->production_no_313; 
					$row[] = $pr->{'315_date'}; 
					$row[] = $pr->production_no_315; 
					$row[] = $pr->toloc; 
					$data[] = $row;
				}
 
				$output = array(
                        "draw" => $_POST['draw'],
                        "recordsTotal" => $this->Issue_barcode->count_all(),
                        "recordsFiltered" => $this->Issue_barcode->count_filtered(),
                        "data" => $data,
                );
				//output to json format
				echo json_encode($output); exit;
			}	*/	

			$data = array();	
			
			$cur_date = date('Y-m-d', strtotime(' - 90 days'));
			
			$join = array('issue_master as b'=>array('b.production_order=a.workorder_no'),
						'rm_accepted as c'=>array('c.uniquecode=a.uniquecode'),
			);
			$data['record'] 	= $this->Basic_model->get_data(array('issue_barcode_313 as a',array('id','DESC')),array('a.313_date >= '=> $cur_date),NULL,$join,array('distinct(a.id)','a.uniquecode','a.workorder_no','b.component','a.heatno','c.insp_lot_no','c.batch','b.scheduleunique','b.material','a.transfer_qty','a.313_date','a.production_no_313','a.315_date','a.production_no_315','b.toloc','a.uniquecode'));
			
			$data['content'] 	= $this->load->view('production/issue_barcode', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		
		public function cancel_313($id=''){
			
			$data = array();
			
			$join = array('issue_313 as b'=>array('b.ib_id=a.id'),
						'issue_master as c'=>array('c.production_order=a.workorder_no'),
			);
			$data['record'] 	= $this->Basic_model->get_data(array('issue_barcode_313 as a',array('id','DESC')),array('a.sap_status_315'=>'0'),NULL,$join,array('a.*','b.material','b.batch','b.from_rack','b.to_rack','c.material as part_no'));
			//print_r($this->db->last_query()); die();
			$data['content'] 	= $this->load->view('production/cancel_313', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		
		public function cancelling_313($id=''){
			
			
			$id =  $this->input->post('id');
	
	
			$check = $this->Basic_model->get_data('issue_barcode_313',array('id'=>$id));
			
			
			
			if($check[0]->production_no_315 != '' || $check[0]->production_no_315 != NULL){
				echo "Cannot delete, 315 has been done against this 313 Issue";
			} else{

				$join = array('issue_313 as b'=>array('b.ib_id=a.id'),
						'issue_master as c'=>array('c.production_order=a.workorder_no'),
				);
				
				$select = $this->Basic_model->get_data(array('issue_barcode_313 as a',array('id','DESC')),array('a.id'=>$id),NULL,$join,array('a.*','b.material','b.batch','b.from_rack','b.to_rack','c.material as part_no'));
				
				//print_r($this->db->last_query()); die();
				
				
				$insp = explode(":",$select[0]->uniquecode);
				$from_rack = explode("/",$select[0]->from_rack);
				$stno = $from_rack[0];
				$pdt = date('Ymd');
				
				$htmlcode = "http://192.168.16.3:8080/sap/mtrltrace/automigo.php?pdt=".$pdt."&htxt=".$select[0]->uniquecode1."&mvt=314&ptno=".$select[0]->material."&stno=".$stno."&btno=".$select[0]->batch."&qty=".$select[0]->transfer_qty."&itxt=".$select[0]->uniquecode1."&tost=".$select[0]->to_rack."&callback=";
				
				echo $htmlcode;
					
			}	
			
			
			
		}
		
		
		public function rebinning_313($id=''){
			
			
			$id =  $this->input->post('id');
			$user =  $this->input->post('user');
			$doc_313 =  $this->input->post('doc_313');
			
			$select = $this->Basic_model->get_data('issue_313',array('ib_id'=>$id));
			
			$insert_data = array('doc_314'=>$doc_313,'deleted_by'=>$user,'issue_313_id'=>$select[0]->id,'ib_id'=>$select[0]->ib_id,'rm_id'=>$select[0]->rm_id,'from_rack'=>$select[0]->from_rack,'from_qty'=>$select[0]->from_qty,'pos'=>$select[0]->pos,'to_rack'=>$select[0]->to_rack,'transfer_qty'=>$select[0]->transfer_qty,'unit'=>$select[0]->unit,'workorder_no'=>$select[0]->workorder_no,'material'=>$select[0]->material,'heat_no'=>$select[0]->heat_no,'batch'=>$select[0]->batch,'uniquecode'=>$select[0]->uniquecode,'uniquecode_1'=>$select[0]->uniquecode_1,'production_no_313'=>$select[0]->production_no_313,'date_313'=>$select[0]->date_313,'production_no_315'=>$select[0]->production_no_315,'token_313'=>$select[0]->token_313,'token_315'=>$select[0]->token_315,'status_313'=>$select[0]->status_313,'inserted_datetime'=>date('Y-m-d H:i:s'));
			
			$insert_id = $this->Basic_model->insert_data('rebin_313',$insert_data);
					
			if($insert_id != ''){
				$check_rm = $this->Basic_model->get_data('rm_accepted',array('id'=>$select[0]->rm_id));
				
				$updated_quantity = $check_rm[0]->quantity + $select[0]->transfer_qty;
				
				$this->Basic_model->update_data('rm_accepted',array('id'=>$select[0]->rm_id),array('quantity'=>$updated_quantity,'ref_id'=>$insert_id,'ref_doc'=>'Check rebin_313 table for cancelled 313 data.','sap_movment'=>NULL,'production_no'=>NULL)); 
				
				
				$rm_up_ins1 = array('po_number'=>$check_rm[0]->po_number,'invoice_no'=>$check_rm[0]->invoice_no,'invoice_date'=>$check_rm[0]->invoice_date,'batch'=>$check_rm[0]->batch,'material_code'=>$check_rm[0]->material_code,'heat_no'=>$check_rm[0]->heat_no,'color_code'=>$check_rm[0]->color_code,'quantity'=>$check_rm[0]->quantity,'unit'=>$check_rm[0]->unit,'insp_lot_no'=>$check_rm[0]->insp_lot_no,'rack_id'=>$check_rm[0]->rack_id,'rack_status'=>$check_rm[0]->rack_status,'component_status'=>$check_rm[0]->component_status,'token'=>$check_rm[0]->token,'inserted_time'=>$check_rm[0]->inserted_time,'updated_date'=>$check_rm[0]->updated_date,'uniquecode'=>$check_rm[0]->uniquecode,'sap_movment'=>$check_rm[0]->sap_movment,'production_no'=>$check_rm[0]->production_no,'ref_id'=>$check_rm[0]->ref_id,'ref_doc'=>$check_rm[0]->ref_doc);
				
				$iruq1 = $this->Basic_model->insert_data('rm_accepted_updates',$rm_up_ins1);
				
				$rm_up_ins2 = array('po_number'=>$check_rm[0]->po_number,'invoice_no'=>$check_rm[0]->invoice_no,'invoice_date'=>$check_rm[0]->invoice_date,'batch'=>$check_rm[0]->batch,'material_code'=>$check_rm[0]->material_code,'heat_no'=>$check_rm[0]->heat_no,'color_code'=>$check_rm[0]->color_code,'quantity'=>$updated_quantity,'unit'=>$check_rm[0]->unit,'insp_lot_no'=>$check_rm[0]->insp_lot_no,'rack_id'=>$check_rm[0]->rack_id,'rack_status'=>$check_rm[0]->rack_status,'component_status'=>$check_rm[0]->component_status,'token'=>$check_rm[0]->token,'inserted_time'=>$check_rm[0]->inserted_time,'updated_date'=>$check_rm[0]->updated_date,'uniquecode'=>$check_rm[0]->uniquecode,'sap_movment'=>NULL,'production_no'=>NULL,'ref_id'=>$insert_id,'ref_doc'=>'Check rebin_313 table for cancelled 313 data.');
				
				$iruq2 = $this->Basic_model->insert_data('rm_accepted_updates',$rm_up_ins2);
				
				$check_float = $this->Basic_model->get_data('issue_313_float',array('issue_barcode_id'=>$id, 'ref_id'=>$select[0]->id));
				
				$check_rack = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$check_float[0]->storage_loc, 'rack_id'=>$check_float[0]->rack_id, 'rack_no'=>$check_float[0]->rack_no, 'department'=>$check_float[0]->department));
				
				$new_rack_qty = $check_rack[0]->qty + $select[0]->transfer_qty;
				
				$this->Basic_model->update_data('rack_master',array('id'=>$check_rack[0]->id),array('qty'=>$new_rack_qty)); 
				
				$rack_up_ins1 = array('workorder_number'=>$select[0]->workorder_no,'storage_loc'=>$check_float[0]->storage_loc,'rack_id'=>$check_float[0]->rack_id,'rack_no'=>$check_float[0]->rack_no,'department'=>$check_float[0]->department,'rack_status'=>$check_rack[0]->rack_status,'qty'=>$check_rack[0]->rack_quantity,'material'=>$check_rack[0]->material,'heat_no'=>$check_rack[0]->heat_no,'batch'=>$check_rack[0]->batch,'ref_id'=>$check_float[0]->rack_id,'ref_doc'=>'Issue 313 cancellation before update value');
				
				$irq1 = $this->Basic_model->insert_data('rack_master_updates',$rack_up_ins1);
				
				$rack_up_ins2 = array('workorder_number'=>$select[0]->workorder_no,'storage_loc'=>$check_float[0]->storage_loc,'rack_id'=>$check_float[0]->rack_id,'rack_no'=>$check_float[0]->rack_no,'department'=>$check_float[0]->department,'rack_status'=>$check_rack[0]->rack_status,'qty'=>$new_rack_qty,'material'=>$select[0]->material,'heat_no'=>$select[0]->heat_no,'batch'=>$select[0]->batch,'ref_id'=>$insert_id,'ref_doc'=>'Check rebin_313 table for cancelled 313 data.');
				
				$irq2 = $this->Basic_model->insert_data('rack_master_updates',$rack_up_ins2);
				
				$this->Basic_model->delete_data('issue_barcode_313',array('id'=>$id));
				$this->Basic_model->delete_data('issue_313',array('id'=>$select[0]->id));
				$this->Basic_model->delete_data('issue_313_float',array('id'=>$check_float[0]->id));
				
				echo "Success";
				
				
			} else{
				echo "Insert Error";
			}
		}
		
		public function deleting_313($id=''){
			
			
			$id =  $this->input->post('id');
			$user =  $this->input->post('user');
			
			$select1 = $this->Basic_model->get_data('issue_barcode_313',array('id'=>$id));
			
			if($$select1[0]->production_no_315 != '' || $select1[0]->production_no_315 != NULL){
				echo "Cannot delete, 315 has been done against this 313 Issue";
			} else{
				$select = $this->Basic_model->get_data('issue_313',array('ib_id'=>$id));
				
				if($select[0]->date_313 == ''){
					$date_313 = date('Y-m-d H:i:s');
				}else{
					$date_313 = $select[0]->date_313;
				}
				
				if($select[0]->date_315 == ''){
					$date_315 = date('Y-m-d H:i:s');
				} else{
					$date_315 = $date_315;
				}
				
				$insert_data = array('deleted_by'=>$user,'issue_313_id'=>$select[0]->id,'ib_id'=>$select[0]->ib_id,'rm_id'=>$select[0]->rm_id,'from_rack'=>$select[0]->from_rack,'from_qty'=>$select[0]->from_qty,'pos'=>$select[0]->pos,'to_rack'=>$select[0]->to_rack,'transfer_qty'=>$select[0]->transfer_qty,'unit'=>$select[0]->unit,'workorder_no'=>$select[0]->workorder_no,'material'=>$select[0]->material,'heat_no'=>$select[0]->heat_no,'batch'=>$select[0]->batch,'uniquecode'=>$select[0]->uniquecode,'uniquecode_1'=>$select[0]->uniquecode_1,'production_no_313'=>$select[0]->production_no_313,'date_313'=>$date_313,'production_no_315'=>$select[0]->production_no_315,'date_315'=>$date_315,'token_313'=>$select[0]->token_313,'token_315'=>$select[0]->token_315,'status_313'=>$select[0]->status_313,'inserted_datetime'=>date('Y-m-d H:i:s'));
				
				$insert_id = $this->Basic_model->insert_data('delete_313',$insert_data);
					
				if($insert_id != ''){
					$this->Basic_model->delete_data('issue_barcode_313',array('id'=>$id));
					$this->Basic_model->delete_data('issue_313',array('id'=>$select[0]->id));
				}
			}
		}	
		
		public function pending_315($id=''){
			$data = array();
			
			$join = array('issue_313 as b'=>array('b.ib_id=a.id'),
						'issue_master as c'=>array('c.production_order=a.workorder_no'),
			);
			$data['record'] 	= $this->Basic_model->get_data(array('issue_barcode_313 as a',array('c.work_center','DESC')),array('a.sap_status_315'=>'0'),NULL,$join,array('a.*','b.material','b.batch','b.from_rack','b.to_rack','c.material as part_no','c.material_description','c.work_center'));
			//print_r($this->db->last_query()); die();
			$data['content'] 	= $this->load->view('production/pending_315', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		
		public function check_po($id=''){	
			
			$data = array();	
			$join = array('issue_master as b'=>array('b.production_order=a.workorder_no','LEFT'),
						'rm_accepted as c'=>array('c.uniquecode=a.uniquecode','LEFT'),
			);
			$data['record'] 	= $this->Basic_model->get_data('issue_barcode_313 as a',array('a.id'=>$this->input->post('id')),NULL,$join);
			
			//print_r($this->db->last_query()); die();
			
			echo $data['record'][0]->po_number;      
			
		}
		
		public function issue_barcode_preview($id=''){			
			$data = array();	
			$join = array('issue_master as b'=>array('b.production_order=a.workorder_no','LEFT'),
						'rm_accepted as c'=>array('c.uniquecode=a.uniquecode','LEFT'),
			);
			$data['record'] 	= $this->Basic_model->get_data('issue_barcode_313 as a',array('a.id'=>$this->input->get('id')),NULL,$join);
			
			
			
			
			//print_r($data['record']);
			$qrtext = $data['record'][0]->component.":".$data['record'][0]->component_status.":".$data['record'][0]->batch.":".$data['record'][0]->heatno.":".$data['record'][0]->material.":".$data['record'][0]->workorder_no.":".$data['record'][0]->work_center.":".$data['record'][0]->transfer_qty.":".$data['record'][0]->uniquecode.":".$data['record'][0]->scheduleunique.":".$data['record'][0]->production_no_313.":".date('d-m-Y',strtotime($data['record'][0]->{'313_date'}));			
			$data['qrimage'] = $this->qrcodeGenerator($qrtext);
			echo $this->load->view('production/issue_barcode_preview', $data, TRUE);      
			
		}
		
		// Process Data and It's Sub Functionalities
		
		public function process_data($id=''){	

			if ($this->input->is_ajax_request()) {
				$this->load->model('Process_data');
				$list = $this->Process_data->get_datatables();
				$data = array();
				$no = $_POST['start'];
//print_r($this->db->last_query()); die();
				foreach ($list as $pr) {
					
					if($pr->status == 0 || $pr->status == 2){
						$style = '';
						$button = '<a class="btn btn-primary arrivalsub btn-sm" onClick="print_preview('.$pr->id.');">Preview</a>';
					} else{
						$style = 'td_clr';
						$button  = '<a class="btn btn-primary arrivalsub btn-sm" onClick="resubmit('.$pr->id.');">Resubmit</a>';
					}
					
					$no++;
					$row = array();
					$row[] = $no;
					$row[] = $button;
					$row[] = date("d-m-Y",strtotime(explode(";",$pr->runchart)[1]));
					$row[] = $pr->shift;
					$row[] = $pr->machine_id;
					$row[] = $pr->workorder_no;
					$row[] = $pr->material;
					$row[] = $pr->component; 
					$row[] = $pr->component_status; 
					$row[] = $pr->operator; 
					$row[] = $pr->qty; 
					$row[] = $pr->movement_qty; 
					$row[] = $pr->to_location; 
					$row[] = '<span class="'.$style.'">'.$pr->status_det.'</span>';  
					$row[] = $pr->id; 
					$data[] = $row;
				}
 
				$output = array(
                        "draw" => $_POST['draw'],
                        "recordsTotal" => $this->Process_data->count_all(),
                        "recordsFiltered" => $this->Process_data->count_filtered(),
                        "data" => $data,
                );
				//output to json format
				echo json_encode($output); exit;
			}		


		
			$data = array();
			
			//$data['listout'] 	= $this->Basic_model->get_data('production_data'); 			
			$data['content'] 	= $this->load->view('production/process_data', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		
		public function production_preview($id=''){			
			$data = array();				
			$data['record'] 	= $this->Basic_model->get_data('production_data',array('id'=>$this->input->get('id')));
			$prod_date1 = $data['record'][0]->runchart;
			$res = explode(";",$prod_date1);
			$orgDate = $res[1];  
			$prod_date = date("d-m-Y", strtotime($orgDate));  
  

			 $qrtext = $data['record'][0]->trace_id.":".$data['record'][0]->workorder_no.":".$data['record'][0]->material.":".$data['record'][0]->qty."/".$data['record'][0]->weight.":".$data['record'][0]->process.":".$data['record'][0]->heat_code.":".$data['record'][0]->component.":".$data['record'][0]->machine_id.":".$data['record'][0]->shift.":".$prod_date.":".$data['record'][0]->operator.":FI";

			$data['qrimage'] = $this->qrcodeGenerator($qrtext);
			
			echo $this->load->view('production/production_preview', $data, TRUE);      
			
		}
		
		public function qrcodeGenerator ($qrtext =''){		
			if(isset($qrtext)){
 
			//file path for store images
		    $SERVERFILEPATH = FCPATH.'/assets/images/qrcode/';
			$text = $qrtext;
			$text1= substr($text, 0,9);
			
			$folder = $SERVERFILEPATH;
			$file_name1 = uniqid()."-Qrcode" . rand(2,200) . ".png";
			$file_name = $folder.$file_name1;
			//QRcode::png($text,$file_name);
			$ecc = 'L';
			$pixel_Size = 2;
			$frame_size = 2;
  
			// Generates QR Code and Stores it in directory given
			QRcode::png($text, $file_name, $ecc, $pixel_Size, 2);
			return $file_name1;
			
			}
		}
		
		public function batchcall(){
			$barcode = $this->input->post('barcode');
			$runchart = explode(';',$barcode);
			
			$i = 0;
			foreach($runchart as $rc){
				$i = $i +1;
			}

			if($i > 1){
			
				if(!empty($runchart[0])){
					$row = $this->Basic_model->get_data('issue_master',array('production_order'=>$runchart[0]));              
					$row3 = $this->Basic_model->get_data('production_data',array('workorder_no'=>$runchart[0]));              
					$row2 = $this->Basic_model->get_data('production_data',array('workorder_no'=>$runchart[0]),NULL,NULL,'SUM(qty) AS value_sum, SUM(sett_pcs) AS set_value, SUM(pr_pcs) AS pr_value');
					$totqty = $row2[0]->value_sum;
					$set_value = $row2[0]->set_value;
					$pr_value = $row2[0]->pr_value;
					$totqty_total =  $totqty + $set_value + $pr_value;
					$percent1 = $row[0]->quantity * 0.05;
					$qty_tol = round($row[0]->quantity + $percent1);
					$balance = ($qty_tol - $totqty_total);
					$run_date = date("d-m-Y", strtotime($runchart[1]));
					$run_date1 = date("m-d-Y", strtotime($runchart[1]));
					
					if(!empty($row)){
						if($balance > 0){
							echo $row[0]->work_center.'$'.$row[0]->production_order.'$'.$row[0]->material.'$'.$row[0]->component.'$'.$row[0]->material_description.'$'.$balance.'$'.$run_date.'$'.$row[0]->toloc2.'$'.$run_date1.'$'.$row[0]->quantity.'$'.count($row3). '$' . $row[0]->norminal_value;
						}else{

							echo 1;
						}
					}
					else
					{
						echo 0;
					}
				}
			} else{
				echo "error";
			}
		}
		
		public function get_sfg_rack(){
			$production_no = $this->input->post('workorder_no');
			if($production_no != ''){
				$location = $this->Basic_model->get_data('issue_master',array('production_order'=>$production_no))[0]->toloc;				
				if($location != ''){
					$row = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$location,'rack_id'=>'IN'),array('department'=>'Machine Shop'));
					//print_r($this->db->last_query());
					if(!empty($row)){
						$row1 = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$location,'rack_id'=>'IN','workorder_no'=>$production_no),array('department'=>'Machine Shop'));
						
						if(!empty($row1)){
							echo $location.'&'.$row[0]->qty;
						}else{
							echo '3';
						}
					}
					else{
						echo '2';
					}
				}
				else{
					echo '1';
				}
			}
		}
		
		public function qty_stock(){
			
			$qty = $this->input->post('qty');
			$production_no = $this->input->post('workorder_no');
			$location_qty = $this->input->post('location_qty');
			$barcode_qty = $this->input->post('barcode_qty');
			$last_entry = $this->input->post('last_entry');

			if(!empty($production_no)){
				$row_315 = $this->Basic_model->get_data('issue_barcode_313',array('workorder_no'=>$production_no, 'transfer_qty >='=>$barcode_qty));
//print_r($this->db->last_query());
				if(!empty($row_315)){
					
					$production_no_315   = $row_315[0]->production_no_315;
					
					if($production_no_315 == '' || $production_no_315 == NULL){
						echo 'Production 315 Document Number has not been Generated';
					}
					
					else{
					
						$row2 = $this->Basic_model->get_data('issue_master',array('production_order'=>$production_no));
						
						$norminal_value   = $row2[0]->norminal_value;
						$qtykg = ($qty * $norminal_value) / 1000;
						$qty1 = round($qtykg, 2);

						if($qty1 > $location_qty){
							if($last_entry == 1){
								echo 1;
							}else{
								echo 'Location Quantity is Low';
							}
						}
						else{
							echo 1;
						}
					
					}
				}
				else{
					echo 'There is no entry in Issue Barcode for the given Workorder';
				}
			}
		}
		
		public function insert_confirm(){
			
			$post_data = $this->input->post();
			
			if(!empty($post_data['machine_id']) && !empty($post_data['component'])) {
				
				
				//$pro_date = $post_data['pro_date'];
				
				
				
				//$result1 = $this->Basic_model->get_data('production_data',array('workorder_no'=>$post_data['workorder_no'],'shift'=>$post_data['shift'],'p_date'=>$post_data['from']));
				//if(!empty($result1)){
					
				//	echo '0';
					
				//}else{
					
					$row2 = $this->Basic_model->get_data('issue_master',array('production_order'=>$post_data['workorder_no']));
						
					$norminal_value   = $row2[0]->norminal_value;
					
					if($last_entry == 1){
						$qtykg = $post_data['location_qty'];	
					}else{
						$qtykg = ($post_data['qty'] * $norminal_value) / 1000;
					}	
					
					$insert_data = array('runchart'=>$post_data['runchart'],'materialqr'=>$post_data['materialqr'],'machine_id'=>$post_data['machine_id'],'workorder_no'=>$post_data['workorder_no'],'process'=>$post_data['process1'],'component'=>$post_data['component'],'component_status'=>$post_data['component_status'],'heat_code'=>$post_data['heat_code'],'shift'=>$post_data['shift'],'qty'=>$post_data['qty'],'material'=>$post_data['material'],'weight'=>$post_data['weight'],'operator'=>$post_data['operator'],'trace_id'=>$post_data['trace_id'],'no_of_tray'=>$post_data['no_of_tray'],'sett_time'=>$post_data['sett_time'],'sett_pcs'=>$post_data['sett_pcs'],'run_time'=>$post_data['run_time'],'pr_pcs'=>$post_data['pr_pcs'],'drg_no'=>$post_data['drg_no'],'to_location'=>$post_data['to_rack'],'batch'=>$post_data['batch'],'p_date'=>$post_data['from'],'last_entry'=>$post_data['last_entry'],'location_qty'=>$post_data['location_qty'],'movement_qty'=>$qtykg,'sequence'=>$post_data['sequence'],'status'=>'1', 'status_det'=>'SAP Error');
					
					
					$insert_id = $this->Basic_model->insert_data('production_data',$insert_data);
					
					if($insert_id != ''){
						
						echo $insert_id;
						
					} else {
						
						echo '0.1';
						
					}
				//}
			}
			else{
				echo '0.2';
			}
		}
		
		
		
		public function machine_stock(){
			$post_data = $this->input->post();
			
			$torack = $post_data['to_rack'];
			$qty = $post_data['qty'];
			$production_no = $post_data['workorder_no'];
			$batch = $post_data['batch'];
			$heat_code = $post_data['heat_code'];
			$material = $post_data['material'];
			$insert_id = $post_data['insert_id'];
			$last_entry = $post_data['last_entry'];

			if(!empty($production_no)){
				$this->Basic_model->update_data('production_data',array('id'=>$insert_id),array('status'=>2,'status_det'=>'Completed')); 
				$row = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$torack,'rack_id'=>'IN'),array('department'=>'Machine Shop'));

				
				if(!empty($row)){
   
					$row2 =  $this->Basic_model->get_data('issue_master',array('production_order'=>$production_no));
          
					$norminal_value   = $row2[0]->norminal_value;
					$qtykg = ($qty * $norminal_value) / 1000;
					
					$to_location_2 = $row2[0]->toloc2;
				
					$location_im = $row2[0]->location;
			
					$workcenter_im = $row2[0]->work_center;
					
					if($location_im == 'M/C SHOP 1'){
						$r_location = 'Shop 1';
					} else if($location_im == 'M/C SHOP 2'){
						$r_location = 'Shop 2';
					}   else if($location_im == 'M/C SHOP 2A'){
						$r_location = 'Shop 2A';
					}  else if($location_im == 'M/C SHOP 2B'){
						$r_location = 'Shop 2B';
					}  else if($location_im == 'M/C SHOP 3'){
						$r_location = 'Shop 3';
					}  else if($location_im == 'M/C SHOP 4'){
						$r_location = 'Shop 4';
					}   else if($location_im == 'M/C SHOP 3A'){
						$r_location = 'Shop 3A';
					}   else if($location_im == 'M/C SHOP 3B'){
						$r_location = 'Shop 3B';
					}   else if($location_im == 'M/C SHOP 4A'){
						$r_location = 'Shop 4A';
					}   else if($location_im == 'M/C SHOP 4B'){
						$r_location = 'Shop 4B';
					}   else if($location_im == 'M/C SHOP 5'){
						$r_location = 'Shop 5';
					}   else if($location_im == 'M/C SHOP 6'){
						$r_location = 'Shop 6';
					}    else if($location_im == 'M/C SHOP 5A'){
						$r_location = 'Shop 5A';
					}   else if($location_im == 'M/C SHOP 5B'){
						$r_location = 'Shop 5B';
					}   else if($location_im == 'M/C SHOP 6A'){
						$r_location = 'Shop 6A';
					}   else if($location_im == 'M/C SHOP 6B'){
						$r_location = 'Shop 6B';
					}
					
					if($last_entry != 1){
						$qty1 = $row[0]->qty-$qtykg;

						$ms_up = $this->Basic_model->update_data('rack_master',"storage_loc = '".$torack."' and rack_id = 'IN' and department LIKE '%Machine Shop%'",array('qty'=>$qty1));
					} else{
						$ms_up = $this->Basic_model->update_data('rack_master',"storage_loc = '".$torack."' and rack_id = 'IN' and department LIKE '%Machine Shop%'",array('qty'=>'','rack_status'=>'','rm_id'=>'','material'=>'','heat_no'=>'','batch'=>'','workorder_no'=>'','invoice_date'=>''));
					}	
					
					
					
						
					// Check FIFO store for Null Value
					$sql_ru = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$to_location_2,'rack_id'=>$workcenter_im,'department LIKE'=>'%FIFO Store%','material'=>NULL,'heat_no'=>NULL,'batch'=>NULL));
					//print_r($this->db->last_query());
					// If FIFO store has Null Value update the data with qty
					if(!empty($sql_ru)){
						
						$avaliableqty = $sql_ru[0]->qty;
						$totqty = $avaliableqty + $qty; 
						
						$this->Basic_model->update_data('rack_master',"storage_loc = '".$to_location_2."' and rack_id = '".$workcenter_im."' and department LIKE '%FIFO Store%'",array('qty'=>$totqty,'rack_status'=>'IN','material'=>$material,'heat_no'=>$heat_code,'batch'=>$batch,'updated_date'=>date("Y-m-d H:i:s"),'workorder_no'=>$production_no,'ref_id'=>$insert_id,'ref_doc'=>'Process Data','rack_no'=>$r_location));
					
					} else{ 
					
						// If FIFO store does not have Null Value update the data with qty
						
						// Check FIFO store for Material, Batch, Heatcode & Work order
						$sql_ru1 = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$to_location_2,'rack_id'=>$workcenter_im,'department'=>'FIFO Store','material'=>$material,'heat_no'=>$heat_code,'batch'=>$batch,'workorder_no'=>$production_no));
						
						if(!empty($sql_ru1)){ 
							// If FIFO store has same set of data's add with the prev qty and update it
							
							$avaliable_qty = $sql_ru1[0]->qty;
							 $tot_qty = $avaliable_qty + $qty;
							
							
							$this->Basic_model->update_data('rack_master',"storage_loc = '".$to_location_2."' and rack_id = '".$workcenter_im."' and department LIKE '%FIFO Store%' and material = '".$material."' and heat_no = '".$heat_code."' and batch = '".$batch."' and workorder_no = '".$production_no."'",array('qty'=>$tot_qty,'rack_status'=>'IN','material'=>$material,'heat_no'=>$heat_code,'batch'=>$batch,'updated_date'=>date("Y-m-d H:i:s"),'workorder_no'=>$production_no,'ref_id'=>$insert_id,'ref_doc'=>'Process Data','rack_no'=>$r_location));
						
						} else{ 
							// If FIFO store does not have same set of data's , insert into a new row and update the qty
							
							$insert_data = array('storage_loc'=>$to_location_2,'rack_id'=>$workcenter_im,'rack_no'=>$r_location,'department'=>'FIFO Store','qty'=>$qty,'rack_status'=>'IN','material'=>$material,'heat_no'=>$heat_code,'batch'=>$batch,'workorder_no'=>$production_no,'ref_id'=>$insert_id,'ref_doc'=>'Process Data','updated_date'=>date("Y-m-d H:i:s"),'status'=>'1');
							$insert_rack = $this->Basic_model->insert_data('rack_master',$insert_data);
						}
					//print_r($this->db->last_query());
					//die();
					}
					
					$insert_data1 = array('workorder_number'=>$production_no,'storage_loc'=>$to_location_2,'rack_id'=>$workcenter_im,'rack_no'=>$r_location,'department'=>'FIFO Store','rack_status'=>'IN','qty'=>$qty,'material'=>$material,'heat_no'=>$heat_code,'batch'=>$batch,'ref_id'=>$insert_id,'ref_doc'=>'Process Data');
						
					$insert_id132 = $this->Basic_model->insert_data('rack_master_updates',$insert_data1);
					
					if($insert_id132){
						echo 1; 
					} else{ 
						echo 0; 
					}	
					
				}               
			}
		}
		
				
		public function machine_stock_test(){
			$post_data = $this->input->post();
			
			$data = $this->Basic_model->get_data('production_data',array('id'=>$post_data['id']));
			
			$torack = $data[0]->to_location;
			$qty = $data[0]->qty;
			$production_no = $data[0]->workorder_no;
			$batch = $data[0]->batch;
			$heat_code = $data[0]->heat_code;
			$material = $data[0]->material;
			$insert_id = $data[0]->id;
			$last_entry = $data[0]->last_entry;

			if(!empty($production_no)){
				$this->Basic_model->update_data('production_data',array('id'=>$insert_id),array('test_status'=>2)); 
				$row = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$torack,'rack_id'=>'IN'),array('department'=>'Machine Shop'));

				
				if(!empty($row)){
   
					$row2 =  $this->Basic_model->get_data('issue_master',array('production_order'=>$production_no));
          
					$norminal_value   = $row2[0]->norminal_value;
					$qtykg = ($qty * $norminal_value) / 1000;
					
					$to_location_2 = $row2[0]->toloc2;
				
					$location_im = $row2[0]->location;
			
					$workcenter_im = $row2[0]->work_center;
					
					if($location_im == 'M/C SHOP 1'){
						$r_location = 'Shop 1';
					} else if($location_im == 'M/C SHOP 2'){
						$r_location = 'Shop 2';
					}   else if($location_im == 'M/C SHOP 2A'){
						$r_location = 'Shop 2A';
					}  else if($location_im == 'M/C SHOP 2B'){
						$r_location = 'Shop 2B';
					}  else if($location_im == 'M/C SHOP 3'){
						$r_location = 'Shop 3';
					}  else if($location_im == 'M/C SHOP 4'){
						$r_location = 'Shop 4';
					}   else if($location_im == 'M/C SHOP 3A'){
						$r_location = 'Shop 3A';
					}   else if($location_im == 'M/C SHOP 3B'){
						$r_location = 'Shop 3B';
					}   else if($location_im == 'M/C SHOP 4A'){
						$r_location = 'Shop 4A';
					}   else if($location_im == 'M/C SHOP 4B'){
						$r_location = 'Shop 4B';
					}   else if($location_im == 'M/C SHOP 5'){
						$r_location = 'Shop 5';
					}   else if($location_im == 'M/C SHOP 6'){
						$r_location = 'Shop 6';
					}    else if($location_im == 'M/C SHOP 5A'){
						$r_location = 'Shop 5A';
					}   else if($location_im == 'M/C SHOP 5B'){
						$r_location = 'Shop 5B';
					}   else if($location_im == 'M/C SHOP 6A'){
						$r_location = 'Shop 6A';
					}   else if($location_im == 'M/C SHOP 6B'){
						$r_location = 'Shop 6B';
					}
					
					if($last_entry != 1){
						$qty1 = $row[0]->qty-$qtykg;

						//$ms_up = $this->Basic_model->update_data('rack_master_test2',"storage_loc = '".$torack."' and rack_id = 'IN' and department LIKE '%Machine Shop%'",array('qty'=>$qty1));
					} else{
						//$ms_up = $this->Basic_model->update_data('rack_master_test2',"storage_loc = '".$torack."' and rack_id = 'IN' and department LIKE '%Machine Shop%'",array('qty'=>NULL,'rack_status'=>NULL,'rm_id'=>NULL,'material'=>NULL,'heat_no'=>NULL,'batch'=>NULL,'workorder_no'=>NULL,'invoice_date'=>NULL));
					}	
					
					
					
						
						// Check FIFO store for Null Value
						$sql_ru = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$to_location_2,'rack_id'=>$workcenter_im,'department LIKE'=>'%FIFO Store%','material'=>NULL,'heat_no'=>NULL,'batch'=>NULL));
						//print_r($this->db->last_query());die();
						// If FIFO store has Null Value update the data with qty
						if(!empty($sql_ru)){
							
							$avaliableqty = $sql_ru[0]->qty;
							$totqty = $avaliableqty + $qty; 
							
							$this->Basic_model->update_data('rack_master',"storage_loc = '".$to_location_2."' and rack_id = '".$workcenter_im."' and department LIKE '%FIFO Store%'",array('qty'=>$totqty,'rack_status'=>'IN','material'=>$material,'heat_no'=>$heat_code,'batch'=>$batch,'updated_date'=>date("Y-m-d H:i:s"),'workorder_no'=>$production_no,'ref_id'=>$insert_id,'ref_doc'=>'Process Data','rack_no'=>$r_location));
						
						} else{ 
						
							// If FIFO store does not have Null Value update the data with qty
							
							// Check FIFO store for Material, Batch, Heatcode & Work order
							$sql_ru1 = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$to_location_2,'rack_id'=>$workcenter_im,'department'=>'FIFO Store','material'=>$material,'heat_no'=>$heat_code,'batch'=>$batch,'workorder_no'=>$production_no));
							
							if(!empty($sql_ru1)){ 
								// If FIFO store has same set of data's add with the prev qty and update it
								
								$avaliable_qty = $sql_ru1[0]->qty;
								 $tot_qty = $avaliable_qty + $qty;
								
								
								$this->Basic_model->update_data('rack_master',"storage_loc = '".$to_location_2."' and rack_id = '".$workcenter_im."' and department LIKE '%FIFO Store%' and material = '".$material."' and heat_no = '".$heat_code."' and batch = '".$batch."' and workorder_no = '".$production_no."'",array('qty'=>$tot_qty,'rack_status'=>'IN','material'=>$material,'heat_no'=>$heat_code,'batch'=>$batch,'updated_date'=>date("Y-m-d H:i:s"),'workorder_no'=>$production_no,'ref_id'=>$insert_id,'ref_doc'=>'Process Data','rack_no'=>$r_location));
							
							} else{ 
								// If FIFO store does not have same set of data's , insert into a new row and update the qty
								
								$insert_data = array('storage_loc'=>$to_location_2,'rack_id'=>$workcenter_im,'rack_no'=>$r_location,'department'=>'FIFO Store','qty'=>$qty,'rack_status'=>'IN','material'=>$material,'heat_no'=>$heat_code,'batch'=>$batch,'workorder_no'=>$production_no,'ref_id'=>$insert_id,'ref_doc'=>'Process Data','updated_date'=>date("Y-m-d H:i:s"),'status'=>'1');
								$insert_rack = $this->Basic_model->insert_data('rack_master',$insert_data);
							}
						//print_r($this->db->last_query());
						//die();
						}
						
						$insert_data1 = array('workorder_number'=>$production_no,'storage_loc'=>$to_location_2,'rack_id'=>$workcenter_im,'rack_no'=>$r_location,'department'=>'FIFO Store','rack_status'=>'IN','qty'=>$qty,'material'=>$material,'heat_no'=>$heat_code,'batch'=>$batch,'ref_id'=>$insert_id,'ref_doc'=>'Process Data');
							
						$insert_id132 = $this->Basic_model->insert_data('rack_master_updates',$insert_data1);
					
						if($insert_id132){
						echo 1; } else{ echo 0; }
				}               
			}
		}
		
		public function qty_check(){
			
			
			$post_data = $this->input->post();
			
			$to_rack = $post_data['to_rack'];
			$workorder_no = $post_data['workorder_no'];

			if(!empty($to_rack))
			{
				$row = $this->Basic_model->get_data(array('production_data',array('id','DESC'),array(1,0)),array('workorder_no'=>$workorder_no,'run_time'=>'8','status'=>'2'));
				
				if(!empty($row)){ 
					$last_qty = $row[0]->qty;
					$last_qty_2 = $last_qty * 2;
					
					$row2 = $this->Basic_model->get_data(array('rack_master',array('id','ASC'),array(1,0)),array('storage_loc'=>$to_rack,'rack_id'=>'IN'),array('department'=>'Machine Shop'));
					
					if(!empty($row2)){
						$location_qty = $row2[0]->qty;
						
						if($location_qty <= 0 || $location_qty == NULL || $location_qty == ''){
							echo "C";
						} else{
							if($last_qty_2 >= $location_qty ){
								echo "A";
							} else if($last_qty_2 < $location_qty ){
								if($last_qty < $location_qty ){
									echo "B";
								} else{
									echo "C";
								}
							}
						}
					} 
					else{
						echo "A";
					}
				}
				else{
					echo "A";
				}
			}
			
		}
		
		public function get_rs(){
			
			
			$insert_id = $this->input->post('insert_id');
			$to = date("d-m-Y");
	
			$row = $this->Basic_model->get_data('production_data',array('id'=>$insert_id));
			if(!empty($row)){
				echo $row[0]->workorder_no.'$'.$row[0]->machine_id.'$'.$row[0]->material.'$'.$row[0]->component.'$'.$to.'$'.$row[0]->shift.'$'.$row[0]->to_location.'$'.$row[0]->qty.'$'.$row[0]->heat_code.'$'.$row[0]->batch.'$'.$row[0]->last_entry;
			}
			
			
		}
		
		public function production_test(){
			
			$post_data = $this->input->post();
			
			$postdata = $post_data['podata']; 
			$sysurl = str_replace(" ","%20",$postdata); 
			if($sysurl != ''){
				$ch = curl_init();
				$curlConfig = array(
					CURLOPT_URL            => $sysurl,
					CURLOPT_POST           => true,
					CURLOPT_RETURNTRANSFER => true,
					CURLOPT_POSTFIELDS     => array()
				);
				curl_setopt_array($ch, $curlConfig);
				$result = curl_exec($ch);
				curl_close($ch);
				print_r($result);
				return $result;
			}
		}
		
		// End of Process Data and It's Sub Functionalities
		
		
		// SFG Data and It's Sub Functionalities
		
		public function sfg_data($id=''){
			
			if ($this->input->is_ajax_request()) {
				
				$this->load->model('Sfg_data');
				$list = $this->Sfg_data->get_datatables();
				$data = array();
				$no = $_POST['start'];
				//print_r($this->db->last_query());
				foreach ($list as $pr) {
					
					if($pr->status == 0 || $pr->status == 2){
						$style = '';
						$button = '<a class="btn btn-primary arrivalsub btn-sm" onClick="print_preview('.$pr->id.');">Preview</a><input type="hidden" value="'.$pr->id.'">';
					} else{
						$style = 'td_clr';
						$button  = '<a class="btn btn-primary arrivalsub btn-sm" onClick="resubmit('.$pr->id.');">Resubmit</a><input type="hidden" value="'.$pr->id.'">';
					}
					
					if($pr->sfg_stage == 1){
						$selct = 'selected';
					}else{
						$selct = '';
					}
					if($pr->sfg_stage == 2){
						$selct2 = 'selected';
					}else{
						$selct2 = '';
					}
					if($pr->sfg_stage == 3){
						$selct3 = 'selected';
					}else{
						$selct3 = '';
					}
					if($pr->sfg_stage == 4){
						$selct4 = 'selected';
					}else{
						$selc4 = '';
					}
					if($pr->sfg_stage == 5){
						$selct5 = 'selected';
					}else{
						$selct5 = '';
					}
					if($pr->sfg_stage == 6){
						$selct6 = 'selected';
					}else{
						$selct6 = '';
					}
					if($pr->sfg_stage == 7){
						$selct7 = 'selected';
					}else{
						$selct7 = '';
					}
					if($pr->sfg_stage == 8){
						$selct8 = 'selected';
					}else{
						$selct8 = '';
					}
					if($pr->sfg_stage == 9){
						$selct9 = 'selected';
					}else{
						$selct9 = '';
					}
					$drop = '
						<select class="form-control select2" name="sfg_stage_table" id="sfg_stage_table" onChange="sfg_table(this)">
							<option value="">--- Select Stage ---</option>
							<option value="1" '.$selct.'>Stage 2</option>
							<option value="2" '.$selct2.'>Stage 3</option>
							<option value="3" '.$selct3.'>Stage 4</option>
							<option value="4" '.$selct4.'>Stage 5</option>
							<option value="5" '.$selct5.'>Stage 6</option>
							<option value="6" '.$selct6.'>Stage 7</option>
							<option value="7" '.$selct7.'>Stage 8</option>
							<option value="8" '.$selct8.'>Stage 9</option>
							<option value="9" '.$selct9.'>Stage 10</option>
						</select>
					';
					$user_id = $this->session->userdata('user_id');
					if($user_id == '1' || $user_id == '34' || $user_id == '36'){
						$drops = $drop;
					}else{
						$drops = $pr->sfg_stage;
					}
					
					$no++;
					$row = array();
					$row[] = $no;
					$row[] = $button;
					$row[] = $drops;
					$row[] = date("d-m-Y",strtotime(explode(";",$pr->runchart)[1]));
					$row[] = $pr->shift;
					$row[] = $pr->machine_id;
					$row[] = $pr->workorder_no;
					$row[] = $pr->material;
					$row[] = $pr->component; 
					$row[] = $pr->component_status; 
					$row[] = $pr->operator; 
					$row[] = $pr->qty; 
					$row[] = $pr->weight; 
					$row[] = $pr->to_location; 
					$row[] = '<span class="'.$style.'">'.$pr->status_det.'</span>';  
					$row[] = $pr->id; 
					$data[] = $row;
				}
 
				$output = array(
                        "draw" => $_POST['draw'],
                        "recordsTotal" => $this->Sfg_data->count_all(),
                        "recordsFiltered" => $this->Sfg_data->count_filtered(),
                        "data" => $data,
                );
				//output to json format
				echo json_encode($output); exit;
			}	
			
			
			$data = array();
			
			//$data['listout'] 	= $this->Basic_model->get_data('sfg_data'); 			
			$data['content'] 	= $this->load->view('production/sfg_data', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		
		
		
		public function sfg_stage_update(){			
			     
			$stage = $this->input->post('stage');
			$id = $this->input->post('id');
			
			$this->Basic_model->update_data('sfg_data',array('id'=>$id),array('sfg_stage'=>$stage)); 
			
			echo "1";
		}
		
		public function sfg_preview($id=''){			
			$data = array();				
			$data['record'] 	= $this->Basic_model->get_data('sfg_data',array('id'=>$this->input->get('id')));
			$prod_date1 = $data['record'][0]->runchart;
			
			$res = explode(";",$prod_date1);
			$orgDate = $res[1];  
			$prod_date = date("d-m-Y", strtotime($orgDate));  
  

			 $qrtext = $data['record'][0]->trace_id.":".$data['record'][0]->workorder_no.":".$data['record'][0]->material.":".$data['record'][0]->qty."/".$data['record'][0]->weight.":".$data['record'][0]->process.":".$data['record'][0]->heat_code.":".$data['record'][0]->component.":".$data['record'][0]->machine_id.":".$data['record'][0]->shift.":".$prod_date.":".$data['record'][0]->operator.":FI";

			$data['qrimage'] = $this->qrcodeGenerator($qrtext);
			echo $this->load->view('production/sfg_preview', $data, TRUE);      
			
		}
		
		
		public function sfg_batchcall(){
			$barcode = $this->input->post('barcode');
			$runchart = explode(';',$barcode);
			
			if(!empty($runchart[0])){
                $row = $this->Basic_model->get_data('issue_master',array('production_order'=>$runchart[0]));              
               // $row2 = $this->Basic_model->get_data('sfg_data',array('workorder_no'=>$runchart[0]),NULL,NULL,'SUM(qty) AS value_sum, SUM(sett_pcs) AS set_value, SUM(pr_pcs) AS pr_value');
               //$totqty = $row2[0]->value_sum;
                //$set_value = $row2[0]->set_value;
                //$pr_value = $row2[0]->pr_value;
				//$totqty_total =  $totqty + $set_value + $pr_value;
                $percent1 = $row[0]->quantity * 0.05;
                $qty_tol = round($row[0]->quantity + $percent1);
                //$balance = ($qty_tol - $totqty_total);
                $run_date = date("d-m-Y", strtotime($runchart[1]));
                if(!empty($row)){
					//if($balance > 0){
					if($qty_tol > 0){
						echo $row[0]->work_center.'$'.$row[0]->production_order.'$'.$row[0]->material.'$'.$row[0]->component.'$'.$row[0]->material_description.'$'.$qty_tol.'$'.$run_date;
                    }else{

						echo 1;
                    }
                }
                else
                {
                	echo 0;
                }
			}
		}
		
		public function check_sfg_val(){
			$component = $this->input->post('component');
			$workorder_no = $this->input->post('workorder_no');
			$heat_code = $this->input->post('heat_code');
			$batch = $this->input->post('batch');
			$to_rack = $this->input->post('to_rack');
			
			if(!empty($component)){
                $row = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$to_rack, 'rack_id' => 'IN'));              
				
				$mat = $row[0]->material;
				$hc = $row[0]->heat_no;
				$btch = $row[0]->batch;
				$wo = $row[0]->workorder_no;
				
				if($component == $mat){
					if($hc == $heat_code){
						//if($btch == $batch){
							if($wo == $workorder_no){
								echo "1";
							} else{
								echo "Workorder Number Mismatch in Rack";
							}
						//} else{
						//	echo "Batch Mismatch in Rack";
						//}
					} else{
						echo "Heat Code Mismatch in Rack";
					}
				} else{
					echo "Material Mismatch in Rack";
				}
                
			}
		}
		
		
		public function sfg_insert_confirm(){
			
			$post_data = $this->input->post();
			
			if(!empty($post_data['machine_id']) && !empty($post_data['component'])) {
				
				
				
				$insert_data = array('runchart'=>$post_data['runchart'],'materialqr'=>$post_data['materialqr'],'machine_id'=>$post_data['machine_id'],'workorder_no'=>$post_data['workorder_no'],'process'=>$post_data['process1'],'component'=>$post_data['component'],'component_status'=>$post_data['component_status'],'heat_code'=>$post_data['heat_code'],'batch'=>$post_data['batch'],'drg_no'=>$post_data['drg_no'],'ins_lot_no'=>$post_data['ins_lot_no'],'qty_scan'=>$post_data['qty_scan'],'tray'=>$post_data['tray'],'issue_qty'=>$post_data['issue_qty'],'material'=>$post_data['material'],'shift'=>$post_data['shift'],'cur_date'=>$post_data['cur_date'],'qty'=>$post_data['qty'],'weight'=>$post_data['weight'],'operator'=>$post_data['operator'],'trace_id'=>$post_data['trace_id'],'qty_diff'=>$post_data['qty_diff'],'sett_time'=>$post_data['sett_time'],'sett_pcs'=>$post_data['sett_pcs'],'run_time'=>$post_data['run_time'],'pr_pcs'=>$post_data['pr_pcs'],'to_location'=>$post_data['to_rack'],'location_qty'=>$post_data['location_qty'],'last_entry'=>$post_data['last_entry'],'p_date'=>$post_data['to'],'sfg_stage'=>$post_data['sfg_stage'],'sequence'=>$post_data['sequence'],'status'=>'1','status_det'=>'SAP Error');
				//$pro_date = $post_data['pro_date'];
				
				//print_r($insert_data);
				
				//$result1 = $this->Basic_model->get_data('sfg_data',array('workorder_no'=>$post_data['workorder_no'],'qty'=>$post_data['qty'],'shift'=>$post_data['shift'],'p_date'=>$post_data['from']));
				//if(!empty($result1)){
					
				//	echo '0';
					
				//}else{
					
					$insert_id = $this->Basic_model->insert_data('sfg_data',$insert_data);
					
					if($insert_id != ''){
						
						echo $insert_id;
						
					} else {
						
						echo '0';
						
					}
				//}
			}
			else{
				echo '0';
			}
		}
		
		
		public function sfg_machine_stock(){
			$post_data = $this->input->post();
			
			$torack = $post_data['to_rack'];
			$qty = $post_data['qty'];
			$production_no = $post_data['workorder_no'];
			$batch = $post_data['batch'];
			$heat_code = $post_data['heat_code'];
			$material = $post_data['material'];
			$insert_id = $post_data['insert_id'];
			$last_entry = $post_data['last_entry'];

			if(!empty($production_no)){
				$this->Basic_model->update_data('sfg_data',array('id'=>$insert_id),array('status'=>2,'status_det'=>'Completed')); 
				$row = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$torack,'rack_id'=>'IN'),array('department'=>'Machine Shop'));

				
				if(!empty($row)){
   
					$row2 =  $this->Basic_model->get_data('issue_master',array('production_order'=>$production_no));
          
					$norminal_value   = $row2[0]->norminal_value;
					$qtykg = $qty; 
					
					$to_location_2 = $row2[0]->toloc2;
				
					$location_im = $row2[0]->location;
			
					$workcenter_im = $row2[0]->work_center;
					
					
					
					if($location_im == 'M/C SHOP 1'){
						$r_location = 'Shop 1';
					} else if($location_im == 'M/C SHOP 2'){
						$r_location = 'Shop 2';
					}   else if($location_im == 'M/C SHOP 2A'){
						$r_location = 'Shop 2A';
					}  else if($location_im == 'M/C SHOP 2B'){
						$r_location = 'Shop 2B';
					}  else if($location_im == 'M/C SHOP 3'){
						$r_location = 'Shop 3';
					}  else if($location_im == 'M/C SHOP 4'){
						$r_location = 'Shop 4';
					}   else if($location_im == 'M/C SHOP 3A'){
						$r_location = 'Shop 3A';
					}   else if($location_im == 'M/C SHOP 3B'){
						$r_location = 'Shop 3B';
					}   else if($location_im == 'M/C SHOP 4A'){
						$r_location = 'Shop 4A';
					}   else if($location_im == 'M/C SHOP 4B'){
						$r_location = 'Shop 4B';
					}   else if($location_im == 'M/C SHOP 5'){
						$r_location = 'Shop 5';
					}   else if($location_im == 'M/C SHOP 6'){
						$r_location = 'Shop 6';
					}    else if($location_im == 'M/C SHOP 5A'){
						$r_location = 'Shop 5A';
					}   else if($location_im == 'M/C SHOP 5B'){
						$r_location = 'Shop 5B';
					}   else if($location_im == 'M/C SHOP 6A'){
						$r_location = 'Shop 6A';
					}   else if($location_im == 'M/C SHOP 6B'){
						$r_location = 'Shop 6B';
					}   
					
					if($last_entry != 1){
						$qty1 = $row[0]->qty-$qtykg;

						$ms_up = $this->Basic_model->update_data('rack_master',"storage_loc = '".$torack."' and rack_id = 'IN' and department LIKE '%Machine Shop%'",array('qty'=>$qty1));
					} else{
						$ms_up = $this->Basic_model->update_data('rack_master',"storage_loc = '".$torack."' and rack_id = 'IN' and department LIKE '%Machine Shop%'",array('qty'=>'','rack_status'=>'','rm_id'=>'','material'=>'','heat_no'=>'','batch'=>'','workorder_no'=>'','invoice_date'=>''));
					}	
    
					//$qty1 = $row[0]->qty-$qtykg;

					//$ms_up = $this->Basic_model->update_data('rack_master',"storage_loc = '".$torack."' and rack_id = 'IN' and department LIKE '%Machine Shop%'",array('qty'=>$qty1));
					
					//if($ms_up){
					
						
						
						// Check FIFO store for Null Value
						$sql_ru = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$to_location_2,'rack_id'=>$workcenter_im, 'department'=>'FIFO Store','material'=>NULL,'heat_no'=>NULL,'batch'=>NULL));
						
						// If FIFO store has Null Value update the data with qty
						if(!empty($sql_ru)){
							
							$avaliableqty = $sql_ru[0]->qty;
							$totqty = $avaliableqty + $qty; 
							
							$this->Basic_model->update_data('rack_master',"storage_loc = '".$to_location_2."' and rack_id = '".$workcenter_im."' and department LIKE '%FIFO Store%'",array('qty'=>$totqty,'rack_status'=>'IN','material'=>$material,'heat_no'=>$heat_code,'batch'=>$batch,'updated_date'=>date("Y-m-d H:i:s"),'workorder_no'=>$production_no,'ref_id'=>$insert_id,'ref_doc'=>'SFG Process Data','rack_no'=>$r_location));
						
						} else{ 
							// If FIFO store does not have Null Value update the data with qty
							
							// Check FIFO store for Material, Batch, Heatcode & Work order
							$sql_ru1 = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$to_location_2,'rack_id'=>$workcenter_im,'department'=>'FIFO Store','material'=>$material,'heat_no'=>$heat_code,'batch'=>$batch,'workorder_no'=>$production_no));
							
							if(!empty($sql_ru1)){ 
								// If FIFO store has same set of data's add with the prev qty and update it
								
								$avaliable_qty = $sql_ru1[0]->qty;
								$tot_qty = $avaliable_qty + $qty;
								
								$this->Basic_model->update_data('rack_master',"storage_loc = '".$to_location_2."' and rack_id = '".$workcenter_im."' and department LIKE '%FIFO Store%' and 'material' = '".$material."' and 'heat_no' = '".$heat_code."' and 'batch' = '".$batch."' and 'workorder_no' = '".$production_no."'",array('qty'=>$tot_qty,'rack_status'=>'IN','material'=>$material,'heat_no'=>$heat_code,'batch'=>$batch,'updated_date'=>date("Y-m-d H:i:s"),'workorder_no'=>$production_no,'ref_id'=>$insert_id,'ref_doc'=>'SFG Process Data','rack_no'=>$r_location));
							
							} else{ 
								// If FIFO store does not have same set of data's , insert into a new row and update the qty
								
								$insert_data = array('storage_loc'=>$to_location_2,'rack_id'=>$workcenter_im,'rack_no'=>$r_location,'department'=>'FIFO Store','qty'=>$qty,'rack_status'=>'IN','material'=>$material,'heat_no'=>$heat_code,'batch'=>$batch,'workorder_no'=>$production_no,'ref_id'=>$insert_id,'ref_doc'=>'SFG Process Data','updated_date'=>date("Y-m-d H:i:s"),'status'=>'1');
								$insert_rack = $this->Basic_model->insert_data('rack_master',$insert_data);
							}
						
						}
						
						$insert_data1 = array('workorder_number'=>$production_no,'storage_loc'=>$to_location_2,'rack_id'=>$workcenter_im,'rack_no'=>$r_location,'department'=>'FIFO Store','rack_status'=>'IN','qty'=>$qty,'material'=>$material,'heat_no'=>$heat_code,'batch'=>$batch,'ref_id'=>$insert_id,'ref_doc'=>'SFG Process Data');
							
						$insert_id = $this->Basic_model->insert_data('rack_master_updates',$insert_data1);
					
					
					
					echo 1;
				}               
			}
		}
		
		
		
		
		public function get_rs_sfg(){
			
			
			$insert_id = $this->input->post('insert_id');
			$to = date("d-m-Y");
	
			$row = $this->Basic_model->get_data('sfg_data',array('id'=>$insert_id));
			if(!empty($row)){
				echo $row[0]->workorder_no.'$'.$row[0]->machine_id.'$'.$row[0]->material.'$'.$row[0]->component.'$'.$to.'$'.$row[0]->shift.'$'.$row[0]->to_location.'$'.$row[0]->qty.'$'.$row[0]->heat_code.'$'.$row[0]->batch.'$'.$row[0]->last_entry;				
			}
			
			
		}
		
		// End of SFG Data and It's Sub Functionalities
		
		
		// Production Rebin Data and It's Sub Functionalities
		
		public function production_rebin($id=''){
			
			if ($this->input->is_ajax_request()) {
				$this->load->model('Production_rebin');
				$list = $this->Production_rebin->get_datatables();
				$data = array();
				$no = $_POST['start'];
				//print_r($this->db->last_query());die();
				foreach ($list as $pr) {
					
					$no++;
					$row = array();
					$row[] = $no;
					$row[] = '<a class="btn btn-primary arrivalsub btn-sm" onClick="print_preview('.$pr->id.');">Preview</a>';
					$row[] = date('d-m-Y',strtotime($pr->inserted_datetime));
					$row[] = $pr->workorder_no;
					$row[] = $pr->material;
					$row[] = $pr->po_heatno;
					$row[] = $pr->po_batch; 
					$row[] = $pr->qty; 
					$row[] = $pr->po_trace; 
					$row[] = $pr->po_wo; 
					$row[] = $pr->to_rack; 
					$row[] = $pr->{'313_doc'};  
					$row[] = $pr->{'315_doc'}; 
					$data[] = $row;
				}
 
				$output = array(
                        "draw" => $_POST['draw'],
                        "recordsTotal" => $this->Production_rebin->count_all(),
                        "recordsFiltered" => $this->Production_rebin->count_filtered(),
                        "data" => $data,
                );
				//output to json format
				echo json_encode($output); exit;
			}
			
			$data = array();
						
			$data['content'] 	= $this->load->view('production/production_rebin', $data, TRUE);      
			$this->load->view('viewpage', $data);
			
		}
		
		public function sfg_movement_preview($id=''){			
			$data = array();				
			$data['record'] 	= $this->Basic_model->get_data('sfg_issue',array('id'=>$this->input->get('id')));
			$prod_date1 = $data['record'][0]->material_qr;
			
			$res = explode(";",$prod_date1);
			$orgDate = $res[1];  
			$prod_date = date("d-m-Y", strtotime($data['record'][0]->inserted_datetime));  
  
			$qrtext = $data['record'][0]->po_trace.":".$data['record'][0]->workorder_no.":".$data['record'][0]->material.":".$data['record'][0]->qty.":".$data['record'][0]->po_heatno.":".$data['record'][0]->po_batch.":".$data['record'][0]->{'313_doc'}.":".$prod_date.":".$data['record'][0]->to_rack.":".$data['record'][0]->from_rack;

			$data['qrimage'] = $this->qrcodeGenerator($qrtext);
			echo $this->load->view('production/sfg_movement_preview', $data, TRUE);      
			
		}
		
		public function ajax_production_rebin(){
			$post_data = $this->input->post();
			
			$production_no = $post_data['workorder_no'];
			
			$row_sfg =  $this->Basic_model->get_data(array('sfg_issue',array('id','ASC'),array(1,0)),array('workorder_no'=>$production_no));
			//print_r($this->db->last_query());
			if(!empty($row_sfg)){
				$po_trace = $row_sfg[0]->po_trace;		

				$sfg_heatnoos = $row_sfg[0]->po_heatno;
				$sfg_batches = $row_sfg[0]->po_batch;	
			} else{
				$po_trace = '';
				
				$sfg_heatnoos = $row_sfg[0]->po_heatno;	
				$sfg_batches = $row_sfg[0]->po_batch;
			}
			
			$row =  $this->Basic_model->get_data('issue_master',array('production_order'=>$production_no));
			//print_r($this->db->last_query());
			if(!empty($row)){
				$component = $row[0]->component;  // Process Data Material
				$material = $row[0]->material;
				$work_centre = $row[0]->work_center;
				$location = $row[0]->location;
				$quantity = $row[0]->quantity;
				$quantity_produced = $row[0]->quantity_produced_far;
				$nominal_value = $row[0]->norminal_value;
				$trace_id_wo = $row[0]->scheduleunique;
				$to_loc = $row[0]->toloc;
				$to_loc2 = $row[0]->toloc2;
				$batch = $row[0]->batch;
				
				$location_im = $location;
				
				if($location_im == 'M/C SHOP 1'){
						$r_location = 'Shop 1';
					} else if($location_im == 'M/C SHOP 2'){
						$r_location = 'Shop 2';
					}   else if($location_im == 'M/C SHOP 2A'){
						$r_location = 'Shop 2A';
					}  else if($location_im == 'M/C SHOP 2B'){
						$r_location = 'Shop 2B';
					}  else if($location_im == 'M/C SHOP 3'){
						$r_location = 'Shop 3';
					}  else if($location_im == 'M/C SHOP 4'){
						$r_location = 'Shop 4';
					}   else if($location_im == 'M/C SHOP 3A'){
						$r_location = 'Shop 3A';
					}   else if($location_im == 'M/C SHOP 3B'){
						$r_location = 'Shop 3B';
					}   else if($location_im == 'M/C SHOP 4A'){
						$r_location = 'Shop 4A';
					}   else if($location_im == 'M/C SHOP 4B'){
						$r_location = 'Shop 4B';
					}   else if($location_im == 'M/C SHOP 5'){
						$r_location = 'Shop 5';
					}   else if($location_im == 'M/C SHOP 6'){
						$r_location = 'Shop 6';
					}    else if($location_im == 'M/C SHOP 5A'){
						$r_location = 'Shop 5A';
					}   else if($location_im == 'M/C SHOP 5B'){
						$r_location = 'Shop 5B';
					}   else if($location_im == 'M/C SHOP 6A'){
						$r_location = 'Shop 6A';
					}   else if($location_im == 'M/C SHOP 6B'){
						$r_location = 'Shop 6B';
					}   
					
					$loc = $r_location;
				
				if($to_loc == $to_loc2){
					echo "alert_1";
				} else{
					
					
					
					$row1 = $this->Basic_model->get_data('rack_master',array('department'=>'Machine Shop','storage_loc'=>$to_loc,'rack_no'=>$loc));
					
					if(!empty($row1)){
						
						if($row1[0]->workorder_no == '' || $row1[0]->workorder_no == $production_no){
						
							if(!empty($row_sfg)){
								$row_2q =  $this->Basic_model->get_data(array('production_data,trace_id'),array('material'=>$component,'trace_id'=>$po_trace));
								
								$row_2w =  $this->Basic_model->get_data(array('rack_master',array('updated_date','ASC'),array(1,0)),array('material'=>$component, 'heat_no'=>$row_2q[0]->heat_code, 'batch'=>$row_2q[0]->batch, 'workorder_no'=>$row_2q[0]->workorder_no));
								
								if(!empty($row_2w)){
									if($row_2w[0]->qty > 0){
										$row2 =  $this->Basic_model->get_data(array('production_data,trace_id'),array('material'=>$component,'trace_id'=>$po_trace));
									}else{
										$row2 =  $this->Basic_model->get_data(array('production_data,trace_id'),array('material'=>$component));
									}
								} else{
									$row2 =  $this->Basic_model->get_data(array('production_data,trace_id'),array('material'=>$component));
								}
								
							} else{
								$row2 =  $this->Basic_model->get_data(array('production_data,trace_id'),array('material'=>$component));
							}	
							//print_r($this->db->last_query());
							
							if(!empty($row2)){
								$t_count = count($row2);
								$html = '';
								$trace_option = '';
								
								$sno = 1;		
								
								$html .= '<table class="table table-bordered">';
								$html .= '<thead><tr><th>S.No</th><th>Work Centre</th><th>Component</th><th>Workorder No</th><th>Available Quantity in Rack</th><th>From Location</th><th>Trace Id</th></tr></thead><tbody>';
								$nu = 0;
								foreach($row2 as $mc_row){
									
									$trace_id = $mc_row->trace_id;
									$workorder_number = $mc_row->workorder_no;
									$trace_id = $mc_row->trace_id;
									$batch_1 = $mc_row->batch;
									$heat_no = $mc_row->heat_code;
									
									$trace_new = explode("/",$trace_id);
									
									$trace_update = $trace_new[0].'_'.$trace_new[1].'_'.$trace_new[2];
									
									$row10 =  $this->Basic_model->get_data('issue_master',array('production_order'=>$workorder_number));
									
									
									$row3 = $this->Basic_model->get_data('sfg_issue',array('workorder_no'=>$production_no),NULL,NULL,'sum(qty) as quty');
									
									//print_r($this->db->last_query());
									if(!empty($row3)){
										
										$transfered_qty = $row3[0]->quty;
										
										if($transfered_qty == ''){
											
											$transfered_qty = 0;
											
										}
										
									} else{
										
										$transfered_qty = 0;
										
									}
									
									$row4 =  $this->Basic_model->get_data(array('rack_master',array('updated_date','ASC'),array(1,0)),array('material'=>$component, 'heat_no'=>$heat_no, 'batch'=>$batch_1, 'workorder_no'=>$workorder_number));
									//print_r($this->db->last_query());
									//echo "<br/>";
									if(!empty($row4)){
										$rc_qty = $row4[0]->qty;
										
										if($rc_qty == ''){
											$rc_qty = 0;
										}
									} else{
										$rc_qty = 0;
									}
									//echo $rc_qty."<br/>";
									$balance_qty = $quantity - $transfered_qty;
									//echo $workorder_number.'-'.$rc_qty.'-'.$heat_no.'-'.$sfg_heatnoos.'<br/>';
									if($rc_qty > 0){
										//print_r($row10);
										
											if(!empty($sfg_heatnoos)){
												
												if($sfg_heatnoos == $heat_no){
													
													if($sfg_batches == $batch_1){
													//print_r($row10);
														$trace_value = $trace_id.'@'.$row4[0]->qty.'@'.$heat_no.'@'.$batch_1.'@'.$workorder_number;
											
														$html .= '<tr><td>'.$sno++.'</td><td>'.$row10[0]->work_center.'</td><td>'.$component.'</td><td>'.$workorder_number.'</td><td>'.$row4[0]->qty.' <input type="hidden" id="'.$trace_update.'" value="'.$trace_value.'"></td><td>'.$row4[0]->storage_loc.'</td><td>'.$trace_id.'</td></tr>';	
														$nu++;
													} else{
														
													}
													
												} else{
													
												}
												
											} else{
												$trace_value = $trace_id.'@'.$row4[0]->qty.'@'.$heat_no.'@'.$batch_1.'@'.$workorder_number;
											
												$html .= '<tr><td>'.$sno++.'</td><td>'.$row10[0]->work_center.'</td><td>'.$component.'</td><td>'.$workorder_number.'</td><td>'.$row4[0]->qty.' <input type="hidden" id="'.$trace_update.'" value="'.$trace_value.'"></td><td>'.$row4[0]->storage_loc.'</td><td>'.$trace_id.'</td></tr>';	
												
											}
										
										
									} else{
										
									}
								}

								//die();
								$html .= '</tbody></table>';
								$html .= '<br/>';
								$html .= '<input type="hidden" value="'.$component.'" id="component">';
								$html .= '<input type="hidden" value="'.$material.'" id="material">';
								$html .= '<input type="hidden" value="'.$work_centre.'" id="work_centre">';
								$html .= '<input type="hidden" value="'.$location.'" id="location">';
								$html .= '<input type="hidden" value="'.$quantity.'" id="quantity">';
								$html .= '<input type="hidden" value="'.$quantity_produced.'" id="quantity_produced">';
								$html .= '<input type="hidden" value="'.$nominal_value.'" id="nominal_value">';
								$html .= '<input type="hidden" value="'.$trace_id_wo.'" id="trace_id_wo">';
								$html .= '<input type="hidden" value="'.$to_loc.'" id="to_loc">';
								$html .= '<input type="hidden" value="'.$to_loc2.'" id="to_loc2">';
								$html .= '<input type="hidden" value="'.$batch.'" id="batch">';
								$html .= '<input type="hidden" value="'.$transfered_qty.'" id="transfered_qty">';
								$html .= '<input type="hidden" value="'.$balance_qty.'" id="balance_qty">';
								
								
								
								echo $html;
							} else{
								echo "0";
							}
						}else{
							echo "alert_mismatch";
						}
					} else{
						echo "alert_2";
					}
				}
			}
		}
		
		
		public function ajax_production_rebin_trace(){
			$post_data = $this->input->post();
			
			$trace = $post_data['trace'];
			$cmpnt = $post_data['cmpnt'];
			$workorder_no = $post_data['workorder_no'];
			$run_chart = $post_data['run_chart'];
			$to_location = $post_data['to_location'];
			
			$check_run_chart =  $this->Basic_model->get_data('sfg_issue',NULL,  array('material_qr'=>$run_chart));
			
			//print_r($this->db->last_query());
			
			//die();
			
			if(!empty($check_run_chart)){
				echo "qr_error";
				//die();
			} else{
			
				$row_sfg =  $this->Basic_model->get_data(array('sfg_issue',array('id','DESC'),array(1,0)),array('workorder_no'=>$workorder_no));
				
				if(!empty($row_sfg)){
					$po_trace = $row_sfg[0]->po_trace;
					
					$chec_po = $this->Basic_model->get_data(array('production_data,workorder_no'),array('trace_id'=>$po_trace));
					
					if(!empty($chec_po)){
						$cpo_wo = $chec_po[0]->workorder_no;
						$cpo_hc = $chec_po[0]->heat_code;
						$cpo_ba = $chec_po[0]->batch;
						$cpo_ma = $chec_po[0]->material;
						
						$chec_rack = $this->Basic_model->get_data('rack_master',array('material'=>$cpo_ma,'heat_no'=>$cpo_hc,'batch'=>$cpo_ba,'workorder_no'=>$cpo_wo));
						
						if(!empty($chec_rack)){
							$rc_qty = $chec_rack[0]->qty;
							
							if($rc_qty == '0.000' || $rc_qty == NULL){
								$po_trace = $trace;
							} else{
								$po_trace = $row_sfg[0]->po_trace;
								
							}
						}else{
							$po_trace = $trace;
						}
						//print_r($this->db->last_query());
			
				//die();
					}else{
						$po_trace = $trace;
					}
					
					
				} else{
					$po_trace = $trace;
				}
				//echo $po_trace.'<br/>'.$trace;
				if($po_trace != $trace){
					echo 'trace_error';
				} else{
					
					$row_heat_code =  $this->Basic_model->get_data(array('production_data,heat_code'),array('material'=>$cmpnt,'trace_id'=>$trace));
					
					
					
					$row_batch =  $this->Basic_model->get_data(array('production_data,batch'),array('material'=>$cmpnt,'trace_id'=>$trace));
					
					if(!empty($row_heat_code)){
						$chc = count($row_heat_code);
					}else{
						$chc = 0;
					}
					
					if(!empty($row_batch)){
						$cb = count($row_batch);
					}else{
						$cb = 0;
					}
					
					if($chc != '1' || $cb != '1'){
						echo 'error_3';
					} else{
					
						$row =  $this->Basic_model->get_data(array('production_data,trace_id'),array('material'=>$cmpnt,'trace_id'=>$trace));
						
						
						
						if(!empty($row)){
							
							foreach($row as $mc_row){
								
								$trace_id = $mc_row->trace_id;
								$batch_1 = $mc_row->batch;
								$heat_no = $mc_row->heat_code;
								$workorder_number = $mc_row->workorder_no;
								
								//$row2 =  $this->Basic_model->get_data(array('rack_master_updates,workorder_number',array('inserted_date','ASC'),array(1,0)),array('material'=>$cmpnt, 'heat_no'=>$heat_no, 'batch'=>$batch_1, 'department'=>'FIFO Store'));
								
								//if(!empty($row2)){
								//	$workorder_number = $row2[0]->workorder_number;
								//} else{
								//	$workorder_number = '';
								//}
								
								$row3 =  $this->Basic_model->get_data(array('rack_master',array('updated_date','ASC'),array(1,0)),array('material'=>$cmpnt, 'workorder_no'=>$workorder_number));
								
								
								
								if(!empty($row3)){
									$qty_1 = $row3[0]->qty;
									if($qty_1 == '' || $qty_1 <= 0){
										echo 'error_4';
									} else{
										
										$row_new = $this->Basic_model->get_data(array('rack_master',array('updated_date','ASC'),array(1,0)),array('storage_loc'=>$to_location));
										
										
										if(!empty($row_new)){
											$to_loc_qty = $row_new[0]->qty;
											
											if($to_loc_qty != ''  || $to_loc_qty > 0){
												$st_material = $row_new[0]->material;
												$st_wo = $row_new[0]->workorder_no;
												
												if($st_material == '' || $st_material == 'NULL'){
													echo $qty_1;
												} else{
												
													if($cmpnt == $st_material){
														if($workorder_no == $st_wo){
															echo $qty_1;
														}else{
															echo "wo_error";
														}
													} else{
														echo "material_error";
													}
												}	
											} else{
												echo $qty_1;
											}
										}else{
											echo "rack_error";
										}
										
										
									}
								} else{
									echo 'error_2';
								}
							}
							
						}else{
							echo 'error_1';
						}
					}	
				}
			}	
		
		}
		
		//AP/092022/6D23C3F086::3BSBS800XXXXX0NFH1::10629: 3500.000:PC:040000945599:20221028:152411:2:DPR51:220148::AC@
		//AP/092022/6D23C3F086::3BSBS800XXXXX0NFH1::10629: 3500.000:PC:040000945599:20221028:152411:1:DPR51:220148::AC@
		
		//AP/122022/859AE81496::3CNM10NUTXXXX0NFH1::11013: 720.000:PC:040000960755:20221207:151859:1:DPO15:n.gubendran::AC
		//AP/122022/859AE81496::3CNM10NUTXXXX0NFH1::11013: 1165.000:PC:040000959994:20221205:151154:1:DPO15:220119::AC
		public function ajax_check_fromloc(){
			$post_data = $this->input->post();
			
			$trace_id = $post_data['material_qr_traceid'];
			$qty = $post_data['available_rack_qty'];
			$material = $post_data['sfg_component'];
			
			$row =  $this->Basic_model->get_data(array('production_data,workorder_no'),array('trace_id'=>$trace_id,'material'=>$material));
			
			if(!empty($row)){
				$wo = $row[0]->workorder_no;
				
				$row1 = $this->Basic_model->get_data('rack_master',array('workorder_no'=>$wo,'material'=>$material));
				
				if(!empty($row1)){
					echo $from_loc = $row1[0]->storage_loc;
				}
			}
		}
		
		
		public function ajax_sfg_movement(){
			$post_data = $this->input->post();
			
			$curr_date = $post_data['curr_date'];
	
			$sfg_wo = $post_data['sfg_wo'];
			$sfg_component = $post_data['sfg_component'];
			$sfg_toloc = $post_data['sfg_toloc'];
			$sfg_allowedqty = $post_data['sfg_allowedqty'];
			
			$material_qr = $post_data['material_qr'];
			$material_qr_traceid = $post_data['material_qr_traceid'];
			$transfering_qty = $post_data['transfering_qty'];
			$available_rack_qty = $post_data['available_rack_qty'];
			
			$doc_313 = $post_data['doc_313'];
			$doc_315 = $post_data['doc_315'];
			$sequence = $post_data['sequence'];
			
			$row =  $this->Basic_model->get_data('issue_master',array('production_order'=>$sfg_wo));
			
			if(!empty($row)){
				
				
				$qty = $row[0]->quantity;
				$qty_produced = $row[0]->quantity_produced_far;
				$mat = $row[0]->material;
				$bat = $row[0]->batch;
				$st = $row[0]->scheduleunique;
				$wc = $row[0]->work_center;
				$location = $row[0]->location;
				
				$location_im = $location;
				
				if($location_im == 'M/C SHOP 1'){
						$r_location = 'Shop 1';
					} else if($location_im == 'M/C SHOP 2'){
						$r_location = 'Shop 2';
					}   else if($location_im == 'M/C SHOP 2A'){
						$r_location = 'Shop 2A';
					}  else if($location_im == 'M/C SHOP 2B'){
						$r_location = 'Shop 2B';
					}  else if($location_im == 'M/C SHOP 3'){
						$r_location = 'Shop 3';
					}  else if($location_im == 'M/C SHOP 4'){
						$r_location = 'Shop 4';
					}   else if($location_im == 'M/C SHOP 3A'){
						$r_location = 'Shop 3A';
					}   else if($location_im == 'M/C SHOP 3B'){
						$r_location = 'Shop 3B';
					}   else if($location_im == 'M/C SHOP 4A'){
						$r_location = 'Shop 4A';
					}   else if($location_im == 'M/C SHOP 4B'){
						$r_location = 'Shop 4B';
					}   else if($location_im == 'M/C SHOP 5'){
						$r_location = 'Shop 5';
					}   else if($location_im == 'M/C SHOP 6'){
						$r_location = 'Shop 6';
					}    else if($location_im == 'M/C SHOP 5A'){
						$r_location = 'Shop 5A';
					}   else if($location_im == 'M/C SHOP 5B'){
						$r_location = 'Shop 5B';
					}   else if($location_im == 'M/C SHOP 6A'){
						$r_location = 'Shop 6A';
					}   else if($location_im == 'M/C SHOP 6B'){
						$r_location = 'Shop 6B';
					}
					
					$loc = $r_location;
				
				$row1 = $this->Basic_model->get_data(array('production_data,workorder_no'),array('trace_id'=>$material_qr_traceid,'material'=>$sfg_component));
				//35910.000
				//32610.000
				
				if(!empty($row1)){
					
					$po_wo = $row1[0]->workorder_no;
					$po_batch = $row1[0]->batch;
					$po_heatno = $row1[0]->heat_code;
					
					$row2 =  $this->Basic_model->get_data(array('rack_master',array('updated_date','ASC'),array(1,0)),array('material'=>$sfg_component, 'batch'=>$po_batch, 'workorder_no'=>$po_wo));
							
					if(!empty($row2)){
						
						$allowed_qty = $row2[0]->qty;
						$sql_fifo_rack_id = $row2[0]->id;
						$sql_fifo_storage_loc = $row2[0]->storage_loc;

						if($allowed_qty == $available_rack_qty){
							$rack_qty = $available_rack_qty;
						} else{
							$rack_qty = $allowed_qty;
						}

						$up_rack_qty = $rack_qty - $transfering_qty;


						// update in rack master
						if($up_rack_qty >= 0){
							$this->Basic_model->update_data('rack_master',array('id'=>$sql_fifo_rack_id),array('qty'=>$up_rack_qty)); 
						} 
						
						$row3 = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$sfg_toloc,'rack_no'=>$loc),array('department'=>'Machine Shop'));
						//$row3 = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$sfg_toloc),array('department'=>'FIFO Store','rack_no'=>$loc));
						//print_r($this->db->last_query());die();
						if(!empty($row3)){
							$rmid = $row3[0]->id;
							$rack_av_qty = $row3[0]->qty;
							$av_qty = $rack_av_qty + $transfering_qty;
						
//echo $av_qty;
							$suq = $this->Basic_model->update_data('rack_master',array('id'=>$rmid),array('storage_loc'=>$sfg_toloc,'rack_no'=>$loc,'department'=>'Machine Shop','qty'=>$av_qty,'rack_status'=>'IN','material'=>$sfg_component,'batch'=>$bat,'workorder_no'=>$sfg_wo,'ref_id'=>NULL,'ref_doc'=>'Movement from FIFO to SFG','updated_date'=>date('Y-m-d H:i:s'),'status'=>'1')); 
							
							
							$insert_data = array('workorder_no'=>$sfg_wo,'qty'=>$transfering_qty,'material'=>$sfg_component,'sfg_trace'=>$st,'po_trace'=>$material_qr_traceid,'to_rack'=>$sfg_toloc,'from_rack'=>$sql_fifo_storage_loc,'po_wo'=>$po_wo,'rack_id'=>$rmid,'ref_doc'=>'Material Moved from FIFO to SFG','material_qr'=>$material_qr,'sfg_batch'=>$bat,'313_doc'=>$doc_313,'315_doc'=>$doc_315,'po_batch'=>$po_batch,'po_heatno'=>$po_heatno,'sequence'=>$sequence,'inserted_datetime'=>date('Y-m-d H:i:s'));
							
							$insert_rack = $this->Basic_model->insert_data('sfg_issue',$insert_data);
							if($insert_rack){
								echo '1';
								
							} else{
								echo '3';
							}
						}
						else{
							echo '0';
						}
					}
				}
			}
		}
		
		// End of Production Rebin Data and It's Sub Functionalities
		
		
		// Supplier Out Data and It's Sub Functionalities
		
		public function supplier_out($id=''){	

			if ($this->input->is_ajax_request()) {
				$this->load->model('Supplier_out');
				$list = $this->Supplier_out->get_datatables();
				$data = array();
				$no = $_POST['start'];
				foreach ($list as $pr) {
					
					
					
					$no++;
					$row = array();
					$row[] = $no;
					$row[] = date("d-m-Y",strtotime($pr->updated_date));
					$row[] = $pr->doc_no;
					$row[] = $pr->part_no;
					$row[] = $pr->po_number;
					$row[] = $pr->line_no;
					$row[] = $pr->vendor_id; 
					$row[] = $pr->phy_qty; 
					$row[] = $pr->user; 
					$row[] = $pr->status; 
					$data[] = $row;
				}
 
				$output = array(
                        "draw" => $_POST['draw'],
                        "recordsTotal" => $this->Supplier_out->count_all(),
                        "recordsFiltered" => $this->Supplier_out->count_filtered(),
                        "data" => $data,
                );
				//output to json format
				echo json_encode($output); exit;
			}
		
			$data = array();
			
			//$data['listout'] 	= $this->Basic_model->get_data(array('dc_out_data',array('id','DESC'))); 			
			$data['content'] 	= $this->load->view('production/supplier_out', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		
		
		public function split_data($id=''){
			
			$post_data = $this->input->post();
			$ins = 0;
			$po_number = $post_data['po_number'];
			$polength= count($po_number);
			$url ='';
			for ($j = 1; $j <= $polength; $j++) { 

				$qc_accept = $post_data['qc_accept'][$j];
				$material_document = $post_data['part_no'];
				$unique = $post_data['unique'];
				$po_number = $post_data['po_number'][$j];
				$vendor_id = $post_data['vendor_id'][$j];
				$phy_qty = $post_data['phy_qty'][$j];
				$line_no = $post_data['line_no'][$j];
				$from_loc = $post_data['from_loc'][$j];
				$weight = $post_data['weight'][$j];
				$no_of_trays = $post_data['trays'][$j];
				$doc_no = $post_data['doc_no'];
				$pdt = $post_data['pdt'];
				$htxt = $post_data['htxt'];  
				$qctag = $qc_accept;
				
				$bcode = explode(":",$qctag[0])[2];
				$batch = explode(":", $qctag[0])[1];
				//die();
				if($url != ''){
					$url .="&";
				}
				$url .= "pdt[]=".$pdt."&htxt[]=".$htxt."&mvt[]=541&ptno[]=".$bcode."&stno[]=".$from_loc."&btno[]=".$batch."&qty[]=".$phy_qty."&ven[]=".$vendor_id."&pon[]=".$po_number."&pln[]=".$line_no."&itxt[]=&gmcd[]=04&weight[]=".$weight."&no_of_trays[]=".$no_of_trays ;
			}
			echo $url;
			
		}
		
		public function insert_dc_out($id=''){
			
			$post_data = $this->input->post();
			$ins = 0;
			$po_number = $post_data['po_number']; 
			for ($j = 1; $j <= count($po_number) + 1; $j++) {
				//if(!empty($_POST['qc_accept']) && !empty($_POST['vendor_id'])) {

				$qc_accept = $post_data['qc_accept'][$j];
				$material_document = $post_data['part_no'];
				$unique = $post_data['unique'];
				$po_number = $post_data['po_number'][$j];
				$vendor_id = $post_data['vendor_id'][$j];
				$weight = $post_data['weight'][$j];
				$no_of_trays = $post_data['trays'][$j];
				$phy_qty = $post_data['phy_qty'][$j];
				$line_no = $post_data['line_no'][$j];
				$doc_no = $post_data['doc_no'];
				$user = $post_data['user'];
				//$qctag = explode(',',$qc_accept);  
				$qctag = $qc_accept;

				for ($i = 0; $i < count($qctag); $i++) {
					
					$insert_data = array('part_no'=>$material_document,'uniquecode'=>$unique,'po_number'=>$po_number,'vendor_id'=>$vendor_id,'phy_qty'=>$phy_qty,'qc_accept'=>$qctag[$i],'line_no'=>$line_no,'doc_no'=>$doc_no,'weight'=>$weight,'no_of_trays'=>$no_of_trays,'user'=>$user,);
						
					$insert_id = $this->Basic_model->insert_data('dc_out_data',$insert_data);	
					
					//print_r($this->db->last_query()); 
				 
					if ($insert_id) {
						$ins = $ins + 1;
					}

				}
			}

			if($ins > 0){
				echo '1'; 
			}else{	
				echo '3'; 
			}
			
			
		}
		
		// End of Supplier Out Data and It's Sub Functionalities
		
		
		// Supplier In Data and It's Sub Functionalities
		
		public function supplier_in($id=''){	

			if ($this->input->is_ajax_request()) {
				$this->load->model('Supplier_in');
				$list = $this->Supplier_in->get_datatables();
				$data = array();
				$no = $_POST['start'];
				foreach ($list as $pr) {
					
					
					
					$no++;
					$row = array();
					$row[] = $no;
					$row[] = '<a class="btn btn-primary arrivalsub btn-sm" onClick="print_preview('.$pr->id.');">Preview</a>';
					$row[] = date("d-m-Y",strtotime($pr->updated_time));
					$row[] = $pr->doc_no;
					$row[] = $pr->po_number;
					$row[] = $pr->line_no;
					$row[] = $pr->supplier;
					$row[] = $pr->phy_qty;  
					$row[] = $pr->user;  
					$data[] = $row;
				}
 
				$output = array(
                        "draw" => $_POST['draw'],
                        "recordsTotal" => $this->Supplier_in->count_all(),
                        "recordsFiltered" => $this->Supplier_in->count_filtered(),
                        "data" => $data,
                );
				//output to json format
				echo json_encode($output); exit;
			}
		
		
			$data = array();
			
			//$data['listout'] 	= $this->Basic_model->get_data(array('dc_in_data',array('id','DESC'))); 	
		
			$data['content'] 	= $this->load->view('production/supplier_in', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		
		public function supplier_preview($id=''){			
			$data = array();				
			$data['record'] 	= $this->Basic_model->get_data('dc_in_data',array('id'=>$this->input->get('id')));
			
			$prod_date1 = $data['record'][0]->updated_time;
			
			//$res = explode(";",$prod_date1);
			//$orgDate = $res[1];  
			$prod_date = date("d-m-Y", strtotime($prod_date1));  
  

			 $qrtext = $data['record'][0]->doc_no.":".$data['record'][0]->po_number.":".$data['record'][0]->line_no.":".$data['record'][0]->supplier.":".$data['record'][0]->phy_qty.":".$data['record'][0]->user.":".$data['record'][0]->uniquecode.":".$data['record'][0]->no_of_tray.":".$data['record'][0]->weight_dimension.":".$prod_date.":FI";
			 
			 

			$data['qrimage'] = $this->qrcodeGenerator($qrtext);
			
			echo $this->load->view('production/supplier_preview', $data, TRUE);      
			
		}
		
		
		public function get_dc_list(){
			$material = $this->input->post('material');
			
			
			
				if(!empty($material)){
					$row = $this->Basic_model->get_data(array('dc_out_data,uniquecode'),array('po_number'=>$material,'status'=>'OUT'));           
					if(!empty($row)){
						$i=1;
						foreach ($row as $pr) {
							 echo '<tr class="gradeX">
									<form action="#" method="post" enctype="multipart/form-data">
										<td>'.$i++.'</td>
										<td>'.$pr->vendor_id.' <input type="hidden" value="'.$pr->vendor_id.'" name="vendor_id" id="vendor_id" class="vendor_id"></td>
										<td>'.$pr->uniquecode.' <input type="hidden" value="'.$pr->uniquecode.'" name="uniquecode" id="uniquecode" class="uniquecode"></td>        
										<td>'.$pr->po_number.' <input type="hidden" value="'.$pr->po_number.'" name="po_number" id="po_number" class="po_number"></td>  
										<td>'.$pr->phy_qty.' <input type="hidden" value="'.$pr->phy_qty.'" name="phy_qty" id="phy_qty" class="phy_qty"></td>
										<td>'.$pr->line_no.' <input type="hidden" value="'.$pr->line_no.'" name="line_no" id="line_no" class="line_no"></td>
										<td>'.$pr->updated_date.' <input type="hidden" value="'.$pr->updated_date.'" name="updated_date" id="updated_date" class="updated_date"></td>
										</form> 
									</tr>';
						}
						
						$row1 = $this->db->query("SELECT a.po_number,b.trace_id,a.vendor_id,a.vendor_name, a.phy_qty, a.line_no, a.updated_date FROM `vendor_out` a left join vendor_out_qctag b on a.id = b.vo_id where a.po_number = '".$material."' and a.status = '2' GROUP by a.po_number,b.trace_id")->result(); 
						
						if(!empty($row1)){
							
							foreach ($row1 as $pr1) {
								 echo '<tr class="gradeX">
										<form action="#" method="post" enctype="multipart/form-data">
											<td>'.$i++.'</td>
											<td>'.$pr1->vendor_id.' <input type="hidden" value="'.$pr1->vendor_id.'" name="vendor_id" id="vendor_id" class="vendor_id"></td>
											<td>'.$pr1->trace_id.' <input type="hidden" value="'.$pr1->trace_id.'" name="uniquecode" id="uniquecode" class="uniquecode"></td>        
											<td>'.$pr1->po_number.' <input type="hidden" value="'.$pr1->po_number.'" name="po_number" id="po_number" class="po_number"></td>  
											<td>'.$pr1->phy_qty.' <input type="hidden" value="'.$pr1->phy_qty.'" name="phy_qty" id="phy_qty" class="phy_qty"></td>
											<td>'.$pr1->line_no.' <input type="hidden" value="'.$pr1->line_no.'" name="line_no" id="line_no" class="line_no"></td>
											<td>'.$pr1->updated_date.' <input type="hidden" value="'.$pr1->updated_date.'" name="updated_date" id="updated_date" class="updated_date"></td>
											</form> 
										</tr>';
							}
						} 
								
					}
					else
					{
						$row1 = $this->db->query("SELECT a.po_number,b.trace_id,a.vendor_id,a.vendor_name, a.phy_qty, a.line_no, a.updated_date FROM `vendor_out` a left join vendor_out_qctag b on a.id = b.vo_id where a.po_number = '".$material."' and a.status = '2' GROUP by a.po_number,b.trace_id")->result(); 
						
						if(!empty($row1)){
							$i=1;
							foreach ($row1 as $pr1) {
								 echo '<tr class="gradeX">
										<form action="#" method="post" enctype="multipart/form-data">
											<td>'.$i++.'</td>
											<td>'.$pr1->vendor_id.' <input type="hidden" value="'.$pr1->vendor_id.'" name="vendor_id" id="vendor_id" class="vendor_id"></td>
											<td>'.$pr1->trace_id.' <input type="hidden" value="'.$pr1->trace_id.'" name="uniquecode" id="uniquecode" class="uniquecode"></td>        
											<td>'.$pr1->po_number.' <input type="hidden" value="'.$pr1->po_number.'" name="po_number" id="po_number" class="po_number"></td>  
											<td>'.$pr1->phy_qty.' <input type="hidden" value="'.$pr1->phy_qty.'" name="phy_qty" id="phy_qty" class="phy_qty"></td>
											<td>'.$pr1->line_no.' <input type="hidden" value="'.$pr1->line_no.'" name="line_no" id="line_no" class="line_no"></td>
											<td>'.$pr1->updated_date.' <input type="hidden" value="'.$pr1->updated_date.'" name="updated_date" id="updated_date" class="updated_date"></td>
											</form> 
										</tr>';
							}
						} else{
							echo "No Record found";
						}
					}
				}
			
		}
		
		public function fg_check_qty(){
			$barcode_count = $this->input->post('barcode_count');
			$uni = $this->input->post('uni');
			
				if(!empty($barcode_count)){
					$row = $this->Basic_model->get_data('dc_out_data',array('uniquecode'=>$uni));           
					if(!empty($row)){
						if(count($row) < $barcode_count){
							echo '2';
						}
						else
						{
							echo '1';
						}
					} else{
						$row_new = $this->Basic_model->get_data('vendor_out_qctag',array('trace_id'=>$uni));  
						//print_r($this->last_db->query());die();
						if(count($row_new) != 0){
							if(count($row_new) < $barcode_count){
								echo '2';
							}
							else
							{
								echo '1';
							}
						}
					}
				}else{
					echo '5';
				}
			
		}
		
		public function vendor_in_batch(){
			$po_number = $this->input->post('pon');
			$uniquecode = $this->input->post('itxt');
			$line_no = $this->input->post('line_no');
			
				if(!empty($po_number) || !empty($uniquecode)){
					//$row = $this->db->query("select distinct(a.batch) as batch from dc_details a, dc_out_data b where a.po_number = '".$po_number."' and b.uniquecode = '".$uniquecode."' and a.material_document = b.doc_no and a.part_no = b.part_no")->row();
					
					
					$join = array('dc_out_data as b' =>array('a.material_document = b.doc_no and a.part_no = b.part_no','left'));
					$row = $this->Basic_model->get_data(['dc_details as a,a.batch'],['a.po_number'=>$po_number,'b.uniquecode'=>$uniquecode],NULL,$join,'a.batch');
					//print_r($this->db->last_query()); die();
					          
					if(!empty($row)){
						$batch = $row[0]->batch;
					} else{
						$new_test = $this->db->query("SELECT `a`.`batch` FROM `dc_details` as `a` LEFT JOIN `vendor_out` as `b` ON `a`.`material_document` = `b`.`doc_no` and `a`.`part_no` = `b`.`bom1` LEFT JOIN `vendor_out_qctag` as `c` ON `b`.`id` = `c`.`vo_id` WHERE `a`.`po_number` = '".$po_number."' AND `c`.`trace_id` = '".$uniquecode."' GROUP BY `a`.`batch`")->result(); 
						//print_r($this->db->last_query()); die();
						if(!empty($new_test)){
							$batch = $new_test[0]->batch;
						}else{
							$batch = '';
						}
					}
					
					$check_vendor = $this->Basic_model->get_data('vendor_master',array('po_number'=>$po_number,'line_item'=>$line_no));
					//print_r($this->db->last_query()); die();
					
					if(!empty($check_vendor)){
						$vendor_id = $check_vendor[0]->vendor_id;
						$component = $check_vendor[0]->component;
					} else{
						$vendor_id = '';
						$component = '';
					}
					
					echo $batch.':'.$vendor_id.':'.$component;
				}
			
		}
		
		public function insert_dc_in(){
			
			
			//$insert_rack = array('storage_loc'=>'ST03','rack_id'=>'7220015907','rack_no'=>'QC','department'=>'Sub-Contract Store','qty'=>'14050.000','rack_status'=>'IN','rm_id'=>'NULL','material'=>'3BSBS7431XXXX0NFH3','ref_id'=>'197','ref_doc'=>'Vendor IN Process','updated_date'=>date("Y-m-d H:i:s"),'status'=>'1');
			//				
			//$insert_rack_id = $this->Basic_model->insert_data('rack_master',$insert_rack);
			//die();
			$qc_accept = $this->input->post('qc_accept');
			$unique = $this->input->post('unique');
			$post_data = $this->input->post();
				if(!empty($qc_accept) || !empty($unique)){
					
					//echo $qc_accept;
					$qc_accep =  rtrim($qc_accept,'@');
					$qctag = explode('@',$qc_accep);
					//print_r($qctag);
					//die();
					
					
					
					for ($i = 0; $i <= count($qctag)-1; $i++) {
						
						
						
						$rack_id = $post_data['doc_no'];
						$qty = $post_data['phy_qty'];
						$rack_status = 'IN';
						
						$ref_doc = 'Vendor IN Process';
						
						$qctag1 = explode(':',$qctag[$i]);
						$material = $qctag1[7];
						
						if($post_data['location'] == 1){
							
							$department = 'Sub-Contract Store';
							$storage_loc = 'ST03';
							$rack_no = 'QC';
							
						} else if($post_data['location'] == 2){
							
							$department = 'Quality Store';
							$storage_loc = 'QC01';
							$rack_no = 'IN';
							
						} else if($post_data['location'] == 3){
							
							$department = 'Quality Store';
							$storage_loc = 'QC02';
							$rack_no = 'IN';
							
						} else if($post_data['location'] == 4){
							
							$department = 'Quality Store';
							$storage_loc = 'QC03';
							$rack_no = 'IN';
							
						} else if($post_data['location'] == 5){
							
							$department = 'Quality Store';
							$storage_loc = 'QC04';
							$rack_no = 'IN';
							
						} 
						//$check = $this->Basic_model->get_data('vendor_master',array('po_number'=>$post_data['po_number'],'line_item'=>$post_data['line_no']));  
						
						
						$check = $this->Basic_model->get_data('vendor_master',array('po_number'=>$post_data['po_number'],'line_item'=>$post_data['line_no'],'vendor_name'=>$post_data['supplier'],'bom1'=>$material));  
						
						if(!empty($check)){
							$comp = $check[0]->component;
						} else{
							$comp = $material;
						}
						
						$in_mat = $check[0]->bom1;
						
						//echo $i;
						$insert_data = array('uniquecode'=>$post_data['unique'],'po_number'=>$post_data['po_number'],'phy_qty'=>$post_data['phy_qty'],'qc_accept'=>$qctag[$i],'line_no'=>$post_data['line_no'],'doc_no'=>$post_data['doc_no'],'supplier'=>$post_data['supplier'],'invoice_no'=>$post_data['invoice_no'],'user'=>$post_data['user'],'no_of_tray'=>$post_data['trays'],'weight_dimension'=>$post_data['weight_kg'],'inw_material'=>$comp);
						
						$insert_id = $this->Basic_model->insert_data('dc_in_data',$insert_data);
						
						
						
						$ref_id = $insert_id;
						
						$row = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$storage_loc,'rack_id'=>$rack_id,'rack_no'=>$rack_no,'department'=>$department));  
						
						

						if(empty($row)){
							$insert_rack = array('storage_loc'=>$storage_loc,'rack_id'=>$rack_id,'rack_no'=>$rack_no,'department'=>$department,'qty'=>$qty,'rack_status'=>$rack_status,'rm_id'=>'NULL','material'=>$comp,'ref_id'=>$ref_id,'ref_doc'=>$ref_doc,'updated_date'=>date("Y-m-d H:i:s"),'status'=>'1');
							
							$insert_rack_id = $this->Basic_model->insert_data('rack_master',$insert_rack);
							
						}
						
						//print_r($this->db->last_query());
						$this->Basic_model->update_data('dc_out_data',array('uniquecode'=>$post_data['unique'],'phy_qty'=>$post_data['phy_qty'],'po_number'=>$post_data['po_number']),array('status'=>'IN'));
						
					}
					echo '1';
					
				}else{
					echo '3';
				}
			
		}
		
		
		// End of Supplier In Data and It's Sub Functionalities
		
		
		// Delivery Challan Data and It's Sub Functionalities
		
		public function delivery_challan($id=''){			
			
			if ($this->input->is_ajax_request()) {
				$this->load->model('Delivery_challan');
				$list = $this->Delivery_challan->get_datatables();
				$data = array();
				$no = $_POST['start']; 
				//print_r($this->db->last_query()); die();
				foreach ($list as $pr) {
					
					
					
					$no++;
					$row = array();
					$row[] = $no;
					$row[] = '<a class="btn btn-primary arrivalsub btn-sm" onClick="print_preview('.$pr->id.');">Preview</a>'; 
					$row[] = $pr->material_document;
					$row[] = $pr->dc_no;
					$row[] = $pr->delivery_date;
					$row[] = $pr->po_number; 
					$row[] = $pr->purchase_item_no; 
					$row[] = $pr->part_no; 
					$row[] = $pr->qty; 
					$row[] = $pr->vendor_name; 
					$row[] = $pr->vendor_no; 
					
					$data[] = $row;
				}
 
				$output = array(
                        "draw" => $_POST['draw'],
                        "recordsTotal" => $this->Delivery_challan->count_all(),
                        "recordsFiltered" => $this->Delivery_challan->count_filtered(),
                        "data" => $data,
                );
				//output to json format
				echo json_encode($output); exit;
			}	
		
			$data = array(); 	
			$data['content'] 	= $this->load->view('production/delivery_challan', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		
		
		
		public function dc_preview($id=''){			
			$data = array();	
			
			$data['record'] 	= $this->Basic_model->get_data('dc_details',array('id'=>$this->input->get('id')),NULL);
			
			$row 	= $this->Basic_model->get_data(array('dc_out_data',array('id','DESC')),array('doc_no'=>$data['record'][0]->material_document),NULL);
			//print_r($this->db->last_query());die();
			
			if(empty($row)){
				$row1 	= $this->Basic_model->get_data(array('vendor_out',array('id','DESC')),array('doc_no'=>$data['record'][0]->material_document,'line_no'=>$data['record'][0]->purchase_item_no),NULL);
				//print_r($this->db->last_query());die();
				$row2 = $this->Basic_model->get_data(array('vendor_out_qctag',array('id','DESC')),array('vo_id'=>$row1[0]->id),NULL);
				//print_r($this->db->last_query());die();
				
				if(!empty($row2)){
					$uniquecode = $row2[0]->trace_id;
				} else{
					$uniquecode = '';
				}	
				
			} else{
			
				$uniquecode = $row[0]->uniquecode;
			
			}
			//echo $uniquecode;
			//print_r($row);
			$qrtext = $uniquecode.":".$data['record'][0]->po_number.":".$data['record'][0]->purchase_item_no.":".$data['record'][0]->qty.":".$data['record'][0]->dc_no.":".$data['record'][0]->material_document.":".$data['record'][0]->vendor_name.":".$data['record'][0]->part_no;			
			
			$data['qrimage'] = $this->qrcodeGenerator($qrtext);
			echo $this->load->view('production/dc_preview', $data, TRUE);      
			
		}
		
		// End of Delivery Challan Data and It's Sub Functionalities
		
		// FG Inward Data and It's Sub Functionalities
		
		public function fg_inward($id=''){	

			if ($this->input->is_ajax_request()) {
				$this->load->model('Fg_inward');
				$list = $this->Fg_inward->get_datatables();
				$data = array();
				$no = $_POST['start'];
				foreach ($list as $pr) {
					
					if($pr->status == 0 || $pr->status == 2){
						$style = '';
						$button = '<a class="btn btn-primary arrivalsub btn-sm" onClick="print_preview('.$pr->id.');">Preview</a>';
					} else{
						$style = 'td_clr';
						$button  = '<a class="btn btn-primary arrivalsub btn-sm" onClick="resubmit('.$pr->id.');">Resubmit</a>';
					}
					
					$no++;
					$row = array();
					$row[] = $no;
					$row[] = $button;
					$row[] = date("d-m-Y",strtotime($pr->updated_date));
					$row[] = $pr->shift;
					$row[] = $pr->part_no;
					$row[] = $pr->workorder_no;
					$row[] = $pr->trace_id;
					$row[] = $pr->part_name;
					$row[] = $pr->component_id; 
					$row[] = $pr->component_status; 
					$row[] = $pr->inspected_by; 
					$row[] = $pr->qty; 
					$row[] = $pr->weight; 
					$row[] = '<span class="'.$style.'">'.$pr->status_det.'</span>';  
					$row[] = $pr->id; 
					$data[] = $row;
				}
 
				$output = array(
                        "draw" => $_POST['draw'],
                        "recordsTotal" => $this->Fg_inward->count_all(),
                        "recordsFiltered" => $this->Fg_inward->count_filtered(),
                        "data" => $data,
                );
				//output to json format
				echo json_encode($output); exit;
			}		


		
			$data = array();
			
			//$data['listout'] 	= $this->Basic_model->get_data('production_data'); 			
			$data['content'] 	= $this->load->view('production/fg_inward', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		
		public function fg_preview($id=''){			
			$data = array();				
			$data['record'] 	= $this->Basic_model->get_data('fg_inward',array('id'=>$this->input->get('id')));
			$prod_date1 = $data['record'][0]->updated_date;
			//$res = explode(";",$prod_date1);
			//$orgDate = $res[1];  
			$prod_date = date("d-m-Y", strtotime($prod_date1));  
  

			 $qrtext = $data['record'][0]->trace_id.":".$data['record'][0]->workorder_no.":".$data['record'][0]->part_no.":".$data['record'][0]->qty."/".$data['record'][0]->weight.":".$data['record'][0]->part_name.":".$data['record'][0]->heat_code.":".$data['record'][0]->component_id.":".$data['record'][0]->machine_id.":".$data['record'][0]->shift.":".$prod_date.":".$data['record'][0]->inspected_by.":FI";

			$data['qrimage'] = $this->qrcodeGenerator($qrtext);
			
			echo $this->load->view('production/fg_preview', $data, TRUE);      
			
		}
		
		
		public function fg_loc(){
			$production_no = $this->input->post('workorder_no');
			if($production_no != ''){
				$location = $this->Basic_model->get_data('issue_master',array('production_order'=>$production_no));	
				//print_r($location);
				if(!empty($location)){
					$input_location   = $location[0]->toloc; 
					$output_location   = $location[0]->toloc2;
					
					if($input_location == '' || $input_location == NULL){ 
						echo 'Input Location is Not available';
					}else if($output_location == '' || $output_location == NULL){
						echo 'Output Location is Not available';
					}else if($output_location == $input_location ){
						echo 'Input Location and Output Location cannot be same';
					}else{
						echo 1;
					}
				}
				else{
					echo 'Wrong Work Order';
				}
			}
		}
		
		public function fg_insert_confirm(){
			
			$post_data = $this->input->post();
			
			
			$production_no = $post_data['workorder_no'];
			$st = 1;
			
			$check_fg = $this->Basic_model->get_data('fg_inward',array('workorder_no'=>$production_no));
			
			if(!empty($check_fg)){
				$fg_trace = $check_fg[0]->trace_id;
				
				if($fg_trace == $post_data['unique_id']){
					$new_fg = 1;
				} else{
					$new_fg = 0;
				}
			}else{
				$new_fg = 1;
			}
			
			//if($new_fg == 1){
			
				if(!empty($production_no)){
				
					
					$check = $this->Basic_model->get_data('issue_master',array('production_order'=>$production_no));
					
					$input_loc = $check[0]->toloc;
					$output_loc = $check[0]->toloc2;
					$work_center = $check[0]->work_center;
					$location = $check[0]->location;
					$qty = $post_data['qty'];
					
					
					$row = $this->Basic_model->get_data('rack_master',array('material'=>$post_data['component_id'],'storage_loc'=>$input_loc, 'qty >' => '0.000'));
					//print_r($this->db->last_query());die(); //7181
					if(!empty($row)){
						$rack_id = $row[0]->id;
						$rack_qty = $row[0]->qty;
						$rack_rack_id = $row[0]->rack_id;
						$rack_rack_no = $row[0]->rack_no;
						$rack_department = $row[0]->department;
						$rack_rack_status = $row[0]->rack_status;
						$rack_material = $row[0]->material;
						$rack_heat_no = $row[0]->heat_no;
						$rack_batch = $row[0]->batch;
						
						$update_qty = $rack_qty - $qty;
						
						//if($update_qty >= '0'){
							
				
							if(!empty($post_data['fgqr']) && !empty($post_data['workorder_no'])) {
								
								$trce = str_split($post_data['unique_id']);
								
								//Array ( [0] => A [1] => P [2] => / [3] => 0 [4] => 9 [5] => 2 [6] => 0 [7] => 2 [8] => 2 [9] => / [10] => 0 [11] => 2 [12] => A [13] => 7 [14] => 2 [15] => 5 [16] => E [17] => E [18] => 9 [19] => B )
								
								$btch = $trce[3].$trce[4].$trce[7].$trce[8].$trce[14].$trce[15].$trce[16].$trce[17].$trce[18].$trce[19];
								
								$insert_data = array('workorder_no'=>$post_data['workorder_no'],'fgqr'=>$post_data['fgqr'],'part_no'=>$post_data['part_no'],'part_name'=>$post_data['part_name'],'batch_no'=>$post_data['batch_no'],'scan_qty'=>$post_data['scan_qty'],'insp_lot_no'=>$post_data['insp_lot_no'],'component_status'=>$post_data['component_status'],'no_of_tray'=>$post_data['no_of_tray'],'heat_code'=>$post_data['heat_code'],'form_date'=>$post_data['form_date'],'trace_id'=>$post_data['unique_id'],'component_id'=>$post_data['component_id'],'shift'=>$post_data['shift'],'inspected_by'=>$post_data['user'],'approved_by'=>'NULL','qty'=>$post_data['qty'],'weight'=>$post_data['weight'],'diff_qty'=>'NULL','pack_diff_qty'=>'NULL','sett_time'=>'NULL','run_time'=>'NULL','sett_pcs'=>'NULL','pack_slip_count'=>$post_data['pack_slip_count'],'pack_slip_qty'=>$post_data['pack_slip_qty'],'sequence'=>$post_data['sequence'],'pack_weight'=>$post_data['pack_weight'],'status'=>'1', 'status_det'=>'SAP Error', 'fg_batch'=>$btch);
								//$pro_date = $post_data['pro_date'];
								
								
								
								$result1 = $this->Basic_model->get_data('fg_inward',array('workorder_no'=>$post_data['workorder_no'],'qty'=>$post_data['qty'],'shift'=>$post_data['shift'],'form_date'=>$post_data['form_date']));
								if(!empty($result1)){
									
									echo '0';
									
								}else{
									
									$insert_id = $this->Basic_model->insert_data('fg_inward',$insert_data);
									
									if($insert_id != ''){
										
										echo $insert_id;
										
									} else {
										
										echo '0.1';
										
									}
								}
							}
							else{
								echo '0.2';
							}
						//} else{
						//	echo '0.3';
						//}
					} else{
						echo '0.4';
					}	
				}
			//} else{
			//	echo '0.5';
			//}	
		}
		
		public function fg_machine_stock(){
			$post_data = $this->input->post();
			
			
			$production_no = $post_data['workorder_no'];
			$insert_id = $post_data['insert_id'];
			$st = 1;
			
			if(!empty($production_no)){
				$this->Basic_model->update_data('fg_inward',array('id'=>$insert_id),array('status'=>2,'status_det'=>'Completed')); 
				
				$check = $this->Basic_model->get_data('issue_master',array('production_order'=>$production_no));
				
				$input_loc = $check[0]->toloc;
				$output_loc = $check[0]->toloc2;
				$work_center = $check[0]->work_center;
				$location = $check[0]->location;
				
				$check1 = $this->Basic_model->get_data('fg_inward',array('id'=>$insert_id));
				
				$qty = $check1[0]->qty;
				$component = $check1[0]->component_id;
				$part_no = $check1[0]->part_no;
				$heat_code = $check1[0]->heat_code;
				$batch = $check1[0]->batch_no;
				
				$row = $this->Basic_model->get_data('rack_master',array('material'=>$component,'storage_loc'=>$input_loc, 'qty >' => '0.000'));
				//print_r($this->db->last_query());die();
				if(!empty($row)){
					$rack_id = $row[0]->id;
					$rack_qtys = $row[0]->qty;
					$rack_rack_id = $row[0]->rack_id;
					$rack_rack_no = $row[0]->rack_no;
					$rack_department = $row[0]->department;
					$rack_rack_status = $row[0]->rack_status;
					$rack_material = $row[0]->material;
					$rack_heat_no = $row[0]->heat_no;
					$rack_batch = $row[0]->batch;
					
					$update_qty = $rack_qtys - $qty;
					
					//if($update_qty >= '0'){
						
						$insert_data2 = array('workorder_number'=>$production_no,'storage_loc'=>$input_loc,'rack_id'=>$rack_rack_id,'rack_no'=>$rack_rack_no,'department'=>$rack_department,'rack_status'=>$rack_rack_status,'qty'=>$rack_qty,'material'=>$rack_material,'heat_no'=>$rack_heat_no,'batch'=>$rack_batch,'ref_id'=>$rack_id,'ref_doc'=>'FG Input Stock before decreasing');
								
						$insert_rmp2 = $this->Basic_model->insert_data('rack_master_updates',$insert_data2);
						
						$insert_data3 = array('workorder_number'=>$production_no,'storage_loc'=>$input_loc,'rack_id'=>$rack_rack_id,'rack_no'=>$rack_rack_no,'department'=>$rack_department,'rack_status'=>$rack_rack_status,'qty'=>$update_qty,'material'=>$rack_material,'heat_no'=>$rack_heat_no,'batch'=>$rack_batch,'ref_id'=>$rack_id,'ref_doc'=>'FG Input Stock after decreasing');
								
						$insert_rmp3 = $this->Basic_model->insert_data('rack_master_updates',$insert_data3);
						
						$ms_up = $this->Basic_model->update_data('rack_master',"id = '".$rack_id."'",array('qty'=>$update_qty));
						
						$row1 = $this->Basic_model->get_data('rack_master',array('material'=>$part_no,'department'=>'FG Store', 'workorder_no' => $production_no));
						
						if(!empty($row1)){
							$rc_qty = $row1[0]->qty;
							$rc_id = $row1[0]->id;
							
							$rc_up_qty = $rc_qty + $qty;
							
							$rc_up = $this->Basic_model->update_data('rack_master',"id = '".$rc_id."'",array('qty'=>$rc_up_qty));
							
						} else{
						
							$insert_data = array('storage_loc'=>$output_loc,'rack_id'=>$work_center,'rack_no'=>$location,'department'=>'FG Store','qty'=>$qty,'rack_status'=>'IN','material'=>$part_no,'heat_no'=>$heat_code,'batch'=>$batch,'workorder_no'=>$production_no,'ref_id'=>$insert_id,'ref_doc'=>'FG Inward','updated_date'=>date("Y-m-d H:m:s"),'status'=>'1');
						
							$insert_rack = $this->Basic_model->insert_data('rack_master',$insert_data);
						
						}
						
						$insert_data1 = array('workorder_number'=>$production_no,'storage_loc'=>$output_loc,'rack_id'=>$work_center,'rack_no'=>$location,'department'=>'FG Store','rack_status'=>'IN','qty'=>$qty,'material'=>$part_no,'heat_no'=>$heat_code,'batch'=>$batch,'ref_id'=>$insert_id,'ref_doc'=>'FG Inward Ouput Stock');
								
						$insert_rmp1 = $this->Basic_model->insert_data('rack_master_updates',$insert_data1);
						
						echo 1;
						
					//} else{
					//	echo "error_1";
					//}
				}
				
			}
			
			
			
		}
		
		public function fg_batchcall(){
			$production_order = $this->input->post('workorder_no');
			
			
			
				if(!empty($production_order)){
					$row = $this->Basic_model->get_data('issue_master',array('production_order'=>$production_order));           
					if(!empty($row)){
						echo $row[0]->material.','.$row[0]->material_description;
					}
					else
					{
						echo 0;
					}
				}
			
		}
		
		// End of FG Inward Data and It's Sub Functionalities
		
		
		
		// Assembly Data and It's Sub Functionalities
		
		public function assembly($id=''){			
			$data = array();
			
			$data['content'] 	= $this->load->view('production/assembly', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		
		public function get_schedule_details(){
			$production_order = $this->input->post('wo');
			
			if(!empty($production_order)){
				$row = $this->Basic_model->get_data('issue_master',array('production_order'=>$production_order));   
				
				if(!empty($row)){
					
					$htmldata = '';
					$sn = 1;
					foreach($row as $det){
					$htmldata .='
								<tr>
									<td>'.$sn++.'</td>
									<td>'.$det->component.'</td>
									<td>'.$det->quantity.'</td>
									<td>'.$det->material.'</td>
									<td>'.$det->material_description.'</td>
									<td>'.$det->work_center.'</td>
									<td><input type="text" name="scan_qr[]" class="form-control" placeholder="Scan your Tag here..."></td>
									<td><input type="text" name="tag_qty[]" class="form-control" placeholder="Tag Qty" readonly></td>
									<td><input type="text" name="trays[]" class="form-control" placeholder="No of Trays..." ></td>
								</tr>';
					}			
					echo $htmldata;			
				}
				else
				{
					echo 0;
				}
			}
		}
		
		
		// End of Assembly Data and It's Sub Functionalities
		
		
		// Inward Movement Data and It's Sub Functionalities
		
		public function in_movement($id=''){			
			$data = array();
			
			$data['content'] 	= $this->load->view('production/in_movement', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		
		
		public function im_getdata($id=''){			
			$trace_id = $this->input->post('trace_id');
			$po_no = $this->input->post('po_no');
			$inv_no = $this->input->post('inv_no');
			$qty = $this->input->post('qty');
			
			$quantity = explode('.',$qty);
			
			$actual_qty = trim($quantity[0],' ');
			
			$row = $this->Basic_model->get_data('dc_in_data',array('uniquecode'=>$trace_id,'po_number'=>$po_no,'phy_qty'=>$actual_qty,'invoice_no'=>$inv_no));
			
			
			
			if(!empty($row)){
				$doc_no = $row[0]->doc_no;
				
				$row1 = $this->Basic_model->get_data('rack_master',array('rack_id'=>$doc_no));
				
				if(!empty($row1)){
					
					$storage_location = $row1[0]->storage_loc;
					$rack_no = $row1[0]->rack_no;
					$material = $row1[0]->material;
					$department = $row1[0]->department;
					$rid = $row1[0]->id;
					
					if($department == 'Quality Store'){
						echo $doc_no.'$'.$storage_location.'$'.$rack_no.'$'.$actual_qty.'$'.$material.'$'.$department.'$'.$rid;
					} else if($department == 'Sub-Contract Store'){
						if($rack_no != 'IN'){
							echo $doc_no.'$'.$storage_location.'$'.$rack_no.'$'.$actual_qty.'$'.$material.'$'.$department.'$'.$rid;
						} else{
							echo '1';
						}
					} else{
						echo '1';
					}
				}
			}
		}
		
		
		public function inhouse_movement($id=''){			
			$qc_tag = $this->input->post('qc_tag');
			$trace_id = $this->input->post('trace_id');
			$po_no = $this->input->post('po_no');
			$inv_no = $this->input->post('inv_no');
			$qty = $this->input->post('qty');
			$doc_number = $this->input->post('doc_number');
			$input_loc = $this->input->post('input_loc');
			$material = $this->input->post('material');
			$from_department = $this->input->post('department');
			$rid = $this->input->post('rid');
			$movement = $this->input->post('movement');
			
			$from_loc = explode('/',$input_loc);
			
			$from_storage_loc = $from_loc[0];
			$from_rack_no = $from_loc[1];
			$from_rack_id = $from_loc[2];
			
			$rack_no = 'IN';
			$rack_status = 'IN';
			$ref_doc = 'In-House Movement after QC test from supplier in';
			$ref_doc1 = 'Deleted after In-House Movement after QC test from supplier in';
			if($movement == 1){
				$storage_loc = 'ST04';
				$department = 'FG Store';
			} else if($movement == 2){
				$storage_loc = 'ST06';
				$department = 'FG Store';
			} else if($movement == 3){
				$storage_loc = 'AS01';
				$department = 'Assembly Store';
			} else if($movement == 4){
				$storage_loc = 'ST03';
				$department = 'Sub-Contract Store';
			}
			
			$insert_data = array('qc_tag'=>$qc_tag,'trace_id'=>$trace_id,'po_no'=>$po_no,'inv_no'=>$inv_no,'qty'=>$qty,'doc_number'=>$doc_number,'input_loc'=>$input_loc,'movement'=>$movement,'storage_loc'=>$storage_loc,'rack_no'=>$rack_no,'rack_id'=>$doc_number,'rack_status'=>$rack_status,'department'=>$department,'material'=>$material,'status'=>'1');
			
			$insert_id = $this->Basic_model->insert_data('inhouse_movement',$insert_data);
			//print_r($this->db->last_query());
			//die();
			if($insert_id != ''){
						
				$insert_update = array('qty'=>$qty,'storage_loc'=>$from_storage_loc,'rack_no'=>$from_rack_no,'rack_id'=>$from_rack_id,'rack_status'=>$rack_status,'department'=>$from_department,'material'=>$material,'ref_id'=>$rid,'ref_doc'=>$ref_doc1,'inserted_date'=>date("Y-m-d H:i:s"));
			
				$insert_rack_update = $this->Basic_model->insert_data('rack_master_updates',$insert_update);
				//print_r($this->db->last_query());
				$this->Basic_model->delete_data('rack_master',array('id'=>$rid));
				
				
				
				$insert_data1 = array('qty'=>$qty,'storage_loc'=>$storage_loc,'rack_no'=>$rack_no,'rack_id'=>$doc_number,'rack_status'=>$rack_status,'department'=>$department,'material'=>$material,'ref_id'=>$insert_id,'ref_doc'=>$ref_doc,'updated_date'=>date("Y-m-d H:i:s"),'status'=>'1');
			
				$insert_rack = $this->Basic_model->insert_data('rack_master',$insert_data1);
				
				if($insert_rack){
					echo '1';
				} else{
					echo '2';
				}
				
				
			} else {
				
				echo '0';
				
			}
			
		}
		
		
		
		public function sfg_movement_preview_stage2($id=''){			
			$data = array();				
			$data['record'] 	= $this->Basic_model->get_data('sfg_issue',array('id'=>$this->input->get('id')));
			$prod_date1 = $data['record'][0]->material_qr;
			
			$res = explode(";",$prod_date1);
			$orgDate = $res[1];  
			$prod_date = date("d-m-Y", strtotime($data['record'][0]->inserted_datetime));  
  
			$qrtext = $data['record'][0]->po_trace.":".$data['record'][0]->workorder_no.":".$data['record'][0]->material.":".$data['record'][0]->qty.":".$data['record'][0]->po_heatno.":".$data['record'][0]->po_batch.":".$data['record'][0]->{'313_doc'}.":".$prod_date.":".$data['record'][0]->to_rack.":".$data['record'][0]->from_rack;

			$data['qrimage'] = $this->qrcodeGenerator($qrtext);
			echo $this->load->view('production/sfg_movement_preview', $data, TRUE);      
			
		}
		
		public function ajax_production_rebin_stage2(){
			$post_data = $this->input->post();
			
			$production_no = $post_data['workorder_no'];
			
			$row_sfg =  $this->Basic_model->get_data(array('sfg_issue_multistage',array('id','ASC'),array(1,0)),array('workorder_no'=>$production_no));
			//print_r($this->db->last_query());
			if(!empty($row_sfg)){
				$po_trace = $row_sfg[0]->po_trace;		

				$sfg_heatnoos = $row_sfg[0]->po_heatno;	
				$sfg_batches = $row_sfg[0]->po_batch;	
			} else{
				$po_trace = '';
				
				$sfg_heatnoos = $row_sfg[0]->po_heatno;	
				$sfg_batches = $row_sfg[0]->po_batch;
			}
			
			$row =  $this->Basic_model->get_data('issue_master',array('production_order'=>$production_no));
			
			if(!empty($row)){
				$component = $row[0]->component;  // Process Data Material
				$material = $row[0]->material;
				$work_centre = $row[0]->work_center;
				$location = $row[0]->location;
				$quantity = $row[0]->quantity;
				$quantity_produced = $row[0]->quantity_produced_far;
				$nominal_value = $row[0]->norminal_value;
				$trace_id_wo = $row[0]->scheduleunique;
				$to_loc = $row[0]->toloc;
				$to_loc2 = $row[0]->toloc2;
				$batch = $row[0]->batch;
				
				$location_im = $location;
				
				if($location_im == 'M/C SHOP 1'){
						$r_location = 'Shop 1';
					} else if($location_im == 'M/C SHOP 2'){
						$r_location = 'Shop 2';
					}   else if($location_im == 'M/C SHOP 2A'){
						$r_location = 'Shop 2A';
					}  else if($location_im == 'M/C SHOP 2B'){
						$r_location = 'Shop 2B';
					}  else if($location_im == 'M/C SHOP 3'){
						$r_location = 'Shop 3';
					}  else if($location_im == 'M/C SHOP 4'){
						$r_location = 'Shop 4';
					}   else if($location_im == 'M/C SHOP 3A'){
						$r_location = 'Shop 3A';
					}   else if($location_im == 'M/C SHOP 3B'){
						$r_location = 'Shop 3B';
					}   else if($location_im == 'M/C SHOP 4A'){
						$r_location = 'Shop 4A';
					}   else if($location_im == 'M/C SHOP 4B'){
						$r_location = 'Shop 4B';
					}   else if($location_im == 'M/C SHOP 5'){
						$r_location = 'Shop 5';
					}   else if($location_im == 'M/C SHOP 6'){
						$r_location = 'Shop 6';
					}    else if($location_im == 'M/C SHOP 5A'){
						$r_location = 'Shop 5A';
					}   else if($location_im == 'M/C SHOP 5B'){
						$r_location = 'Shop 5B';
					}   else if($location_im == 'M/C SHOP 6A'){
						$r_location = 'Shop 6A';
					}   else if($location_im == 'M/C SHOP 6B'){
						$r_location = 'Shop 6B';
					}   

					$loc = $r_location;
				
				if($to_loc == $to_loc2){
					echo "alert_1";
				} else{
					
					
					
					$row1 = $this->Basic_model->get_data('rack_master',array('department'=>'Machine Shop','storage_loc'=>$to_loc,'rack_no'=>$loc));
					//print_r($this->db->last_query());
					if(!empty($row1)){
						
						if($row1[0]->workorder_no == '' || $row1[0]->workorder_no == $production_no){
							
							
						
							if(!empty($row_sfg)){
								$row_2q =  $this->Basic_model->get_data(array('sfg_data,trace_id'),array('material'=>$component,'trace_id'=>$po_trace));
								if(!empty($row_2q)){
									$row_123 = 1;
									$row_2w =  $this->Basic_model->get_data(array('rack_master',array('updated_date','ASC'),array(1,0)),array('material'=>$component, 'heat_no'=>$row_2q[0]->heat_code, 'batch'=>$row_2q[0]->batch, 'workorder_no'=>$row_2q[0]->workorder_no));
									
									if(!empty($row_2w)){
										if($row_2w[0]->qty > 0){
											$row2 =  $this->Basic_model->get_data(array('sfg_data,trace_id'),array('material'=>$component,'trace_id'=>$po_trace));
										}else{
											$row2 =  $this->Basic_model->get_data(array('sfg_data,trace_id'),array('material'=>$component));
										}
									} else{
										$row2 =  $this->Basic_model->get_data(array('sfg_data,trace_id'),array('material'=>$component));
									}
									
								}else{
									$row_2q1 =  $this->Basic_model->get_data(array('sfg_data_multistage,trace_id'),array('material'=>$component,'trace_id'=>$po_trace));
									if(!empty($row_2q1)){
										$row_123 = 2;
										$row_2w =  $this->Basic_model->get_data(array('rack_master',array('updated_date','ASC'),array(1,0)),array('material'=>$component, 'heat_no'=>$row_2q1[0]->heat_code, 'batch'=>$row_2q1[0]->batch, 'workorder_no'=>$row_2q1[0]->workorder_no));
										
										if(!empty($row_2w)){
											if($row_2w[0]->qty > 0){
												$row2 =  $this->Basic_model->get_data(array('sfg_data_multistage,trace_id'),array('material'=>$component,'trace_id'=>$po_trace));
											}else{
												$row2 =  $this->Basic_model->get_data(array('sfg_data_multistage,trace_id'),array('material'=>$component));
											}
										} else{
											$row2 =  $this->Basic_model->get_data(array('sfg_data_multistage,trace_id'),array('material'=>$component));
										}
									}else{
										$row_2q2 = $this->db->query("select * from dc_in_data where qc_accept like '%".$component."%' and uniquecode = '".$po_trace."' group by uniquecode"); 
										//print_r($this->db->last_query());
										if(!empty($row_2q2)){
											$row_123 = 3;
											$row_2w1 =  $this->Basic_model->get_data(array('rack_master',array('updated_date','ASC'),array(1,0)),array('material'=>$component, 'heat_no'=>$row_2q2[0]->supplier, 'batch'=>$row_2q2[0]->invoice_no, 'workorder_no'=>$row_2q2[0]->po_number));
											
											if(!empty($row_2w1)){
												if($row_2w1[0]->qty > 0){
													$row2 =  $this->db->query("select * from dc_in_data where qc_accept like '%".$component."%' and uniquecode = '".$po_trace."' group by uniquecode"); 
												}else{
													$row2 = $this->db->query("select * from dc_in_data where qc_accept like '%".$component."%' group by uniquecode");
												}
											} else{
												$row2 =  $this->db->query("select * from dc_in_data where qc_accept like '%".$component."%' group by uniquecode");
											}
										}
									}	
								}
								
							} else{
								$row2 =  $this->Basic_model->get_data(array('sfg_data,trace_id'),array('material'=>$component));
								//print_r($this->db->last_query());
								$row_123 = 1;
								if(empty($row2)){
									$row2 =  $this->Basic_model->get_data(array('sfg_data_multistage,trace_id'),array('material'=>$component));
									//print_r($this->db->last_query());
									$row_123 = 2;
									if(empty($row2)){
										$row2 = $this->Basic_model->get_data(array('dc_in_data,uniquecode'),array('inw_material'=>$component));
										$row_123 = 3;
										//print_r($this->db->last_query());
									}	
								}
								
								
							}	
							
							if(!empty($row2)){
								$t_count = count($row2);
								$html = '';
								$trace_option = '';
								
								$sno = 1;		
								
								$html .= '<table class="table table-bordered">';
								$html .= '<thead><tr><th>S.No</th><th>Work Centre</th><th>Component</th><th>Workorder No</th><th>Available Quantity in Rack</th><th>From Location</th><th>Trace Id</th></tr></thead><tbody>';
								$nu = 0;
								
								
								
								foreach($row2 as $mc_row){
									//echo $sno++;
									if($row_123 != 3){
										$trace_id = $mc_row->trace_id;
										$workorder_number = $mc_row->workorder_no;
										$trace_id = $mc_row->trace_id;
										$batch_1 = $mc_row->batch;
										$heat_no = $mc_row->heat_code;
									}else{
										$trace_id = $mc_row->uniquecode;
										$workorder_number = '';
										$trace_id = $mc_row->uniquecode;
										$batch_1 = '';
										$heat_no = '';
									}
									$trace_new = explode("/",$trace_id);
									
									$trace_update = $trace_new[0].'_'.$trace_new[1].'_'.$trace_new[2];
									
									$row10 =  $this->Basic_model->get_data('issue_master',array('production_order'=>$workorder_number));
									
									
									$row3 = $this->Basic_model->get_data('sfg_issue_multistage',array('workorder_no'=>$production_no),NULL,NULL,'sum(qty) as quty');
									
									
									if(!empty($row3)){
										
										$transfered_qty = $row3[0]->quty;
										
										if($transfered_qty == ''){
											
											$transfered_qty = 0;
											
										}
										
									} else{
										
										$transfered_qty = 0;
										
									}
									
									$row4 =  $this->Basic_model->get_data(array('rack_master',array('updated_date','DESC'),array(1,0)),array('material'=>$component));
									//print_r($this->db->last_query());
									if(!empty($row4)){
										$rc_qty = $row4[0]->qty;
										
										if($rc_qty == ''){
											$rc_qty = 0;
										}
									} else{
										$rc_qty = 0;
									}
									
									$balance_qty = $quantity - $transfered_qty;
									
									if($rc_qty > 0){
										
										if(!empty($sfg_heatnoos)){
											
											if($sfg_heatnoos == $heat_no){
												
												if($sfg_batches == $batch_1){
												
													$trace_value = $trace_id.'@'.$row4[0]->qty.'@'.$heat_no.'@'.$batch_1.'@'.$workorder_number;
										
													$html .= '<tr><td>'.$sno++.'</td><td>'.$row10[0]->work_center.'</td><td>'.$component.'</td><td>'.$workorder_number.'</td><td>'.$row4[0]->qty.' <input type="hidden" id="'.$trace_update.'" value="'.$trace_value.'"></td><td>'.$row4[0]->storage_loc.'</td><td>'.$trace_id.'</td></tr>';	
													$nu++;
												} else{
													
												}
												
											} else{
												
											}
											
										} else{
											$trace_value = $trace_id.'@'.$row4[0]->qty.'@'.$heat_no.'@'.$batch_1.'@'.$workorder_number;
										
											$html .= '<tr><td>'.$sno++.'</td><td>'.$row10[0]->work_center.'</td><td>'.$component.'</td><td>'.$workorder_number.'</td><td>'.$row4[0]->qty.' <input type="hidden" id="'.$trace_update.'" value="'.$trace_value.'"></td><td>'.$row4[0]->storage_loc.'</td><td>'.$trace_id.'</td></tr>';	
											
										}
										
										
									}
								}

								//die();
								$html .= '</tbody></table>';
								$html .= '<br/>';
								$html .= '<input type="hidden" value="'.$component.'" id="component">';
								$html .= '<input type="hidden" value="'.$material.'" id="material">';
								$html .= '<input type="hidden" value="'.$work_centre.'" id="work_centre">';
								$html .= '<input type="hidden" value="'.$location.'" id="location">';
								$html .= '<input type="hidden" value="'.$quantity.'" id="quantity">';
								$html .= '<input type="hidden" value="'.$quantity_produced.'" id="quantity_produced">';
								$html .= '<input type="hidden" value="'.$nominal_value.'" id="nominal_value">';
								$html .= '<input type="hidden" value="'.$trace_id_wo.'" id="trace_id_wo">';
								$html .= '<input type="hidden" value="'.$to_loc.'" id="to_loc">';
								$html .= '<input type="hidden" value="'.$to_loc2.'" id="to_loc2">';
								$html .= '<input type="hidden" value="'.$batch.'" id="batch">';
								$html .= '<input type="hidden" value="'.$transfered_qty.'" id="transfered_qty">';
								$html .= '<input type="hidden" value="'.$balance_qty.'" id="balance_qty">';
								
								
								
								echo $html;
							} else{
								echo "0";
							}
						}else{
							echo "alert_mismatch";
						}
					} else{
						echo "alert_2";
					}
				}
			}
		}
		
		
		public function ajax_production_rebin_trace_stage2(){
			$post_data = $this->input->post();
			
			$trace = $post_data['trace'];
			$cmpnt = $post_data['cmpnt'];
			$workorder_no = $post_data['workorder_no'];
			$run_chart = $post_data['run_chart'];
			$to_location = $post_data['to_location'];
			
			$check_run_chart =  $this->Basic_model->get_data('sfg_issue_multistage',NULL,  array('material_qr'=>$run_chart));
			
			//print_r($this->db->last_query());
			
			//die();
			
			if(!empty($check_run_chart)){
				echo "qr_error";
				//die();
			} else{
			
				$row_sfg =  $this->Basic_model->get_data(array('sfg_issue_multistage',array('id','DESC'),array(1,0)),array('workorder_no'=>$workorder_no));
				
				if(!empty($row_sfg)){
					$po_trace = $row_sfg[0]->po_trace;
					
					$chec_po = $this->Basic_model->get_data(array('sfg_data,workorder_no'),array('trace_id'=>$po_trace));
					
					if(empty($chec_po)){
						$chec_po = $this->Basic_model->get_data(array('sfg_data_multistage,workorder_no'),array('trace_id'=>$po_trace));
						if(empty($chec_po)){
							$chec_po = $this->Basic_model->get_data(array('dc_in_data,po_number'),array('uniquecode'=>$po_trace));
							
							$cpo_wo = $chec_po[0]->po_number;
							$cpo_hc = $chec_po[0]->supplier;
							$cpo_ba = $chec_po[0]->invoice_no;
							$cpo_ma24 = explode(":",$chec_po[0]->qc_accept);
							$cpo_ma = $cpo_ma24[7];
						} else{
							$cpo_wo = $chec_po[0]->workorder_no;
							$cpo_hc = $chec_po[0]->heat_code;
							$cpo_ba = $chec_po[0]->batch;
							$cpo_ma = $chec_po[0]->material;
						}
					} else{
						$cpo_wo = $chec_po[0]->workorder_no;
						$cpo_hc = $chec_po[0]->heat_code;
						$cpo_ba = $chec_po[0]->batch;
						$cpo_ma = $chec_po[0]->material;
					}
					
					if(!empty($chec_po)){


						
						$chec_rack = $this->Basic_model->get_data('rack_master',array('material'=>$cpo_ma,'heat_no'=>$cpo_hc,'batch'=>$cpo_ba,'workorder_no'=>$cpo_wo));
						
						if(!empty($chec_rack)){
							$rc_qty = $chec_rack[0]->qty;
							
							if($rc_qty == '0.000' || $rc_qty == NULL){
								$po_trace = $trace;
							} else{
								$po_trace = $row_sfg[0]->po_trace;
								
							}
						}else{
							$po_trace = $trace;
						}
						//print_r($this->db->last_query());
			
				//die();
					}else{
						$po_trace = $trace;
					}
					
					
				} else{
					$po_trace = $trace;
				}
				//echo $po_trace.'<br/>'.$trace;
				if($po_trace != $trace){
					echo 'trace_error';
				} else{
					
					$row_heat_code =  $this->Basic_model->get_data(array('sfg_data,heat_code'),array('material'=>$cmpnt,'trace_id'=>$trace));
					if(empty($row_heat_code)){
						$row_heat_code =  $this->Basic_model->get_data(array('sfg_data_multistage,heat_code'),array('material'=>$cmpnt,'trace_id'=>$trace));
						if(empty($row_heat_code)){
							$row_heat_code = $this->db->query("select * from dc_in_data where qc_accept like '%".$cmpnt."%' and uniquecode = '".$trace."' group by supplier"); 
						}
					}
					
					
					$row_batch =  $this->Basic_model->get_data(array('sfg_data,batch'),array('material'=>$cmpnt,'trace_id'=>$trace));
					
					if(empty($row_batch)){
						$row_batch =  $this->Basic_model->get_data(array('sfg_data_multistage,batch'),array('material'=>$cmpnt,'trace_id'=>$trace));
						if(empty($row_batch)){
							$row_batch =  $this->db->query("select * from dc_in_data where qc_accept like '%".$cmpnt."%' and uniquecode = '".$trace."' group by invoice_no"); 
						}
					}
					
					if(!empty($row_heat_code)){
						$chc = count($row_heat_code);
					}else{
						$chc = 0;
					}
					
					if(!empty($row_batch)){
						$cb = count($row_batch);
					}else{
						$cb = 0;
					}
					
					if($chc != '1' || $cb != '1'){
						echo 'error_3';
					} else{
					
						$row =  $this->Basic_model->get_data(array('sfg_data,trace_id'),array('material'=>$cmpnt,'trace_id'=>$trace));
						$row_54 = 1;
						if(empty($row)){
							$row =  $this->Basic_model->get_data(array('sfg_data_multistage,trace_id'),array('material'=>$cmpnt,'trace_id'=>$trace));
							$row_54 = 2;
							if(empty($row)){
								$row =  $this->Basic_model->get_data(array('dc_in_data,uniquecode'),array('inw_material'=>$cmpnt,'uniquecode'=>$trace));
								$row_54 = 3;
							}
						}
						//print_r($this->db->last_query());
						//die();
						
						if(!empty($row)){
							
							foreach($row as $mc_row){
								if($row_54 != 3){
									$trace_id = $mc_row->trace_id;
									$batch_1 = $mc_row->batch;
									$heat_no = $mc_row->heat_code;
									$workorder_number = $mc_row->workorder_no;
								}else{
									$trace_id = $mc_row->uniquecode;
									$batch_1 = $mc_row->invoice_no;
									$heat_no = $mc_row->supplier;
									$workorder_number = $mc_row->po_number;
								}
								//$row2 =  $this->Basic_model->get_data(array('rack_master_updates,workorder_number',array('inserted_date','ASC'),array(1,0)),array('material'=>$cmpnt, 'heat_no'=>$heat_no, 'batch'=>$batch_1, 'department'=>'FIFO Store'));
								
								//if(!empty($row2)){
								//	$workorder_number = $row2[0]->workorder_number;
								//} else{
								//	$workorder_number = '';
								//}
								
								$row3 =  $this->Basic_model->get_data(array('rack_master',array('updated_date','DESC'),array(1,0)),array('material'=>$cmpnt));
								
								
								
								if(!empty($row3)){
									$qty_1 = $row3[0]->qty;
									if($qty_1 == '' || $qty_1 <= 0){
										echo 'error_4';
									} else{
										
										$row_new = $this->Basic_model->get_data(array('rack_master',array('updated_date','ASC'),array(1,0)),array('storage_loc'=>$to_location));
										
										
										if(!empty($row_new)){
											$to_loc_qty = $row_new[0]->qty;
											
											if($to_loc_qty != ''  || $to_loc_qty > 0){
												$st_material = $row_new[0]->material;
												$st_wo = $row_new[0]->workorder_no;
												
												if($st_material == '' || $st_material == 'NULL'){
													echo $qty_1;
												} else{
												
													if($cmpnt == $st_material){
														if($workorder_no == $st_wo){
															echo $qty_1;
														}else{
															echo "wo_error";
														}
													} else{
														echo "material_error";
													}
												}	
											} else{
												echo $qty_1;
											}
										}else{
											echo "rack_error";
										}
										
										
									}
								} else{
									echo 'error_2';
								}
							}
							
						}else{
							echo 'error_1';
						}
					}	
				}
			}	
		
		}
		
		//AP/092022/6D23C3F086::3BSBS800XXXXX0NFH1::10629: 3500.000:PC:040000945599:20221028:152411:2:DPR51:220148::AC@
		//AP/092022/6D23C3F086::3BSBS800XXXXX0NFH1::10629: 3500.000:PC:040000945599:20221028:152411:1:DPR51:220148::AC@
		
		//AP/122022/859AE81496::3CNM10NUTXXXX0NFH1::11013: 720.000:PC:040000960755:20221207:151859:1:DPO15:n.gubendran::AC
		//AP/122022/859AE81496::3CNM10NUTXXXX0NFH1::11013: 1165.000:PC:040000959994:20221205:151154:1:DPO15:220119::AC
		public function ajax_check_fromloc_stage2(){
			$post_data = $this->input->post();
			
			$trace_id = $post_data['material_qr_traceid'];
			$qty = $post_data['available_rack_qty'];
			$material = $post_data['sfg_component'];
			
			$row =  $this->Basic_model->get_data(array('sfg_data,workorder_no'),array('trace_id'=>$trace_id,'material'=>$material));
			
			if(empty($row)){
				$row =  $this->Basic_model->get_data(array('sfg_data_multistage,workorder_no'),array('trace_id'=>$trace_id,'material'=>$material));
				
				if(empty($row)){
					$row =  $this->db->query("select * from dc_in_data where qc_accept like '%".$material."%' and uniquecode = '".$trace_id."' group by po_number");
					$wo = $row[0]->po_number;
				}else{
					$wo = $row[0]->workorder_no;
				}
			}else{
				$wo = $row[0]->workorder_no;
			}
			
			if(!empty($row)){
				
				
				$row1 = $this->Basic_model->get_data('rack_master',array('workorder_no'=>$wo,'material'=>$material));
				
				if(!empty($row1)){
					echo $from_loc = $row1[0]->storage_loc;
				}
			}
		}
		
		
		public function ajax_sfg_movement_stage2(){
			$post_data = $this->input->post();
			
			$curr_date = $post_data['curr_date'];
	
			$sfg_wo = $post_data['sfg_wo'];
			$sfg_component = $post_data['sfg_component'];
			$sfg_toloc = $post_data['sfg_toloc'];
			$sfg_allowedqty = $post_data['sfg_allowedqty'];
			
			$material_qr = $post_data['material_qr'];
			$material_qr_traceid = $post_data['material_qr_traceid'];
			$transfering_qty = $post_data['transfering_qty'];
			$available_rack_qty = $post_data['available_rack_qty'];
			
			$doc_313 = $post_data['doc_313'];
			$doc_315 = $post_data['doc_315'];
			
			$row =  $this->Basic_model->get_data('issue_master',array('production_order'=>$sfg_wo));
			
			if(!empty($row)){
				
				
				$qty = $row[0]->quantity;
				$qty_produced = $row[0]->quantity_produced_far;
				$mat = $row[0]->material;
				$bat = $row[0]->batch;
				$st = $row[0]->scheduleunique;
				$wc = $row[0]->work_center;
				$location = $row[0]->location;
				
				$location_im = $location;

				if($location_im == 'M/C SHOP 1'){
						$r_location = 'Shop 1';
					} else if($location_im == 'M/C SHOP 2'){
						$r_location = 'Shop 2';
					}   else if($location_im == 'M/C SHOP 2A'){
						$r_location = 'Shop 2A';
					}  else if($location_im == 'M/C SHOP 2B'){
						$r_location = 'Shop 2B';
					}  else if($location_im == 'M/C SHOP 3'){
						$r_location = 'Shop 3';
					}  else if($location_im == 'M/C SHOP 4'){
						$r_location = 'Shop 4';
					}   else if($location_im == 'M/C SHOP 3A'){
						$r_location = 'Shop 3A';
					}   else if($location_im == 'M/C SHOP 3B'){
						$r_location = 'Shop 3B';
					}   else if($location_im == 'M/C SHOP 4A'){
						$r_location = 'Shop 4A';
					}   else if($location_im == 'M/C SHOP 4B'){
						$r_location = 'Shop 4B';
					}   else if($location_im == 'M/C SHOP 5'){
						$r_location = 'Shop 5';
					}   else if($location_im == 'M/C SHOP 6'){
						$r_location = 'Shop 6';
					}    else if($location_im == 'M/C SHOP 5A'){
						$r_location = 'Shop 5A';
					}   else if($location_im == 'M/C SHOP 5B'){
						$r_location = 'Shop 5B';
					}   else if($location_im == 'M/C SHOP 6A'){
						$r_location = 'Shop 6A';
					}   else if($location_im == 'M/C SHOP 6B'){
						$r_location = 'Shop 6B';
					}   
					
					$loc = $r_location;
				
				$row1 = $this->Basic_model->get_data(array('sfg_data,workorder_no'),array('trace_id'=>$material_qr_traceid,'material'=>$sfg_component));
				
				if(empty($row1)){
					$row1 = $this->Basic_model->get_data(array('sfg_data_multistage,workorder_no'),array('trace_id'=>$material_qr_traceid,'material'=>$sfg_component));
					if(empty($row1)){
						$row1 = $this->db->query("select * from dc_in_data where qc_accept like '%".$sfg_component."%' and uniquecode = '".$material_qr_traceid."' group by po_number");
						$po_wo = $row1[0]->po_number;
						$po_batch = $row1[0]->invoice_no;
						$po_heatno = $row1[0]->supplier;
					} else{
						$po_wo = $row1[0]->workorder_no;
						$po_batch = $row1[0]->batch;
						$po_heatno = $row1[0]->heat_code;
					}
				}else{
					$po_wo = $row1[0]->workorder_no;
					$po_batch = $row1[0]->batch;
					$po_heatno = $row1[0]->heat_code;
				}
				//35910.000
				//32610.000
				
				if(!empty($row1)){
					

					
					$row2 =  $this->Basic_model->get_data(array('rack_master',array('updated_date','ASC'),array(1,0)),array('material'=>$sfg_component, 'batch'=>$po_batch, 'workorder_no'=>$po_wo));
							
					if(!empty($row2)){
						
						$allowed_qty = $row2[0]->qty;
						$sql_fifo_rack_id = $row2[0]->id;
						$sql_fifo_storage_loc = $row2[0]->storage_loc;

						if($allowed_qty == $available_rack_qty){
							$rack_qty = $available_rack_qty;
						} else{
							$rack_qty = $allowed_qty;
						}

						$up_rack_qty = $rack_qty - $transfering_qty;


						// update in rack master
						if($up_rack_qty >= 0){
							$this->Basic_model->update_data('rack_master',array('id'=>$sql_fifo_rack_id),array('qty'=>$up_rack_qty)); 
						} 
						
						$row3 = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$sfg_toloc,'rack_no'=>$loc),array('department'=>'Machine Shop'));
						//$row3 = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$sfg_toloc),array('department'=>'FIFO Store','rack_no'=>$loc));
						//print_r($this->db->last_query());die();
						if(!empty($row3)){
							$rmid = $row3[0]->id;
							$rack_av_qty = $row3[0]->qty;
							$av_qty = $rack_av_qty + $transfering_qty;
						
//echo $av_qty;
							$suq = $this->Basic_model->update_data('rack_master',array('id'=>$rmid),array('storage_loc'=>$sfg_toloc,'rack_no'=>$loc,'department'=>'Machine Shop','qty'=>$av_qty,'rack_status'=>'IN','material'=>$sfg_component,'batch'=>$bat,'workorder_no'=>$sfg_wo,'ref_id'=>NULL,'ref_doc'=>'Movement from FIFO to SFG','updated_date'=>date('Y-m-d H:i:s'),'status'=>'1')); 
							
							
							$insert_data = array('workorder_no'=>$sfg_wo,'qty'=>$transfering_qty,'material'=>$sfg_component,'sfg_trace'=>$st,'po_trace'=>$material_qr_traceid,'to_rack'=>$sfg_toloc,'from_rack'=>$sql_fifo_storage_loc,'po_wo'=>$po_wo,'rack_id'=>$rmid,'ref_doc'=>'Material Moved from FIFO to SFG','material_qr'=>$material_qr,'sfg_batch'=>$bat,'313_doc'=>$doc_313,'315_doc'=>$doc_315,'po_batch'=>$po_batch,'po_heatno'=>$po_heatno,'inserted_datetime'=>date('Y-m-d H:i:s'));
							
							$insert_rack = $this->Basic_model->insert_data('sfg_issue_multistage',$insert_data);
							if($insert_rack){
								echo '1';
								
							} else{
								echo '3';
							}
						}
						else{
							echo '0';
						}
					}
				}
			}
		}
		
		// End of Inward Movement Data and It's Sub Functionalities
		
		
		// Vendor Out Data and It's Sub Functionalities
		
		public function vendor_out($id=''){	
		

			if($this->input->post()){
				$post_data = $this->input->post();
			
			
				for($i=1; $i <= count($post_data['po_number']); $i++){
					
					$po_number = $post_data['po_number'][$i];
					$line_item = $post_data['line_item'][$i];
					$vendor_id = $post_data['vendor_id'][$i];
					$pdt = $post_data['pdt'];
					$delivery_date = $post_data['delivery_date'];
					$vendor_name = $post_data['vendor_name'][$i];
					$component = $post_data['component'][$i];
					$bom1 = $post_data['bom1'][$i];
					$bom2 = $post_data['bom2'][$i];
					$bom3 = $post_data['bom3'][$i];
					$bom4 = $post_data['bom4'][$i];
					$trays = $post_data['trays'][$i];
					$weight = $post_data['weight'][$i];
					$phy_qty = $post_data['phy_qty'][$i];
					$user = $post_data['user'];
					$qc_accept = $post_data['qc_accept'][$i];
					
					
					
					$insert_data = array('po_number'=>$po_number,'line_no'=>$line_item,'vendor_id'=>$vendor_id,'vendor_name'=>$vendor_name,'component'=>$component,'bom1'=>$bom1,'bom2'=>$bom2,'bom3'=>$bom3,'bom4'=>$bom4,'no_of_trays'=>$trays,'weight'=>$weight,'phy_qty'=>$phy_qty,'doc_no'=>'698741523','user'=>$shift,'pdt'=>$pdt,'delivery_date'=>$delivery_date,'status'=>'1');
					
					
					//$insert_id = $this->Basic_model->insert_data('vendor_out',$insert_data);
					
					foreach($qc_accept as $row){
						$qc_tags = $row;
						
						$trace = explode(":",$qc_tags);
						
						$trace_id = $trace[0];
						
						
						$insert_data_1 = array('vo_id'=>$insert_id,'qc_tag'=>$qc_tags,'trace_id'=>$trace_id);
						
						//$insert_id_1 = $this->Basic_model->insert_data('vendor_out_qctag',$insert_data_1);
					}
					
					
				}
				
				$alert_message = 'Vendor Out data inserted Successfully';
				$this->session->set_flashdata('message',$alert_message);
			}
			
			if ($this->input->is_ajax_request()) {
				$this->load->model('Supplier_out');
				$list = $this->Supplier_out->get_datatables();
				$data = array();
				$no = $_POST['start'];
				foreach ($list as $pr) {
					
					
					
					$no++;
					$row = array();
					$row[] = $no;
					$row[] = date("d-m-Y",strtotime($pr->updated_date));
					$row[] = $pr->doc_no;
					$row[] = $pr->part_no;
					$row[] = $pr->po_number;
					$row[] = $pr->line_no;
					$row[] = $pr->vendor_id; 
					$row[] = $pr->phy_qty; 
					$row[] = $pr->user; 
					$row[] = $pr->status; 
					$data[] = $row;
				}
 
				$output = array(
                        "draw" => $_POST['draw'],
                        "recordsTotal" => $this->Supplier_out->count_all(),
                        "recordsFiltered" => $this->Supplier_out->count_filtered(),
                        "data" => $data,
                );
				//output to json format
				echo json_encode($output); exit;
			}
		
			$data = array();
			$data['listout'] 	= $this->Basic_model->get_data(array('vendor_master,po_number'),NULL,NULL,NULL,'po_number'); 
			
		
			$data['content'] 	= $this->load->view('production/vendor_out', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		
		public function vendor_out_lineitem($id=''){			
			$post_data = $this->input->post();
			
			$po_number = $post_data['po_number'];
			
			$fetch = $this->Basic_model->get_data(array('vendor_master,line_item'),array('po_number' => $po_number),NULL,NULL,'line_item'); 
			
			//print_r($this->db->last_query());
			//die();
			
			$htmldata = '';
			$htmldata .= '<option value="">-- Select Line Item --</option>';
			foreach($fetch as $row){
				
				$htmldata .= '<option value="'.$row->line_item.'">'.$row->line_item.'</option>';
				
			}
			echo $htmldata;
		}
		
		public function vendor_out_details($id=''){			
			$post_data = $this->input->post();
			
			$po_number = $post_data['po_number'];
			$line_item = $post_data['line_item'];
			
			$fetch = $this->Basic_model->get_data(array('vendor_master'),array('po_number' => $po_number, 'line_item' => $line_item)); 
			
			//print_r($this->db->last_query());
			//die();
			
			$htmldata = $fetch[0]->vendor_id.'~'.$fetch[0]->vendor_name.'~'.$fetch[0]->component.'~'.$fetch[0]->bom1.'~'.$fetch[0]->bom2.'~'.$fetch[0]->bom3.'~'.$fetch[0]->bom4;
			
			echo $htmldata;
		}
		
		public function vendor_out_add($id=''){			
			$post_data = $this->input->post();
			
			$add_length = $post_data['add_length'];
			$vendor_id = $post_data['vendor_id'];
			
			$listout = $this->Basic_model->get_data(array('vendor_master,po_number'),array('vendor_id' => $vendor_id)); 
			
			//print_r($this->db->last_query());
			//die();
			
			$htmldata = '';
			
			$htmldata .= '<div class="row"><div class="col-md-2 mt-3"><label>PO Number</label><select class="form-control select2" name="po_number['.$add_length.']" onChange="getline(this)"><option value="">--Select PO Number--</option>';
			
			foreach($listout as $row){ 
			
			$htmldata .= ' <option value="'.$row->po_number.'">'.$row->po_number.'</option>';
			
			}
			
			$htmldata .= '</select><input type="hidden" name="line" value="'.$add_length.'"></div><div class="col-md-2 mt-3"><label>Line Number</label><select name="line_item['.$add_length.']"  class="form_control select2 line_item" onChange="getdetails(this)"></select></div><div class="col-md-2 mt-3"><label>Vendor Id</label><input type="text" name="vendor_id['.$add_length.']" id="" class="form-control" value="" placeholder="Vendor Id" readonly/><input type="hidden" name="pdt" id="pdt" value="'.date('Ymd').'"><input type="hidden" name="delivery_date" id="delivery_date" value="'.date('Y-m-d').'"><input type="hidden" name="vid" id="" value=""><input type="hidden" name="trace_id_check['.$add_length.']" id="" value=""></div><div class="col-md-2 mt-3"><label>Vendor Name</label><input type="text" name="vendor_name['.$add_length.']" id="" class="form-control" value="" placeholder="Vendor Name" readonly/></div><div class="col-md-2 mt-3"><label>Component</label><input type="text" name="component['.$add_length.']" id="" class="form-control" value="" placeholder="Component" readonly/></div><div class="col-md-2 mt-3"><label>BOM 1</label><input type="text" name="bom1['.$add_length.']"  class="form-control" value="" placeholder="BOM 1" readonly/></div><div class="col-md-2 mt-3"><label>BOM 2</label><input type="text" name="bom2['.$add_length.']"  class="form-control" value="" placeholder="BOM 2" readonly/></div><div class="col-md-2 mt-3"><label>BOM 3</label><input type="text" name="bom3['.$add_length.']"  class="form-control" value="" placeholder="BOM 3" readonly/></div><div class="col-md-2 mt-3"><label>BOM 4</label><input type="text" name="bom4['.$add_length.']"  class="form-control" value="" placeholder="BOM 4" readonly/></div><div class="col-md-2 mt-3"><label>No of Trays</label><input type="text" name="trays['.$add_length.']" id="trays" class="form-control" value="" placeholder="No of Trays"/></div><div class="col-md-2 mt-3"><label>Weight</label><input type="text" name="weight['.$add_length.']" id="weight" class="form-control" value="" placeholder="Weight"/></div><div class="col-md-2 mt-3"><label>Physical Qty</label><input type="text" name="phy_qty['.$add_length.']" id="phy_qty" class="form-control" value="" placeholder="Quantity"/></div><div class="col-md-6 mt-3"></div><div class="col-md-12 mt-3" style="margin:0;"><div class="row"><label>QC Accept QR</label><div id="addqc_'.$add_length.'" class="row"><div class="col-md-4 mt-3 "><div class="row"><div class="col-md-9"><input type="text" name="qc_accept['.$add_length.'][]" id="qc_accept" class="form-control" placeholder="QC Accept QR"/><input type="hidden" value="1" name="qctags['.$add_length.']"><input type="hidden" value="1" name="qcdets['.$add_length.']"></div><!--<div class="col-md-3"><a class="btn btn-danger btn-sm" onClick="delete_tag(this)"><i class="fa fa-trash"></i></a></div>--></div></div></div><div class="col-md-4 mt-3"><a class="btn btn-primary" id="plus_'.$add_length.'" onclick="add_plus('.$add_length.')" ><span style="font-size:14px;">+</span> </a>&nbsp<a id="verify_'.$add_length.'" onclick="verify('.$add_length.')" class="btn btn-primary"><span style="font-size:14px;">VERIFY</span></a>&nbsp<a id="verified_'.$add_length.'" onclick="verify('.$add_length.')" style="display: none;" class="btn btn-primary"><span style="font-size:14px;">VERIFIED</span></a>&nbsp<a class="btn btn-primary" id="lineitem_'.$add_length.'" onclick="addmore()" style="display: none;" ><span style="font-size:14px;">Add Line Item</span></a></div></div></div></div><hr/>';
			
			echo $htmldata;
		}
		
		public function check_qc_tags($id=''){			
			$post_data = $this->input->post();
			
			$po_number = $post_data['po_number'];
			$line_item = $post_data['line_item'];
			$qc_material = $post_data['qc_material'];
			$qc_accept = $post_data['qc_accept'];
			$traceid_check = $post_data['traceid_check'];
			
			$values = explode(':',$qc_accept);
			
			if(count($values) == '15'){
				$trace = $values[0];
				$rack_no = $values[11];
				
				$check = $this->Basic_model->get_data(array('rack_master'),array('material' => $qc_material, 'rack_id' => $rack_no)); 
				
			} else if(count($values) == '17'){
				
				//$check_doc = $this->Basic_model->get_data(array('rack_master'),array('material' => $qc_material, 'rack_id' => $po_number)); 
				
				$check = $this->Basic_model->get_data(array('rack_master'),array('material' => $qc_material)); 
				
			} else if(count($values) == '13'){
				
				$check = $this->Basic_model->get_data(array('rack_master'),array('material' => $qc_material, 'department' => 'RM Store')); 
				
			} 
			//print_r($this->db->last_query());
			//die();
			if(!empty($check)){
				$fetch = $this->Basic_model->get_data(array('vendor_master'),array('po_number' => $po_number, 'line_item' => $line_item, 'bom1' => $qc_material)); 
				
				//print_r($this->db->last_query());
				//die();
				
				if(!empty($fetch)){
				
					echo "1";
				
				} else{
					echo "0";
				}
			} else{
			
				echo "2";
				
			}	
		}
		
		public function vendor_out_insert($id=''){			
			
			$post_data = $this->input->post();
			
			$htmldata = '';
			for($i=1; $i <= count($post_data['po_number']); $i++){
				
				$po_number = $post_data['po_number'][$i];
				$line_item = $post_data['line_item'][$i];
				$vendor_id = $post_data['vendor_id'][$i];
				$pdt = $post_data['pdt'];
				$delivery_date = $post_data['delivery_date'];
				$vendor_name = $post_data['vendor_name'][$i];
				$component = $post_data['component'][$i];
				$bom1 = $post_data['bom1'][$i];
				$bom2 = $post_data['bom2'][$i];
				$bom3 = $post_data['bom3'][$i];
				$bom4 = $post_data['bom4'][$i];
				$trays = $post_data['trays'][$i];
				$weight = $post_data['weight'][$i];
				$phy_qty = $post_data['phy_qty'][$i];
				$user = $post_data['user'];
				$qc_accept = $post_data['qc_accept'][$i];
				
				
				
				$insert_data = array('po_number'=>$po_number,'line_no'=>$line_item,'vendor_id'=>$vendor_id,'vendor_name'=>$vendor_name,'component'=>$component,'bom1'=>$bom1,'bom2'=>$bom2,'bom3'=>$bom3,'bom4'=>$bom4,'no_of_trays'=>$trays,'weight'=>$weight,'phy_qty'=>$phy_qty,'doc_no'=>NULL,'user'=>$user,'pdt'=>$pdt,'delivery_date'=>$delivery_date,'status'=>'1','sap_status'=>'SAP Error');
				
			
				$insert_id = $this->Basic_model->insert_data('vendor_out',$insert_data);
				
				$traceid = '';
				$stno = '';
				$batch = '';
				
				foreach($qc_accept as $row){
					$qc_tags = $row;
					
					$trace = explode(":",$qc_tags);
					
					$trace_count =  count($trace);
					
					$trace_id = $trace[0];
					
					$traceid = $trace[0];
					$batch = $trace[1];
					
					if($trace_count == '15'){
						
						$stno_rack = $trace[11];
						$fetch = $this->Basic_model->get_data(array('rack_master'),array('material' => $bom1, 'rack_id' => $stno_rack)); 
						
					} else if($trace_count == '17') {
						
						$fetch = $this->Basic_model->get_data(array('rack_master'),array('material' => $bom1)); 
					}  else if($trace_count == '13'){
				
						$fetch = $this->Basic_model->get_data(array('rack_master'),array('material' => $bom1, 'department' => 'RM Store')); 
						
					} 
					
					
					//print_r($this->db->last_query());
			//die();
					if(!empty($fetch)){
						$stno = $fetch[0]->storage_loc;
					} else{
						$stno = '';
					}
					$insert_data_1 = array('vo_id'=>$insert_id,'qc_tag'=>$qc_tags,'trace_id'=>$trace_id);
					
					$insert_id_1 = $this->Basic_model->insert_data('vendor_out_qctag',$insert_data_1);
				}
				
				
				$check = $this->Basic_model->get_data(array('vendor_out'),array('id' => $insert_id)); 
				
				if(!empty($check)){
				
				$htmldata .= '&pdt[]='.$pdt.'&htxt[]='.$traceid.'&mvt[]=541&ptno[]='.$bom1.'&stno[]='.$stno.'&btno[]='.$batch.'&qty[]='.$phy_qty.'&ven[]='.$vendor_id.'&pon[]='.$po_number.'&pln[]='.$line_item.'&itxt[]=&gmcd[]=04&weight[]='.$weight.'&no_of_trays[]='.$trays.'&ins_id[]='.$insert_id;
				 
				} else{
					$htmldata .= 'Error';
				}
				//pdt[]=20220822&htxt[]=AP/082022/31F69113A8&mvt[]=541&ptno[]=3BSBS4271XXXX0NFH8&stno[]=ST04&btno[]=&qty[]=14910&ven[]=SC/SP/0055&pon[]=7240000599&pln[]=1330&itxt[]=&gmcd[]=04&weight[]=180&no_of_trays[]=6
			}
			
			//$htmldata .= '&callback=';
			
			echo $htmldata;
			//print_r($post_data);
			
			
			
			
		}
		
		public function vendor_out_update($id=''){			
			
			$post_data = $this->input->post();
			
			//print_r($post_data);
			
			$doc_no = $post_data['doc_no'];
			$data1 = $post_data['data1'];
			
			$data = explode('&',$data1);
			
			$count = count($data);
			
			if($count == '16'){
				
				$insid = explode('=',$data[15]);
				$d_part = explode('=',$data[4]);
				$d_storage_loc = explode('=',$data[5]);
				$d_batch = explode('=',$data[6]);
				$d_qty = explode('=',$data[7]);
				$d_vendor_id = explode('=',$data[8]);
				
				$ins_id = $insid[1];
				
				$this->Basic_model->update_data('vendor_out',array('id'=>$ins_id),array('doc_no'=>$doc_no,'status'=>'2','sap_status'=>'Completed'));
				
				$check = $this->Basic_model->get_data(array('rack_master'),array('material' => $d_part[1], 'storage_loc' => $d_storage_loc[1])); 
				
				if(!empty($check)){
					$rackid = $check[0]->id;
					$rack_qty = $check[0]->qty;
					$rack_id = $check[0]->rack_id;
					$rack_no = $check[0]->rack_no;
					$department = $check[0]->department;
					$rack_status = $check[0]->rack_status;
					$rm_id = $check[0]->rm_id;
					$material = $check[0]->material;
					$heat_no = $check[0]->heat_no;
					$invoice_date = $check[0]->invoice_date;
					$rack_batch = $check[0]->batch;
					$workorder_no = $check[0]->workorder_no;
					
					
					$updated_qty = $rack_qty - $d_qty[1];
					
					$this->Basic_model->update_data('rack_master',array('id'=>$rackid),array('qty'=>$updated_qty));
					
					$insert_data_1 = array('workorder_number'=>$workorder_no,'storage_loc'=>$d_storage_loc[1],'rack_id'=>$rack_id,'rack_no'=>$rack_no,'department'=>$department,'rack_status'=>$rack_status,'qty'=>$rack_qty,'material'=>$material,'heat_no'=>$heat_no,'batch'=>$rack_batch,'ref_id'=>$rackid,'ref_doc'=>'Vendor Out Before Values','inserted_date'=>date('Y-m-d H:i:s'));
				
			
					$insert_id_1 = $this->Basic_model->insert_data('rack_master_updates',$insert_data_1);
					
					$insert_data_2 = array('workorder_number'=>$workorder_no,'storage_loc'=>$d_storage_loc[1],'rack_id'=>$rack_id,'rack_no'=>$rack_no,'department'=>$department,'rack_status'=>$rack_status,'qty'=>$updated_qty,'material'=>$material,'heat_no'=>$heat_no,'batch'=>$rack_batch,'ref_id'=>$ins_id,'ref_doc'=>'Vendor Out After Values','inserted_date'=>date('Y-m-d H:i:s'));
			
					$insert_id_2 = $this->Basic_model->insert_data('rack_master_updates',$insert_data_2);
				
					$check_vendor = $this->Basic_model->get_data(array('vendor_master'),array('vendor_id' => $d_vendor_id[1])); 
					
					$vendor_name = $check_vendor[0]->vendor_name;
					
					$insert_data_3 = array('storage_loc'=>$vendor_name,'rack_id'=>$ins_id,'rack_no'=>'OUT','department'=>'Sub-Contract Store','rack_status'=>'OUT','qty'=>$d_qty[1],'material'=>$d_part[1],'batch'=>$d_batch[1],'ref_id'=>$ins_id,'ref_doc'=>'Vendor Out - O/P Data','inserted_date'=>date('Y-m-d H:i:s'));
				
			
					$insert_id_3 = $this->Basic_model->insert_data('rack_master_updates',$insert_data_3);
					
					$insert_data_4 = array('storage_loc'=>$vendor_name,'rack_id'=>$ins_id,'rack_no'=>'OUT','department'=>'Sub-Contract Store','rack_status'=>'OUT','qty'=>$d_qty[1],'material'=>$d_part[1],'batch'=>$d_batch[1],'ref_id'=>$ins_id,'ref_doc'=>'Vendor Out - O/P Data','updated_date'=>date('Y-m-d H:i:s'),'status'=> '1');
				
			
					$insert_id_4 = $this->Basic_model->insert_data('rack_master',$insert_data_4);
					
					
					
				}
				
				
			} else if($count == '31'){
				
				for($i=0; $i <= 1; $i++){
					if($i == 0){
						
						$insid = explode('=',$data[15]);
						$d_part = explode('=',$data[4]);
						$d_storage_loc = explode('=',$data[5]);
						$d_batch = explode('=',$data[6]);
						$d_qty = explode('=',$data[7]);
						$d_vendor_id = explode('=',$data[8]);
						
						$ins_id = $insid[1];
					} else if($i == 1){
						
						$insid = explode('=',$data[30]);
						$d_part = explode('=',$data[19]);
						$d_storage_loc = explode('=',$data[20]);
						$d_batch = explode('=',$data[21]);
						$d_qty = explode('=',$data[22]);
						$d_vendor_id = explode('=',$data[23]);
						
						$ins_id = $insid[1];
					}
					
					$this->Basic_model->update_data('vendor_out',array('id'=>$ins_id),array('doc_no'=>$doc_no,'status'=>'2','sap_status'=>'Completed'));
					
					$check = $this->Basic_model->get_data(array('rack_master'),array('material' => $d_part[1], 'storage_loc' => $d_storage_loc[1])); 
				
					if(!empty($check)){
						$rackid = $check[0]->id;
						$rack_qty = $check[0]->qty;
						$rack_id = $check[0]->rack_id;
						$rack_no = $check[0]->rack_no;
						$department = $check[0]->department;
						$rack_status = $check[0]->rack_status;
						$rm_id = $check[0]->rm_id;
						$material = $check[0]->material;
						$heat_no = $check[0]->heat_no;
						$invoice_date = $check[0]->invoice_date;
						$rack_batch = $check[0]->batch;
						$workorder_no = $check[0]->workorder_no;
						
						
						$updated_qty = $rack_qty - $d_qty[1];
						
						$this->Basic_model->update_data('rack_master',array('id'=>$rackid),array('qty'=>$updated_qty));
						
						$insert_data_1 = array('workorder_number'=>$workorder_no,'storage_loc'=>$d_storage_loc[1],'rack_id'=>$rack_id,'rack_no'=>$rack_no,'department'=>$department,'rack_status'=>$rack_status,'qty'=>$rack_qty,'material'=>$material,'heat_no'=>$heat_no,'batch'=>$rack_batch,'ref_id'=>$rackid,'ref_doc'=>'Vendor Out Before Values','inserted_date'=>date('Y-m-d H:i:s'));
					
				
						$insert_id_1 = $this->Basic_model->insert_data('rack_master_updates',$insert_data_1);
						
						$insert_data_2 = array('workorder_number'=>$workorder_no,'storage_loc'=>$d_storage_loc[1],'rack_id'=>$rack_id,'rack_no'=>$rack_no,'department'=>$department,'rack_status'=>$rack_status,'qty'=>$updated_qty,'material'=>$material,'heat_no'=>$heat_no,'batch'=>$rack_batch,'ref_id'=>$ins_id,'ref_doc'=>'Vendor Out After Values','inserted_date'=>date('Y-m-d H:i:s'));
				
						$insert_id_2 = $this->Basic_model->insert_data('rack_master_updates',$insert_data_2);
					
						$check_vendor = $this->Basic_model->get_data(array('vendor_master'),array('vendor_id' => $d_vendor_id[1])); 
						
						$vendor_name = $check_vendor[0]->vendor_name;
						
						$insert_data_3 = array('storage_loc'=>$vendor_name,'rack_id'=>$ins_id,'rack_no'=>'OUT','department'=>'Sub-Contract Store','rack_status'=>'OUT','qty'=>$d_qty[1],'material'=>$d_part[1],'batch'=>$d_batch[1],'ref_id'=>$ins_id,'ref_doc'=>'Vendor Out - O/P Data','inserted_date'=>date('Y-m-d H:i:s'));
					
				
						$insert_id_3 = $this->Basic_model->insert_data('rack_master_updates',$insert_data_3);
						
						$insert_data_4 = array('storage_loc'=>$vendor_name,'rack_id'=>$ins_id,'rack_no'=>'OUT','department'=>'Sub-Contract Store','rack_status'=>'OUT','qty'=>$d_qty[1],'material'=>$d_part[1],'batch'=>$d_batch[1],'ref_id'=>$ins_id,'ref_doc'=>'Vendor Out - O/P Data','updated_date'=>date('Y-m-d H:i:s'),'status'=> '1');
					
				
						$insert_id_4 = $this->Basic_model->insert_data('rack_master',$insert_data_4);
						
						
						
					}
				}
				
			} else if($count == '46'){
				
				for($i=0; $i <= 2; $i++){
					if($i == 0){
						
						$insid = explode('=',$data[15]);
						$d_part = explode('=',$data[4]);
						$d_storage_loc = explode('=',$data[5]);
						$d_batch = explode('=',$data[6]);
						$d_qty = explode('=',$data[7]);
						$d_vendor_id = explode('=',$data[8]);
						
						$ins_id = $insid[1];
					} else if($i == 1){
						
						$insid = explode('=',$data[30]);
						$d_part = explode('=',$data[19]);
						$d_storage_loc = explode('=',$data[20]);
						$d_batch = explode('=',$data[21]);
						$d_qty = explode('=',$data[22]);
						$d_vendor_id = explode('=',$data[23]);
						
						$ins_id = $insid[1];
					} else if($i == 2){
						
						$insid = explode('=',$data[45]);
						$d_part = explode('=',$data[34]);
						$d_storage_loc = explode('=',$data[35]);
						$d_batch = explode('=',$data[36]);
						$d_qty = explode('=',$data[37]);
						$d_vendor_id = explode('=',$data[38]);
						
						$ins_id = $insid[1];
					}
					
					$this->Basic_model->update_data('vendor_out',array('id'=>$ins_id),array('doc_no'=>$doc_no,'status'=>'2','sap_status'=>'Completed'));
					
					$check = $this->Basic_model->get_data(array('rack_master'),array('material' => $d_part[1], 'storage_loc' => $d_storage_loc[1])); 
				
					if(!empty($check)){
						$rackid = $check[0]->id;
						$rack_qty = $check[0]->qty;
						$rack_id = $check[0]->rack_id;
						$rack_no = $check[0]->rack_no;
						$department = $check[0]->department;
						$rack_status = $check[0]->rack_status;
						$rm_id = $check[0]->rm_id;
						$material = $check[0]->material;
						$heat_no = $check[0]->heat_no;
						$invoice_date = $check[0]->invoice_date;
						$rack_batch = $check[0]->batch;
						$workorder_no = $check[0]->workorder_no;
						
						
						$updated_qty = $rack_qty - $d_qty[1];
						
						$this->Basic_model->update_data('rack_master',array('id'=>$rackid),array('qty'=>$updated_qty));
						
						$insert_data_1 = array('workorder_number'=>$workorder_no,'storage_loc'=>$d_storage_loc[1],'rack_id'=>$rack_id,'rack_no'=>$rack_no,'department'=>$department,'rack_status'=>$rack_status,'qty'=>$rack_qty,'material'=>$material,'heat_no'=>$heat_no,'batch'=>$rack_batch,'ref_id'=>$rackid,'ref_doc'=>'Vendor Out Before Values','inserted_date'=>date('Y-m-d H:i:s'));
					
				
						$insert_id_1 = $this->Basic_model->insert_data('rack_master_updates',$insert_data_1);
						
						$insert_data_2 = array('workorder_number'=>$workorder_no,'storage_loc'=>$d_storage_loc[1],'rack_id'=>$rack_id,'rack_no'=>$rack_no,'department'=>$department,'rack_status'=>$rack_status,'qty'=>$updated_qty,'material'=>$material,'heat_no'=>$heat_no,'batch'=>$rack_batch,'ref_id'=>$ins_id,'ref_doc'=>'Vendor Out After Values','inserted_date'=>date('Y-m-d H:i:s'));
				
						$insert_id_2 = $this->Basic_model->insert_data('rack_master_updates',$insert_data_2);
					
						$check_vendor = $this->Basic_model->get_data(array('vendor_master'),array('vendor_id' => $d_vendor_id[1])); 
						
						$vendor_name = $check_vendor[0]->vendor_name;
						
						$insert_data_3 = array('storage_loc'=>$vendor_name,'rack_id'=>$ins_id,'rack_no'=>'OUT','department'=>'Sub-Contract Store','rack_status'=>'OUT','qty'=>$d_qty[1],'material'=>$d_part[1],'batch'=>$d_batch[1],'ref_id'=>$ins_id,'ref_doc'=>'Vendor Out - O/P Data','inserted_date'=>date('Y-m-d H:i:s'));
					
				
						$insert_id_3 = $this->Basic_model->insert_data('rack_master_updates',$insert_data_3);
						
						$insert_data_4 = array('storage_loc'=>$vendor_name,'rack_id'=>$ins_id,'rack_no'=>'OUT','department'=>'Sub-Contract Store','rack_status'=>'OUT','qty'=>$d_qty[1],'material'=>$d_part[1],'batch'=>$d_batch[1],'ref_id'=>$ins_id,'ref_doc'=>'Vendor Out - O/P Data','updated_date'=>date('Y-m-d H:i:s'),'status'=> '1');
					
				
						$insert_id_4 = $this->Basic_model->insert_data('rack_master',$insert_data_4);
						
						
						
					}
				}
				
			} else if($count == '61'){
				
				for($i=0; $i <= 3; $i++){
					if($i == 0){
						
						$insid = explode('=',$data[15]);
						$d_part = explode('=',$data[4]);
						$d_storage_loc = explode('=',$data[5]);
						$d_batch = explode('=',$data[6]);
						$d_qty = explode('=',$data[7]);
						$d_vendor_id = explode('=',$data[8]);
						
						$ins_id = $insid[1];
					} else if($i == 1){
						
						$insid = explode('=',$data[30]);
						$d_part = explode('=',$data[19]);
						$d_storage_loc = explode('=',$data[20]);
						$d_batch = explode('=',$data[21]);
						$d_qty = explode('=',$data[22]);
						$d_vendor_id = explode('=',$data[23]);
						
						$ins_id = $insid[1];
					} else if($i == 2){
						
						$insid = explode('=',$data[45]);
						$d_part = explode('=',$data[34]);
						$d_storage_loc = explode('=',$data[35]);
						$d_batch = explode('=',$data[36]);
						$d_qty = explode('=',$data[37]);
						$d_vendor_id = explode('=',$data[38]);
						
						$ins_id = $insid[1];
					} else if($i == 3){
						
						$insid = explode('=',$data[60]);
						$d_part = explode('=',$data[49]);
						$d_storage_loc = explode('=',$data[50]);
						$d_batch = explode('=',$data[51]);
						$d_qty = explode('=',$data[52]);
						$d_vendor_id = explode('=',$data[53]);
						
						$ins_id = $insid[1];
					}
					
					$this->Basic_model->update_data('vendor_out',array('id'=>$ins_id),array('doc_no'=>$doc_no,'status'=>'2','sap_status'=>'Completed'));
					
					$check = $this->Basic_model->get_data(array('rack_master'),array('material' => $d_part[1], 'storage_loc' => $d_storage_loc[1])); 
				
					if(!empty($check)){
						$rackid = $check[0]->id;
						$rack_qty = $check[0]->qty;
						$rack_id = $check[0]->rack_id;
						$rack_no = $check[0]->rack_no;
						$department = $check[0]->department;
						$rack_status = $check[0]->rack_status;
						$rm_id = $check[0]->rm_id;
						$material = $check[0]->material;
						$heat_no = $check[0]->heat_no;
						$invoice_date = $check[0]->invoice_date;
						$rack_batch = $check[0]->batch;
						$workorder_no = $check[0]->workorder_no;
						
						
						$updated_qty = $rack_qty - $d_qty[1];
						
						$this->Basic_model->update_data('rack_master',array('id'=>$rackid),array('qty'=>$updated_qty));
						
						$insert_data_1 = array('workorder_number'=>$workorder_no,'storage_loc'=>$d_storage_loc[1],'rack_id'=>$rack_id,'rack_no'=>$rack_no,'department'=>$department,'rack_status'=>$rack_status,'qty'=>$rack_qty,'material'=>$material,'heat_no'=>$heat_no,'batch'=>$rack_batch,'ref_id'=>$rackid,'ref_doc'=>'Vendor Out Before Values','inserted_date'=>date('Y-m-d H:i:s'));
					
				
						$insert_id_1 = $this->Basic_model->insert_data('rack_master_updates',$insert_data_1);
						
						$insert_data_2 = array('workorder_number'=>$workorder_no,'storage_loc'=>$d_storage_loc[1],'rack_id'=>$rack_id,'rack_no'=>$rack_no,'department'=>$department,'rack_status'=>$rack_status,'qty'=>$updated_qty,'material'=>$material,'heat_no'=>$heat_no,'batch'=>$rack_batch,'ref_id'=>$ins_id,'ref_doc'=>'Vendor Out After Values','inserted_date'=>date('Y-m-d H:i:s'));
				
						$insert_id_2 = $this->Basic_model->insert_data('rack_master_updates',$insert_data_2);
					
						$check_vendor = $this->Basic_model->get_data(array('vendor_master'),array('vendor_id' => $d_vendor_id[1])); 
						
						$vendor_name = $check_vendor[0]->vendor_name;
						
						$insert_data_3 = array('storage_loc'=>$vendor_name,'rack_id'=>$ins_id,'rack_no'=>'OUT','department'=>'Sub-Contract Store','rack_status'=>'OUT','qty'=>$d_qty[1],'material'=>$d_part[1],'batch'=>$d_batch[1],'ref_id'=>$ins_id,'ref_doc'=>'Vendor Out - O/P Data','inserted_date'=>date('Y-m-d H:i:s'));
					
				
						$insert_id_3 = $this->Basic_model->insert_data('rack_master_updates',$insert_data_3);
						
						$insert_data_4 = array('storage_loc'=>$vendor_name,'rack_id'=>$ins_id,'rack_no'=>'OUT','department'=>'Sub-Contract Store','rack_status'=>'OUT','qty'=>$d_qty[1],'material'=>$d_part[1],'batch'=>$d_batch[1],'ref_id'=>$ins_id,'ref_doc'=>'Vendor Out - O/P Data','updated_date'=>date('Y-m-d H:i:s'),'status'=> '1');
					
				
						$insert_id_4 = $this->Basic_model->insert_data('rack_master',$insert_data_4);
						
						
						
					}
				}
				
			} 
			//print_r($this->db->last_query());
			//die();
			echo "1";
			
			//print_r($data);
		}
		
		// End of Vendor Out Data and It's Sub Functionalities
		
		// Invoice Data and It's Sub Functionalities
		
		public function invoice($id=''){			
			$data = array();
			$data['check'] = $this->Basic_model->get_data(array('fg_inward,part_no'));
			$data['content'] 	= $this->load->view('production/invoice', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		
		public function inv_get_trace($id=''){			
			$post_data = $this->input->post();
			
			//print_r($post_data);
			
			$part_no = $post_data['part_no'];
			
			$get_trace = $this->Basic_model->get_data(array('fg_inward,trace_id'),array('part_no'=>$part_no));
			
			$htmldata = '';
			
			$htmldata.='<select class="form-control select2 trace_id" name="trace_id[]" onchange="trace_id(this)"><option value="">--- Select Trace ID ---</option>';
			
			foreach($get_trace as $row){
				if($row->trace_id != ''){
					$htmldata .= '<option value="'.$row->trace_id.'">'.$row->trace_id.'</option>';
				}
			}
			$htmldata.='</select>';
			echo $htmldata;
		}
		
		public function inv_get_qty($id=''){			
			$post_data = $this->input->post();
			$part_no = $post_data['part_no'];
			$trace_id = $post_data['trace_id'];
			
			//$get_wo = $this->Basic_model->get_data('fg_inward',array('part_no'=>$part_no,'trace_id'=>$trace_id))[0]->workorder_no;
			/*Modificed by Murali 23/Nov/2023*/
			$this->db->select('workorder_no');
			$this->db->where('trace_id',$trace_id);
			$this->db->where('part_no',$part_no);
			$this->db->group_by("workorder_no");
			$get_wo = $this->db->get('fg_inward');
			$prd_no=[];
			foreach($get_wo->result() as $wonumber){
			   $prd_no[] = $wonumber->workorder_no;
			}
			;
			//$get_trace = $this->Basic_model->get_data('rack_master',array('material'=>$part_no,'workorder_no'=>$get_wo,'department'=>'FG Store'))[0]->qty;
			
			/*Modificed by Murali 23/Nov/2023*/
			$this->db->select_sum('qty');
			//$this->db->where('material',$part_no);
			$this->db->where('department','FG Store');
			$this->db->where_in('workorder_no', $prd_no);
			$get_trace = $this->db->get('rack_master')->result();
			echo $get_trace[0]->qty;
		}
		
		
		public function invoice_insert($id=''){			
			
			$post_data = $this->input->post();
			
			$htmldata = '';
			
			$invoice_no = $post_data['invoice_no'];
			$inv_date = $post_data['inv_date'];
			$user = $post_data['user'];
			
			$insert_data = array('invoice_no'=>$invoice_no,'inv_date'=>$inv_date,'user'=>$user,'insert_datetime'=>date("Y-m-d H:i:s"));
				
			
			$insert_id = $this->Basic_model->insert_data('invoice',$insert_data);
			
			for($i=0; $i < count($post_data['part_no']); $i++){
				
				$part_no = $post_data['part_no'][$i];
				$trace_id = $post_data['trace_id'][$i];
				$qty = $post_data['qty'][$i];
				$invoicing_qty = $post_data['invoicing_qty'][$i];
				
				
				$insert_data = array('iid'=>$insert_id,'part_no'=>$part_no,'trace_id'=>$trace_id,'qty'=>$qty,'invoicing_qty'=>$invoicing_qty);
				
			
				$insert_id_1 = $this->Basic_model->insert_data('invoice_details',$insert_data);
				
				$check1 = $this->Basic_model->get_data('fg_inward',array('trace_id'=>$trace_id,'part_no'=>$part_no));
				
				$wo_no = $check1[0]->workorder_no;
				
				$check = $this->Basic_model->get_data('rack_master',array('department'=>'FG Store','material'=>$part_no,'workorder_no'=>$wo_no));
				
				$rack_id = $check[0]->id;
				
				$rack_qty = $check[0]->qty;
				
				if($invoicing_qty <= $rack_qty){
					$upd_qty =  $rack_qty - $invoicing_qty;
				} else{
					$upd_qty = $rack_qty;
				}
					
				$this->Basic_model->update_data('rack_master',array('id'=>$rack_id),array('qty'=>$upd_qty));
			}
		}
		
		
		// End of Invoice Data and It's Sub Functionalities
		
		// Materail Withdraw Movement Data and It's Sub Functionalities
		
		public function material_withdraw($id=''){
			
			$data = array();
			
			$data['content'] 	= $this->load->view('production/material_withdraw', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		
		public function get_rackdet($id=''){			
			
			$rack_id = $this->input->post('ac_tag');
			$rack = explode("/",$rack_id);
			
			$sql = $this->Basic_model->get_data("rack_master",array("storage_loc"=>$rack[0],"rack_no"=>$rack[1],"rack_id"=>$rack[2]));
			
			if(!empty($sql)){
				foreach($sql as $row){
					$qty = $row->qty;
					$rm_id = $row->rm_id; 
					$material = $row->material; 
					
					$heat_code = $row->heat_no;
					$batch = $row->batch; 
					$workorder_no = $row->workorder_no; 
					
					$trace_id_check = $this->Basic_model->get_data("issue_master",array("production_order"=>$workorder_no));
					
					$trace_id = $trace_id_check[0]->scheduleunique;
					
					if(!empty($rm_id)){
						$sql1 = $this->Basic_model->get_data("rm_accepted",array("id"=>$rm_id));
						
						foreach($sql1 as $row2){
							$material2 = $row2->material;
							$heat_code2 = $row2->heat_no;
							$batch2 = $row2->batch; 
						}  

						 echo $material.':'.$qty.':'.$batch2.':'.$heat_code2.':'.$trace_id;
					}
					else if(!empty($qty)){
							
							echo $material.':'.$qty.':'.$batch.':'.$heat_code.':'.$trace_id;
						 
					}
					else{
						  echo 'Empty Rack';
					}
				}
			}else
			{
			   echo 'No Rack Found in Rack Master';
			}

			
		}
		
		public function get_rackdet1($id=''){			
			
			$rack_id = $this->input->post('ac_tag');
			$rack_id = $this->input->post('ac_tag');
			$rack_id = $this->input->post('ac_tag');
			$rack_id = $this->input->post('ac_tag');
			$rack = explode("/",$rack_id);
			
			$sql = $this->Basic_model->get_data("rack_master",array("storage_loc"=>$rack[0],"rack_no"=>$rack[1],"rack_id"=>$rack[2]));
			
			if(!empty($sql)){
				foreach($sql as $row){
					$qty = $row->qty;
					$rm_id = $row->rm_id; 
					$material = $row->material; 
					
					$heat_code = $row->heat_no;
					$batch = $row->batch; 
					$workorder_no = $row->workorder_no; 
					
					$trace_id_check = $this->Basic_model->get_data("issue_master",array("production_order"=>$workorder_no));
					
					$trace_id = $trace_id_check[0]->scheduleunique;
					
					if(!empty($rm_id)){
						$sql1 = $this->Basic_model->get_data("rm_accepted",array("id"=>$rm_id));
						
						foreach($sql1 as $row2){
							$material2 = $row2->material;
							$heat_code2 = $row2->heat_no;
							$batch2 = $row2->batch; 
						}  

						 echo $material.':'.$qty.':'.$batch2.':'.$heat_code2.':'.$trace_id;
					}
					else if(!empty($qty)){
							
							echo $material.':'.$qty.':'.$batch.':'.$heat_code.':'.$trace_id;
						 
					}
					else{
						  echo 'Empty Rack';
					}
				}
			}else
			{
			   echo 'No Rack Found in Rack Master';
			}

			
		}

		// End of Materail Withdraw Movement Data and It's Sub Functionalities
		
		
		// Production Rebin 315 Movement Data and It's Sub Functionalities
		
		public function production_rebin_315($id=''){	
			
			if ($this->input->is_ajax_request()) {
				$this->load->model('Production_rebin_315');
				$list = $this->Production_rebin_315->get_datatables();
				//print_r($this->db->last_query());die();
				$data = array();
				$no = $_POST['start'];
				foreach ($list as $pr) {
					
					if($pr->status == 0 || $pr->status == 2){
						$style = '';
						
					} else{
						$style = 'td_clr';
						
					}
					
					
					$no++;
					$row = array();
					$row[] = $no;
					$row[] = date("d-m-Y",strtotime($pr->added_datetime));
					$row[] = $pr->trace_id;
					$row[] = $pr->wo_no;
					$row[] = $pr->part_no;
					$row[] = $pr->component;
					$row[] = $pr->heat_no;
					$row[] = $pr->batch; 
					$row[] = $pr->qty; 
					$row[] = $pr->doc_no_314; 
					$row[] = $pr->added_by; 
					$row[] = '<span class="'.$style.'">'.$pr->sap_status.'</span>'; ; 
					$data[] = $row;
				}
 
				$output = array(
                        "draw" => $_POST['draw'],
                        "recordsTotal" => $this->Production_rebin_315->count_all(),
                        "recordsFiltered" => $this->Production_rebin_315->count_filtered(),
                        "data" => $data,
                );
				//output to json format
				echo json_encode($output); exit;
			}
			
			$data = array();
			
			$data['content'] 	= $this->load->view('production/production_rebin_315', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		
		public function get_rack_det($id=''){			
			$trace_id = $this->input->post('trace_id');
			$doc_number = $this->input->post('doc_number');
			$wo_no = $this->input->post('wo_no');
			$qty = $this->input->post('qty');
			$part_no = $this->input->post('part_no');
			$component = $this->input->post('component');
			
			$quantity = explode('.',$qty);
			
			$actual_qty = trim($quantity[0],' ');
			
			$row = $this->Basic_model->get_data('issue_barcode_313',array('workorder_no'=>$wo_no,'uniquecode1'=>$trace_id,'transfer_qty'=>$qty,'production_no_313'=>$doc_number));
			
			$row4 = $this->Basic_model->get_data('production_rebin_315',array('wo_no'=>$wo_no,'trace_id'=>$trace_id,'doc_number'=>$doc_number,'status'=>'2'));
			//print_r($this->db->last_query()); die();
			if(!empty($row4)){
				$alr_qty = 0;
				foreach($row4 as $rw){
					$alr_qty = $rw->qty + $alr_qty;
				}
			}else{
				$alr_qty = 0;
			}
			
			$av_qty = $qty - $alr_qty;
			if(!empty($row)){
				$status_315 = $row[0]->sap_status_315;
				$id = $row[0]->id;
				
				if($status_315 != 2){
					echo "error_1";
				} else{
					$row1 = $this->Basic_model->get_data('issue_313',array('ib_id'=>$id));
				
					if(!empty($row1)){
						
						$storage_location = $row1[0]->to_rack;
						$heat_no = $row1[0]->heat_no;
						$batch = $row1[0]->batch;
						
						$row2 = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$storage_location,'material'=>$component,'heat_no'=>$heat_no));
						
						if(!empty($row2)){
							$location_qty = $row2[0]->qty;
							
							echo $location_qty.'$'.$storage_location.'$'.$heat_no.'$'.$batch.'$'.$av_qty;
						} else{
							echo "error_3";
						}
					} else{
						echo "error_2";
					}
				}
				
				
			}
		}
		
		public function check_rack_det($id=''){		
		
			$rack_details = $this->input->post('rack_details');
			$heat_no = $this->input->post('heat_no');
			$batch = $this->input->post('batch');
			$component = $this->input->post('component');
			
			$rack_det = explode('/',$rack_details);
			
			$storage_loc = $rack_det[0];
			$rack_id = $rack_det[2];
			$rack_no = $rack_det[1];
			
			
			
			
			$row2 = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$storage_loc,'rack_id'=>$rack_id,'rack_no'=>$rack_no));
			
			if(!empty($row2)){
				$rack_material = $row2[0]->material;
				$rack_heatno = $row2[0]->heat_no;
				$rack_batch = $row2[0]->batch;
				
				if($rack_material != ''){
					if($rack_material == $component){
						if($rack_heatno == $heat_no){
							if($rack_batch == $batch){
								echo "A";
							}else{
								echo "3";
							}	
						} else{
							echo "2";
						}
					} else{
						echo "1";
					}
				} else{
					echo "B";
				}
			} else{
				echo "4";
			}
			
		}
		
		public function pr_rebin_insert($id=''){			
			$rack_details = $this->input->post('rack_details');
			$heat_no = $this->input->post('heat_no');
			$batch = $this->input->post('batch');
			$component = $this->input->post('component');
			$qc_tag = $this->input->post('qc_tag');
			$trace_id = $this->input->post('trace_id');
			$wo_no = $this->input->post('wo_no');
			$part_no = $this->input->post('part_no');
			$doc_number = $this->input->post('doc_number');
			$input_loc = $this->input->post('input_loc');
			$tag_qty = $this->input->post('tag_qty');
			$loc_qty = $this->input->post('loc_qty');
			$qty = $this->input->post('qty');
			$user = $this->input->post('user');
			$added_ip = getenv("REMOTE_ADDR");
			
			
			$rack_det = explode('/',$rack_details);
			
			$storage_loc = $rack_det[0];
			$rack_id = $rack_det[2];
			$rack_no = $rack_det[1];
			
			$insert_data = array('tag'=>$qc_tag,'trace_id'=>$trace_id,'wo_no'=>$wo_no,'part_no'=>$part_no,'component'=>$component,'heat_no'=>$heat_no,'batch'=>$batch,'doc_number'=>$doc_number,'tag_qty'=>$tag_qty,'input_loc'=>$input_loc,'loc_qty'=>$loc_qty,'qty'=>$qty,'rack_details'=>$rack_details,'doc_no_314'=>'','status'=>'1','sap_status'=>'SAP Error','added_by'=>$user,'added_ip'=>$added_ip,'added_datetime'=>date("Y-m-d H:i:s"));
			
			$insert_id = $this->Basic_model->insert_data('production_rebin_315',$insert_data);
			
			echo $insert_id;
		
		}
		
		public function pr_rebin_stock($id=''){			
			$rack_details = $this->input->post('rack_details');
			$heat_no = $this->input->post('heat_no');
			$batch = $this->input->post('batch');
			$component = $this->input->post('component');
			$qc_tag = $this->input->post('qc_tag');
			$trace_id = $this->input->post('trace_id');
			$wo_no = $this->input->post('wo_no');
			$part_no = $this->input->post('part_no');
			$doc_number = $this->input->post('doc_number');
			$input_loc = $this->input->post('input_loc');
			$tag_qty = $this->input->post('tag_qty');
			$loc_qty = $this->input->post('loc_qty');
			$qty = $this->input->post('qty');
			$user = $this->input->post('user');
			$insert_id = $this->input->post('insert_id');
			$doc_314 = $this->input->post('doc_314');
			$added_ip = getenv("REMOTE_ADDR");
			
			$rack_det = explode('/',$rack_details);
			
			$storage_loc = $rack_det[0];
			$rack_id = $rack_det[2];
			$rack_no = $rack_det[1];
			
			$this->Basic_model->update_data('production_rebin_315',array('id'=>$insert_id),array('status'=>'2','sap_status'=>'Completed','doc_no_314'=>$doc_314));
			
			$row = $this->Basic_model->get_data('issue_barcode_313',array('workorder_no'=>$wo_no,'uniquecode1'=>$trace_id,'production_no_313'=>$doc_number));
			//print_r($this->db->last_query());die();
			
			
			if(!empty($row)){
				$status_315 = $row[0]->sap_status_315;
				$id = $row[0]->id;
				
				$row1 = $this->Basic_model->get_data('issue_313',array('ib_id'=>$id));
				
				if(!empty($row1)){
					
					$storage_location = $row1[0]->to_rack;
					$eheat_no = $row1[0]->heat_no;
					$ebatch = $row1[0]->batch;
					$rm_id = $row1[0]->rm_id;
					
					$row3 = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$storage_location,'material'=>$component,'heat_no'=>$eheat_no,'batch'=>$ebatch,'rack_id'=>'IN'));
					
					$rm_data = $this->Basic_model->get_data('rm_accepted',array('id'=>$rm_id));
					
					$rm_qty = $rm_data[0]->quantity;
					
					$rm_upd_qty = $rm_qty + $qty;
					
					$this->Basic_model->update_data('rm_accepted',array('id'=>$rm_id),array('quantity'=>$rm_upd_qty));
					
					
					
					if(!empty($row3)){
						$location_qty = $row3[0]->qty;
						$rack_rdid = $row3[0]->id;
						$rack_rack_id = $row3[0]->rack_id;
						$rack_rack_no = $row3[0]->rack_no;
						$rack_department = $row3[0]->department;
						$rack_rack_status = $row3[0]->rack_status;
						$rack_heat_no = $row3[0]->heat_no;
						$rack_batch = $row3[0]->batch;
						$upd_qty = $location_qty - $qty;
						
						$this->Basic_model->update_data('rack_master',array('id'=>$rack_rdid),array('qty'=>$upd_qty));
						
						$insert_data = array('storage_loc'=>$storage_location,'rack_id'=>$rack_rack_id,'rack_no'=>$rack_rack_no,'department'=>$rack_department,'rack_status'=>$rack_rack_status,'qty'=>$location_qty,'material'=>$component,'heat_no'=>$rack_heat_no,'batch'=>$rack_batch,'workorder_number'=>$wo_no,'ref_id'=>$rack_rdid,'ref_doc'=>'Production Rebin 315 Process before data','inserted_date'=>date('Y-m-d H:i:s'));
						
						$insert_id = $this->Basic_model->insert_data('rack_master_updates',$insert_data);
						
						$insert_data_1 =  array('storage_loc'=>$storage_location,'rack_id'=>$rack_rack_id,'rack_no'=>$rack_rack_no,'department'=>$rack_department,'rack_status'=>$rack_rack_status,'qty'=>$upd_qty,'material'=>$component,'heat_no'=>$rack_heat_no,'batch'=>$rack_batch,'workorder_number'=>$wo_no,'ref_id'=>$rack_rdid,'ref_doc'=>'Production Rebin 315 Process before data','inserted_date'=>date('Y-m-d H:i:s'));
						
						$insert_id_1 = $this->Basic_model->insert_data('rack_master_updates',$insert_data_1);
					}
				}
			}
			//die();
			$row2 = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$storage_loc,'rack_id'=>$rack_id,'rack_no'=>$rack_no));
			
			if(!empty($row2)){
				$rack_material = $row2[0]->material;
				$rack_heatno = $row2[0]->heat_no;
				$rack_rbatch = $row2[0]->batch;
				$rack_qty = $row2[0]->qty;
				$rack_rid = $row2[0]->id;
				
				if($rack_material != ''){
					if($rack_material == $component){
						if($rack_heatno == $heat_no){
							if($rack_rbatch == $batch){
								
								$up_qty = $qty + $rack_qty;
								
								$this->Basic_model->update_data('rack_master',array('id'=>$rack_rid),array('qty'=>$up_qty));
								
								$insert_data_2 = array('storage_loc'=>$storage_loc,'rack_id'=>$rack_id,'rack_no'=>$rack_no,'department'=>'RM Store','rack_status'=>'IN','qty'=>$rack_qty,'material'=>$component,'heat_no'=>$rack_heatno,'batch'=>$rack_rbatch,'workorder_number'=>$wo_no,'ref_id'=>$rack_rid,'ref_doc'=>'Production Rebin 315 Process before data','inserted_date'=>date('Y-m-d H:i:s'));
								
								$insert_id_2 = $this->Basic_model->insert_data('rack_master_updates',$insert_data_2);
								
								$insert_data_3 = array('storage_loc'=>$storage_loc,'rack_id'=>$rack_id,'rack_no'=>$rack_no,'department'=>'RM Store','rack_status'=>'IN','qty'=>$up_qty,'material'=>$component,'heat_no'=>$heat_no,'batch'=>$batch,'workorder_number'=>$wo_no,'ref_id'=>$insert_id,'ref_doc'=>'Production Rebin 315 Process','inserted_date'=>date('Y-m-d H:i:s'));
								
								$insert_id_3 = $this->Basic_model->insert_data('rack_master_updates',$insert_data_3);
							}	
						} 
					} 
				} else{
					$up_qty = $qty;
					
					$insert_data_3 = array('storage_loc'=>$storage_loc,'rack_id'=>$rack_id,'rack_no'=>$rack_no,'department'=>'RM Store','rack_status'=>'IN','qty'=>$up_qty,'material'=>$component,'heat_no'=>$heat_no,'batch'=>$batch,'workorder_number'=>$wo_no,'ref_id'=>$insert_id,'ref_doc'=>'Production Rebin 315 Process','inserted_date'=>date('Y-m-d H:i:s'));
					
				
					$insert_id_3 = $this->Basic_model->insert_data('rack_master_updates',$insert_data_3);
					
					//$insert_data_4 = array('storage_loc'=>$storage_loc,'rack_id'=>$rack_id,'rack_no'=>$rack_no,'department'=>'RM Store','rack_status'=>'IN','qty'=>up_qty,'material'=>$component,'heat_no'=>$heat_no,'batch'=>$batch,'ref_id'=>$insert_id,'ref_doc'=>'Production Rebin 315 Process','updated_date'=>date('Y-m-d H:i:s'),'status'=> '1');
				
					$this->Basic_model->update_data('rack_master',array('id'=>$rack_rid),array('storage_loc'=>$storage_loc,'rack_id'=>$rack_id,'rack_no'=>$rack_no,'department'=>'RM Store','rack_status'=>'IN','qty'=>$up_qty,'material'=>$component,'heat_no'=>$heat_no,'batch'=>$batch,'ref_id'=>$insert_id,'ref_doc'=>'Production Rebin 315 Process','updated_date'=>date('Y-m-d H:i:s'),'workorder_no'=>$wo_no,'rm_id'=>$rm_id,'status'=> '1'));
					//$insert_id_4 = $this->Basic_model->insert_data('rack_master',$insert_data_4);
				}
			}
			echo 1;
			
		}
		// Production Rebin 315 Movement Data and It's Sub Functionalities
		
		// SFG Rebin Data and It's Sub Functionalities
		public function sfg_rebin($id=''){	
			
			if ($this->input->is_ajax_request()) {
				$this->load->model('Sfg_rebin');
				$list = $this->Sfg_rebin->get_datatables();
				//print_r($this->db->last_query());die();
				$data = array();
				$no = $_POST['start'];
				foreach ($list as $pr) {
					
					if($pr->status == 0 || $pr->status == 2){
						$style = '';
						
					} else{
						$style = 'td_clr';
						
					}
					
					
					$no++;
					$row = array();
					$row[] = $no;
					$row[] = date("d-m-Y",strtotime($pr->added_datetime));
					$row[] = $pr->trace_id;
					$row[] = $pr->wo_no;
					$row[] = $pr->part_no;
					$row[] = $pr->component;
					$row[] = $pr->heat_no;
					$row[] = $pr->batch; 
					$row[] = $pr->qty; 
					$row[] = $pr->doc_no_314; 
					$row[] = $pr->added_by; 
					$row[] = '<span class="'.$style.'">'.$pr->sap_status.'</span>'; ; 
					$data[] = $row;
				}
 
				$output = array(
                        "draw" => $_POST['draw'],
                        "recordsTotal" => $this->Sfg_rebin->count_all(),
                        "recordsFiltered" => $this->Sfg_rebin->count_filtered(),
                        "data" => $data,
                );
				//output to json format
				echo json_encode($output); exit;
			}
			
			$data = array();
			
			$data['content'] 	= $this->load->view('production/sfg_rebin', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		
		public function sfg_get_rack_det($id=''){			
			$trace_id = $this->input->post('trace_id');
			$doc_number = $this->input->post('doc_number');
			$wo_no = $this->input->post('wo_no');
			$qty = $this->input->post('qty');
			$part_no = $this->input->post('part_no');
			$heat_no = $this->input->post('heat_no');
			$batch = $this->input->post('batch');
			$input_loc = $this->input->post('input_loc');
			
			$quantity = explode('.',$qty);
			
			$actual_qty = trim($quantity[0],' ');
			
			
			
			$row4 = $this->Basic_model->get_data('sfg_rebin',array('wo_no'=>$wo_no,'trace_id'=>$trace_id,'doc_number'=>$doc_number));
			//print_r($this->db->last_query()); die();
			if(!empty($row4)){
				$alr_qty = 0;
				foreach($row4 as $rw){
					$alr_qty = $rw->qty + $alr_qty;
				}
			}else{
				$alr_qty = 0;
			}
			
			$av_qty = $qty - $alr_qty;
			
			$row = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$input_loc,'material'=>$part_no,'workorder_no'=>$wo_no));
			//print_r($this->db->last_query());die();
			if(!empty($row)){
				$location_qty = $row[0]->qty;
				echo $location_qty.'$'.$av_qty;
			} else{
				echo "error_3";
			}
			
			
			
		}
		
		
		
		public function sfg_rebin_insert($id=''){			
			$rack_details = $this->input->post('rack_details');
			$heat_no = $this->input->post('heat_no');
			$batch = $this->input->post('batch');
			$qc_tag = $this->input->post('qc_tag');
			$trace_id = $this->input->post('trace_id');
			$wo_no = $this->input->post('wo_no');
			$part_no = $this->input->post('part_no');
			$doc_number = $this->input->post('doc_number');
			$input_loc = $this->input->post('input_loc');
			$tag_qty = $this->input->post('tag_qty');
			$loc_qty = $this->input->post('loc_qty');
			$qty = $this->input->post('qty');
			$user = $this->input->post('user');
			$added_ip = getenv("REMOTE_ADDR");
			
			
			$insert_data = array('tag'=>$qc_tag,'trace_id'=>$trace_id,'wo_no'=>$wo_no,'part_no'=>$part_no,'heat_no'=>$heat_no,'batch'=>$batch,'doc_number'=>$doc_number,'tag_qty'=>$tag_qty,'input_loc'=>$input_loc,'loc_qty'=>$loc_qty,'qty'=>$qty,'rack_details'=>$rack_details,'doc_no_314'=>'','status'=>'1','sap_status'=>'SAP Error','added_by'=>$user,'added_ip'=>$added_ip,'added_datetime'=>date("Y-m-d H:i:s"));
			
			$insert_id = $this->Basic_model->insert_data('sfg_rebin',$insert_data);
			
			echo $insert_id;
		
		}
		
		public function sfg_rebin_stock($id=''){			
			$rack_details = $this->input->post('rack_details');
			$heat_no = $this->input->post('heat_no');
			$batch = $this->input->post('batch');
			$qc_tag = $this->input->post('qc_tag');
			$trace_id = $this->input->post('trace_id');
			$wo_no = $this->input->post('wo_no');
			$part_no = $this->input->post('part_no');
			$doc_number = $this->input->post('doc_number');
			$input_loc = $this->input->post('input_loc');
			$tag_qty = $this->input->post('tag_qty');
			$loc_qty = $this->input->post('loc_qty');
			$qty = $this->input->post('qty');
			$user = $this->input->post('user');
			$insert_id = $this->input->post('insert_id');
			$doc_314 = $this->input->post('doc_314');
			$added_ip = getenv("REMOTE_ADDR");
			
			
			
			
			
			$this->Basic_model->update_data('sfg_rebin',array('id'=>$insert_id),array('status'=>'2','sap_status'=>'Completed','doc_no_314'=>$doc_314));
			
			
			$row = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$input_loc,'material'=>$part_no,'workorder_no'=>$wo_no,'rack_id'=>'IN'));
			
			if(!empty($row)){
				$rack_upid = $row[0]->id;
				$rack_upqty = $row[0]->qty;
				$rack_rack_id = $row[0]->rack_id;
				$rack_rack_no = $row[0]->rack_no;
				$rack_department = $row[0]->department;
				$rack_rack_status = $row[0]->rack_status;
				$rack_heat_no = $row[0]->heat_no;
				$rack_batch = $row[0]->batch;
				$rack_storage_location = $row[0]->storage_loc;
				
				$upd_qty = $rack_upqty - $qty;
				
				$this->Basic_model->update_data('rack_master',array('id'=>$rack_upid),array('qty'=>$upd_qty));
				
				$insert_data = array('storage_loc'=>$rack_storage_location,'rack_id'=>$rack_rack_id,'rack_no'=>$rack_rack_no,'department'=>$rack_department,'rack_status'=>$rack_rack_status,'qty'=>$rack_upqty,'material'=>$part_no,'heat_no'=>$rack_heat_no,'batch'=>$rack_batch,'workorder_number'=>$wo_no,'ref_id'=>$rack_upid,'ref_doc'=>'SFG Rebin Process before data','inserted_date'=>date('Y-m-d H:i:s'));
						
				$insert_id = $this->Basic_model->insert_data('rack_master_updates',$insert_data);
				
				$insert_data_1 =  array('storage_loc'=>$rack_storage_location,'rack_id'=>$rack_rack_id,'rack_no'=>$rack_rack_no,'department'=>$rack_department,'rack_status'=>$rack_rack_status,'qty'=>$upd_qty,'material'=>$part_no,'heat_no'=>$rack_heat_no,'batch'=>$rack_batch,'workorder_number'=>$wo_no,'ref_id'=>$insert_id,'ref_doc'=>'SFG Rebin After Data','inserted_date'=>date('Y-m-d H:i:s'));
				
				$insert_id_1 = $this->Basic_model->insert_data('rack_master_updates',$insert_data_1);
			}
			

			$row2 = $this->Basic_model->get_data('sfg_issue',array('workorder_no'=>$wo_no,'material'=>$part_no,'po_trace'=>$trace_id,'313_doc'=>$doc_number));	

			
			if(!empty($row2)){
				$po_wo = $row2[0]->po_wo;
				
				$row3 = $this->Basic_model->get_data('issue_master',array('production_order'=>$po_wo));	
				
				if(!empty($row3)){
					$rack_id = $row3[0]->work_center;
					$location_im = $row3[0]->location;
			
					
					if($location_im == 'M/C SHOP 1'){
						$r_location = 'Shop 1';
					} else if($location_im == 'M/C SHOP 2'){
						$r_location = 'Shop 2';
					}   else if($location_im == 'M/C SHOP 2A'){
						$r_location = 'Shop 2A';
					}  else if($location_im == 'M/C SHOP 2B'){
						$r_location = 'Shop 2B';
					}  else if($location_im == 'M/C SHOP 3'){
						$r_location = 'Shop 3';
					}  else if($location_im == 'M/C SHOP 4'){
						$r_location = 'Shop 4';
					}   else if($location_im == 'M/C SHOP 3A'){
						$r_location = 'Shop 3A';
					}   else if($location_im == 'M/C SHOP 3B'){
						$r_location = 'Shop 3B';
					}   else if($location_im == 'M/C SHOP 4A'){
						$r_location = 'Shop 4A';
					}   else if($location_im == 'M/C SHOP 4B'){
						$r_location = 'Shop 4B';
					}   else if($location_im == 'M/C SHOP 5'){
						$r_location = 'Shop 5';
					}   else if($location_im == 'M/C SHOP 6'){
						$r_location = 'Shop 6';
					}    else if($location_im == 'M/C SHOP 5A'){
						$r_location = 'Shop 5A';
					}   else if($location_im == 'M/C SHOP 5B'){
						$r_location = 'Shop 5B';
					}   else if($location_im == 'M/C SHOP 6A'){
						$r_location = 'Shop 6A';
					}   else if($location_im == 'M/C SHOP 6B'){
						$r_location = 'Shop 6B';
					}    
					
					$row4 = $this->Basic_model->get_data('production_data',array('workorder_no'=>$po_wo));	
					
					if(!empty($row4)){
						$po_heat_code = $row3[0]->heat_code;
						$po_batch = $row3[0]->batch;
					} else{
						$po_heat_code = '';
						$po_batch = '';
					}
					
					$insert_data_3 = array('storage_loc'=>$rack_details,'rack_id'=>$rack_id,'rack_no'=>$r_location,'department'=>'FIFO Store','rack_status'=>'IN','qty'=>$qty,'material'=>$part_no,'heat_no'=>$po_heat_code,'batch'=>$po_batch,'workorder_number'=>$wo_no,'ref_id'=>$insert_id,'ref_doc'=>'SFG Rebin Process','inserted_date'=>date('Y-m-d H:i:s'));
					
				
					$insert_id_3 = $this->Basic_model->insert_data('rack_master_updates',$insert_data_3);
					
					$insert_data_4 = array('storage_loc'=>$rack_details,'rack_id'=>$rack_id,'rack_no'=>$r_location,'department'=>'FIFO Store','rack_status'=>'IN','qty'=>$qty,'material'=>$part_no,'heat_no'=>$po_heat_code,'batch'=>$po_batch,'ref_id'=>$insert_id,'workorder_no'=>$po_wo,'ref_doc'=>'SFG Rebin Process','updated_date'=>date('Y-m-d H:i:s'),'status'=> '1');
				
					
					$insert_id_4 = $this->Basic_model->insert_data('rack_master',$insert_data_4);
				}
			}
			
			
			echo 1;
			
		}
		
		// SFG Rebin Data and It's Sub Functionalities
		
		// Vendor Out Rebin Data and It's Sub Functionalities
		
		public function vo_rebin($id=''){			
			$data = array();
			
			$data['content'] 	= $this->load->view('production/vo_rebin', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		
		// SFG Rebin Data and It's Sub Functionalities
		
		
		
		public function vendor_movement($id=''){			
			$data = array();
			
			$data['content'] 	= $this->load->view('production/vendor_movement', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		
		public function get_details_vendor($id=''){			
			
			$qc_accept =  explode(':', $this->input->post('runchart'));
			
			$doc_no = $qc_accept[0];
			$po_number = $qc_accept[1];
			$line_no = $qc_accept[2];
			$supplier = $qc_accept[3];
			$phy_qty = $qc_accept[4];
			$user = $qc_accept[5];
			$uniquecode = $qc_accept[6];
			
			
			$row = $this->Basic_model->get_data('vendor_out',array('po_number'=>$po_number,'line_no'=>$line_no));
			
			$material = $row[0]->component;
			
			$row1 = $this->Basic_model->get_data('rack_master',array('rack_id'=>$doc_no,'material'=>$material));
			
			$rack_id = $row1[0]->id;
			$storage_loc = $row1[0]->storage_loc;
			$rack_qty = $row1[0]->qty;
			
			if($phy_qty <= $rack_qty){
				echo $material.":".$storage_loc.":".$rack_id.":".$phy_qty.":".$uniquecode;
			}else{
				echo "Error";
			}
			
			
			
			
		}
		
		public function get_vendor_rack_details($id=''){			
			
			$to_location =  explode('/', $this->input->post('to_location'));
			$tag_material =  $this->input->post('material');
			$tag_workorder_no =  $this->input->post('workorder_no');
			
			$storage_loc = $to_location[0];
			$rack_no = $to_location[1];
			$rack_id = $to_location[2];
			
			
			$row = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$storage_loc,'rack_no'=>$rack_no,'rack_id'=>$rack_id));
			
			if(!empty($row)){
				$material = $row[0]->material;
				$workorder_no = $row[0]->workorder_no;
				
				if(empty($material)){
					if(empty($workorder_no)){
						echo "1";
					}else{
						echo "Workorder Number available in Rack Master with empty Material. Please clear the rack";
					}
				} else{
					if($material == $tag_material){
						if(empty($workorder_no)){
							echo "Different Workorder / Empty Workorder available in the Rack. Cannot Move";
						}else{
							if($workorder_no == $tag_workorder_no){
								echo "1";
							}else{
								echo "Different Workorder available in the Rack. Cannot Move";
							}
						}
					}else{
						echo "Different Material available in Rack. Cannot Move";
					}
				}
				
			}else{
				echo "Given Rack Details not available in Rack Master.";
			}
			
			
			
		}
		
		public function move_vendor_data($id=''){			
			
			$to_location =  explode('/', $this->input->post('to_location'));
			$tag_material =  $this->input->post('material');
			$tag_workorder_no =  $this->input->post('workorder_no');
			$from_rack_id =  $this->input->post('from_rack_id');
			$quantity =  $this->input->post('quantity');
			$trace_id =  $this->input->post('trace_id');
			
			$storage_loc = $to_location[0];
			$rack_no = $to_location[1];
			$rack_id = $to_location[2];
			
			
			$row = $this->Basic_model->get_data('rack_master',array('storage_loc'=>$storage_loc,'rack_no'=>$rack_no,'rack_id'=>$rack_id));
			$row1 = $this->Basic_model->get_data('rack_master',array('id'=>$from_rack_id));
			
			$ref_id = $row1[0]->ref_id;
			$ref_qty = $row1[0]->qty;
			$upd_qty = $ref_qty - $quantity;
			
			$r_qty = $row[0]->qty;
			
			$n_qty = $r_qty + $quantity;
			
			if(!empty($row)){
				$rackid = $row[0]->id;
				$material = $row[0]->material;
				$workorder_no = $row[0]->workorder_no;
				
				if(empty($material)){
					if(empty($workorder_no)){
						
						$this->Basic_model->update_data('rack_master',array('id'=>$rackid),array('qty'=>$quantity,'material'=>$tag_material,'workorder_no'=>$tag_workorder_no,'ref_id'=>$ref_id,'ref_doc'=>'File Moved from Vendor IN to Production'));
						
						$this->Basic_model->update_data('rack_master',array('id'=>$from_rack_id),array('qty'=>$upd_qty)); 
						
						echo "1";
				
					}else{
						echo "Workorder Number available in Rack Master with empty Material. Please clear the rack";
					}
				} else{
					if($material == $tag_material){
						if(empty($workorder_no)){
							echo "Different Workorder / Empty Workorder available in the Rack. Cannot Move";
						}else{
							if($workorder_no == $tag_workorder_no){
								
								$this->Basic_model->update_data('rack_master',array('id'=>$rackid),array('qty'=>$n_qty,'ref_id'=>$ref_id,'ref_doc'=>'File Moved from Vendor IN to Production'));
						
								$this->Basic_model->update_data('rack_master',array('id'=>$from_rack_id),array('qty'=>$upd_qty));
								
								echo "1";
							}else{
								echo "Different Workorder available in the Rack. Cannot Move";
							}
						}
					}else{
						echo "Different Material available in Rack. Cannot Move";
					}
				}
				
			}else{
				echo "Given Rack Details not available in Rack Master.";
			}
			
			
			
		}
		
		
		// Vendor Out Rebin Data and It's Sub Functionalities
		
		public function machine_entries($id=''){
			
			
			$data = array();
			$data['machine_entries'] 	= $this->Basic_model->get_data('machine_entries', array("detached_status"=>'0')); 	
			$data['department'] 	= $this->Basic_model->get_data('department_new'); 	
			$data['machine_master'] 	= $this->Basic_model->get_data('machine_master'); 
			$data['edit_data'] 	= $id?$this->Basic_model->get_data('machine_entries',array('id'=>$id)):[];   			
			$data['content'] 	= $this->load->view('production/machine_entries', $data, TRUE);      
			$this->load->view('viewpage', $data);
		}
		
		
		public function detach_machine($id=''){
			
			if($this->input->post()){
				$post_data = $this->input->post();
			
				$edit_id = $post_data['edit_id'];
				$user = $post_data['user'];
				$ip = getenv("REMOTE_ADDR");
				$date_time = date('Y-m-d H:i:s');	
				
				$main_data = array('detached_status'=>"1",'detached_by'=>$post_data['user'],'detached_datetime'=>$date_time,'detached_ip'=>$ip);
				
				$insert_id = $this->Basic_model->update_data('machine_entries',array("id"=>$edit_id), $main_data);
					$alert_message = 'Machine Entry Detached Successfully';
					$this->session->set_flashdata('message',$alert_message);
				
				//$check = $this->Basic_model->get_data('issue_master', array('machine'=>$machine,'today'=>$today,'shift'=>$shift,'department'=>$department));
				
				//if(!empty($check)){
					
				//}
				
				
			}	
			
			
		}
		public function insert_machine($id=''){
			
			if($this->input->post()){
				$post_data = $this->input->post();
			
				$material_document = $post_data['material_document'];
				$emp_name = $post_data['emp_name'];
				$emp_id = $post_data['emp_id'];
				$department = $post_data['department'];
				$machine = $post_data['machine'];
				$today = $post_data['today'];
				$today_time = $post_data['today_time'];
				$shift = $post_data['shift'];
				$status = $post_data['status'];
				$user = $post_data['user'];
				$machine_details = $post_data['machine_details'];
				$machine_name = $post_data['machine_name'];
				$department_name = $post_data['department_name'];
				$ip = getenv("REMOTE_ADDR");
				$date_time = date('Y-m-d H:i:s');	
				
				$main_data = array('machine'=>$machine,'today'=>$today,'today_time'=>$today_time,'shift'=>$shift,'department'=>$department,'card_number'=>$material_document,'emp_name'=>$emp_name,'emp_id'=>$emp_id,'status'=>$post_data['status'],'machine_details'=>$post_data['machine_details'],'machine_name'=>$post_data['machine_name'],'department_name'=>$post_data['department_name'],'inserted_by'=>$post_data['user'],'inserted_datetime'=>$date_time,'inserted_ip'=>$ip);
				
				$insert_id = $this->Basic_model->insert_data('machine_entries',$main_data);
					$alert_message = 'Machine Entry Inserted Successfully';
					$this->session->set_flashdata('message',$alert_message);
				
				//$check = $this->Basic_model->get_data('issue_master', array('machine'=>$machine,'today'=>$today,'shift'=>$shift,'department'=>$department));
				
				//if(!empty($check)){
					
				//}
				
				
			}	
			
			
		}
		
		public function get_machine($id=''){
			$dept = $this->input->post('dept');
			
			$check = $this->Basic_model->get_data('machine_master', array('department'=>$dept));
			//print_r($this->db->last_query());
			$html = '';
			$html .= '<option value="">-- Select Machine ---</option>';
			
			foreach($check as $row){
				$html .= '<option value="'.$row->id.'">'.$row->machine.'</option>';
			}
			echo $html;
		}
		
		public function get_machine_details($id=''){
			$dept = $this->input->post('dept');
			$mach = $this->input->post('mach');
			
			$check1 = $this->Basic_model->get_data('department_new', array('department'=>$dept));
			$check = $this->Basic_model->get_data('machine_master', array('department'=>$check1[0]->id,'machine'=>$mach));
			//print_r($this->db->last_query());
			$html = $check1[0]->id.'::'.$check[0]->id;

			echo $html;
		}
		
		public function get_emp($id=''){
			
			$card = (int)$this->input->post('ac_tag');
			
			$conn = new mysqli("192.168.16.68","ingress","ingress","ingress");
			if (!$conn) {
			  die("Connection failed: " . $conn->connect_error);
			}

			$event = "SELECT * FROM ingress.user_info where cardnumber like '%".$card."%'";
			//$event = "SHOW COLUMNS FROM ingress.user_info";

			$result = $conn->query($event);
			//print_r($result);
			$i=1;
			$key = $result->fetch_assoc();
			//echo $key['Field'].'<br/>';
				echo $key['userid'].'-'.$key['username'];			
		}
		
		// SFG Rebin Data and It's Sub Functionalities
		
		public function machine_preview($id=''){
			$id = $this->input->get('id'); 
			$data = array();				
			$data['record'] 	= $this->Basic_model->get_data('machine_master',array('id'=>$id));
			
			$checkdt = $this->Basic_model->get_data("department_new",array("status"=>"1","id"=>$data['record'][0]->department));
			

			$qrtext = $checkdt[0]->department."::".$data['record'][0]->machine;
			
			$data['qrimage'] = $this->qrcodeGenerator($qrtext);
			
			echo $this->load->view('home/machine_preview', $data, TRUE);      
			
		}
		
	}
